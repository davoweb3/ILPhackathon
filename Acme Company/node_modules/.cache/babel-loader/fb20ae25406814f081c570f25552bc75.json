{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417;\n/**\n * @author Guenther Grau\n */\nvar PDF417ResultMetadata = /** @class */function () {\n  function PDF417ResultMetadata() {\n    this.segmentCount = -1;\n    this.fileSize = -1;\n    this.timestamp = -1;\n    this.checksum = -1;\n  }\n  /**\n   * The Segment ID represents the segment of the whole file distributed over different symbols.\n   *\n   * @return File segment index\n   */\n  PDF417ResultMetadata.prototype.getSegmentIndex = function () {\n    return this.segmentIndex;\n  };\n  PDF417ResultMetadata.prototype.setSegmentIndex = function (segmentIndex) {\n    this.segmentIndex = segmentIndex;\n  };\n  /**\n   * Is the same for each related PDF417 symbol\n   *\n   * @return File ID\n   */\n  PDF417ResultMetadata.prototype.getFileId = function () {\n    return this.fileId;\n  };\n  PDF417ResultMetadata.prototype.setFileId = function (fileId) {\n    this.fileId = fileId;\n  };\n  /**\n   * @return always null\n   * @deprecated use dedicated already parsed fields\n   */\n  //   @Deprecated\n  PDF417ResultMetadata.prototype.getOptionalData = function () {\n    return this.optionalData;\n  };\n  /**\n   * @param optionalData old optional data format as int array\n   * @deprecated parse and use new fields\n   */\n  //   @Deprecated\n  PDF417ResultMetadata.prototype.setOptionalData = function (optionalData) {\n    this.optionalData = optionalData;\n  };\n  /**\n   * @return true if it is the last segment\n   */\n  PDF417ResultMetadata.prototype.isLastSegment = function () {\n    return this.lastSegment;\n  };\n  PDF417ResultMetadata.prototype.setLastSegment = function (lastSegment) {\n    this.lastSegment = lastSegment;\n  };\n  /**\n   * @return count of segments, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getSegmentCount = function () {\n    return this.segmentCount;\n  };\n  PDF417ResultMetadata.prototype.setSegmentCount = function (segmentCount /*int*/) {\n    this.segmentCount = segmentCount;\n  };\n  PDF417ResultMetadata.prototype.getSender = function () {\n    return this.sender || null;\n  };\n  PDF417ResultMetadata.prototype.setSender = function (sender) {\n    this.sender = sender;\n  };\n  PDF417ResultMetadata.prototype.getAddressee = function () {\n    return this.addressee || null;\n  };\n  PDF417ResultMetadata.prototype.setAddressee = function (addressee) {\n    this.addressee = addressee;\n  };\n  /**\n   * Filename of the encoded file\n   *\n   * @return filename\n   */\n  PDF417ResultMetadata.prototype.getFileName = function () {\n    return this.fileName;\n  };\n  PDF417ResultMetadata.prototype.setFileName = function (fileName) {\n    this.fileName = fileName;\n  };\n  /**\n   * filesize in bytes of the encoded file\n   *\n   * @return filesize in bytes, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getFileSize = function () {\n    return this.fileSize;\n  };\n  PDF417ResultMetadata.prototype.setFileSize = function (fileSize /*long*/) {\n    this.fileSize = fileSize;\n  };\n  /**\n   * 16-bit CRC checksum using CCITT-16\n   *\n   * @return crc checksum, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getChecksum = function () {\n    return this.checksum;\n  };\n  PDF417ResultMetadata.prototype.setChecksum = function (checksum /*int*/) {\n    this.checksum = checksum;\n  };\n  /**\n   * unix epock timestamp, elapsed seconds since 1970-01-01\n   *\n   * @return elapsed seconds, -1 if not set\n   */\n  PDF417ResultMetadata.prototype.getTimestamp = function () {\n    return this.timestamp;\n  };\n  PDF417ResultMetadata.prototype.setTimestamp = function (timestamp /*long*/) {\n    this.timestamp = timestamp;\n  };\n  return PDF417ResultMetadata;\n}();\nexports.default = PDF417ResultMetadata;","map":{"version":3,"sources":["../../../src/core/pdf417/PDF417ResultMetadata.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;AAcG;;;;AAEH;AAEA;;AAEG;AACH,IAAA,oBAAA,GAAA,aAAA,YAAA;EAAA,SAAA,oBAAA,CAAA,EAAA;IAKY,IAAA,CAAA,YAAY,GAAmB,CAAC,CAAC;IAIjC,IAAA,CAAA,QAAQ,GAAoB,CAAC,CAAC;IAC9B,IAAA,CAAA,SAAS,GAAoB,CAAC,CAAC;IAC/B,IAAA,CAAA,QAAQ,GAAmB,CAAC,CAAC;EA0IzC;EAvII;;;;AAIG;EACI,oBAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;IACI,OAAO,IAAI,CAAC,YAAY;EAC5B,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,UAAuB,YAA4B,EAAA;IAC/C,IAAI,CAAC,YAAY,GAAG,YAAY;EACpC,CAAC;EAED;;;;AAIG;EACI,oBAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,YAAA;IACI,OAAO,IAAI,CAAC,MAAM;EACtB,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,MAAc,EAAA;IAC3B,IAAI,CAAC,MAAM,GAAG,MAAM;EACxB,CAAC;EAED;;;AAGG;EACH;EACO,oBAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;IACI,OAAO,IAAI,CAAC,YAAY;EAC5B,CAAC;EAED;;;AAGG;EACH;EACO,oBAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,UAAuB,YAAwB,EAAA;IAC3C,IAAI,CAAC,YAAY,GAAG,YAAY;EACpC,CAAC;EAGD;;AAEG;EACI,oBAAA,CAAA,SAAA,CAAA,aAAa,GAApB,YAAA;IACI,OAAO,IAAI,CAAC,WAAW;EAC3B,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,cAAc,GAArB,UAAsB,WAAoB,EAAA;IACtC,IAAI,CAAC,WAAW,GAAG,WAAW;EAClC,CAAC;EAED;;AAEG;EACI,oBAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,YAAA;IACI,OAAO,IAAI,CAAC,YAAY;EAC5B,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,UAAuB,YAAoB,CAAC,SAAO;IAC/C,IAAI,CAAC,YAAY,GAAG,YAAY;EACpC,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,YAAA;IACI,OAAO,IAAI,CAAC,MAAM,IAAI,IAAI;EAC9B,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,MAAc,EAAA;IAC3B,IAAI,CAAC,MAAM,GAAG,MAAM;EACxB,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,YAAA;IACI,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI;EACjC,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,UAAoB,SAAiB,EAAA;IACjC,IAAI,CAAC,SAAS,GAAG,SAAS;EAC9B,CAAC;EAED;;;;AAIG;EACI,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,YAAA;IACI,OAAO,IAAI,CAAC,QAAQ;EACxB,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,QAAgB,EAAA;IAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC5B,CAAC;EAED;;;;AAIG;EACI,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,YAAA;IACI,OAAO,IAAI,CAAC,QAAQ;EACxB,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,QAAgB,CAAC,UAAQ;IACxC,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC5B,CAAC;EAED;;;;AAIG;EACI,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,YAAA;IACI,OAAO,IAAI,CAAC,QAAQ;EACxB,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,QAAgB,CAAA,SAAO;IACtC,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC5B,CAAC;EAED;;;;AAIG;EACI,oBAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,YAAA;IACI,OAAO,IAAI,CAAC,SAAS;EACzB,CAAC;EAEM,oBAAA,CAAA,SAAA,CAAA,YAAY,GAAnB,UAAoB,SAAiB,CAAC,UAAQ;IAC1C,IAAI,CAAC,SAAS,GAAG,SAAS;EAC9B,CAAC;EAEL,OAAA,oBAAC;AAAD,CAAC,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417;\n/**\n * @author Guenther Grau\n */\nvar PDF417ResultMetadata = /** @class */ (function () {\n    function PDF417ResultMetadata() {\n        this.segmentCount = -1;\n        this.fileSize = -1;\n        this.timestamp = -1;\n        this.checksum = -1;\n    }\n    /**\n     * The Segment ID represents the segment of the whole file distributed over different symbols.\n     *\n     * @return File segment index\n     */\n    PDF417ResultMetadata.prototype.getSegmentIndex = function () {\n        return this.segmentIndex;\n    };\n    PDF417ResultMetadata.prototype.setSegmentIndex = function (segmentIndex) {\n        this.segmentIndex = segmentIndex;\n    };\n    /**\n     * Is the same for each related PDF417 symbol\n     *\n     * @return File ID\n     */\n    PDF417ResultMetadata.prototype.getFileId = function () {\n        return this.fileId;\n    };\n    PDF417ResultMetadata.prototype.setFileId = function (fileId) {\n        this.fileId = fileId;\n    };\n    /**\n     * @return always null\n     * @deprecated use dedicated already parsed fields\n     */\n    //   @Deprecated\n    PDF417ResultMetadata.prototype.getOptionalData = function () {\n        return this.optionalData;\n    };\n    /**\n     * @param optionalData old optional data format as int array\n     * @deprecated parse and use new fields\n     */\n    //   @Deprecated\n    PDF417ResultMetadata.prototype.setOptionalData = function (optionalData) {\n        this.optionalData = optionalData;\n    };\n    /**\n     * @return true if it is the last segment\n     */\n    PDF417ResultMetadata.prototype.isLastSegment = function () {\n        return this.lastSegment;\n    };\n    PDF417ResultMetadata.prototype.setLastSegment = function (lastSegment) {\n        this.lastSegment = lastSegment;\n    };\n    /**\n     * @return count of segments, -1 if not set\n     */\n    PDF417ResultMetadata.prototype.getSegmentCount = function () {\n        return this.segmentCount;\n    };\n    PDF417ResultMetadata.prototype.setSegmentCount = function (segmentCount /*int*/) {\n        this.segmentCount = segmentCount;\n    };\n    PDF417ResultMetadata.prototype.getSender = function () {\n        return this.sender || null;\n    };\n    PDF417ResultMetadata.prototype.setSender = function (sender) {\n        this.sender = sender;\n    };\n    PDF417ResultMetadata.prototype.getAddressee = function () {\n        return this.addressee || null;\n    };\n    PDF417ResultMetadata.prototype.setAddressee = function (addressee) {\n        this.addressee = addressee;\n    };\n    /**\n     * Filename of the encoded file\n     *\n     * @return filename\n     */\n    PDF417ResultMetadata.prototype.getFileName = function () {\n        return this.fileName;\n    };\n    PDF417ResultMetadata.prototype.setFileName = function (fileName) {\n        this.fileName = fileName;\n    };\n    /**\n     * filesize in bytes of the encoded file\n     *\n     * @return filesize in bytes, -1 if not set\n     */\n    PDF417ResultMetadata.prototype.getFileSize = function () {\n        return this.fileSize;\n    };\n    PDF417ResultMetadata.prototype.setFileSize = function (fileSize /*long*/) {\n        this.fileSize = fileSize;\n    };\n    /**\n     * 16-bit CRC checksum using CCITT-16\n     *\n     * @return crc checksum, -1 if not set\n     */\n    PDF417ResultMetadata.prototype.getChecksum = function () {\n        return this.checksum;\n    };\n    PDF417ResultMetadata.prototype.setChecksum = function (checksum /*int*/) {\n        this.checksum = checksum;\n    };\n    /**\n     * unix epock timestamp, elapsed seconds since 1970-01-01\n     *\n     * @return elapsed seconds, -1 if not set\n     */\n    PDF417ResultMetadata.prototype.getTimestamp = function () {\n        return this.timestamp;\n    };\n    PDF417ResultMetadata.prototype.setTimestamp = function (timestamp /*long*/) {\n        this.timestamp = timestamp;\n    };\n    return PDF417ResultMetadata;\n}());\nexports.default = PDF417ResultMetadata;\n//# sourceMappingURL=PDF417ResultMetadata.js.map"]},"metadata":{},"sourceType":"script"}