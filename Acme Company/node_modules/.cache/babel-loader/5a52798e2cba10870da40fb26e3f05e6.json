{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAVOTRADE\\\\Desktop\\\\Rezy barcode\\\\scanner\\\\scanner\\\\src\\\\scan\\\\Scan.js\",\n  _s = $RefreshSig$();\nimport \"./Scan.css\";\nimport ButtonStyle from \"../components/button\";\nimport ModalStyle from \"../components/Modal\";\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport Barcode from \"react-barcode\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport products from '../products.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3500';\nfunction Scan() {\n  _s();\n  const initialData = products;\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [stopStream, setStopStream] = useState(false);\n  const [filteredData, setFilteredData] = useState(initialData);\n  let navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    postToArduino(\"0\");\n    setOpen(false);\n  };\n  const postToArduino = option => {\n    // ... (your existing code)\n  };\n  const handleAccept = () => {\n    postToArduino(\"1\");\n    setTimeout(function () {\n      postToArduino(\"0\");\n      setOpen(false);\n      navigate(\"/step3\");\n    }, 2000);\n  };\n  const handleErrorWebCam = error => {\n    console.log(error);\n  };\n  const parseAndSendToEndpoint = result => {\n    if (result && result.text) {\n      // Extract the \"text\" property from the result\n      const textResult = result.text;\n\n      // Create an object to hold the data to be sent\n      const dataToSend = {\n        result: textResult\n      };\n\n      // Define the headers for the POST request\n      const headers = {\n        'Content-Type': 'application/json'\n      };\n\n      // Make the POST request to the endpoint\n      fetch(URL, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(dataToSend)\n      }).then(response => {\n        if (response.status === 200) {\n          // Request was successful\n          return response.json();\n        } else {\n          // Handle errors here\n          console.error('Error sending data to the endpoint');\n        }\n      }).then(responseData => {\n        // Handle the response from the endpoint if needed\n        console.log('Response from endpoint:', responseData);\n      }).catch(error => {\n        // Handle any network errors here\n        console.error('Network error:', error);\n      });\n    }\n  };\n  const handleScanWebCam = result => {\n    if (result && result.text) {\n      const resultText = result.text.toString();\n      setData(resultText);\n      if (!open) {\n        getProduct(resultText);\n      }\n      parseAndSendToEndpoint(result); // Send only text property\n    }\n  };\n\n  const getProduct = id => {\n    const foundElement = filteredData.find(item => item.Id === id);\n    if (foundElement) {\n      setProducto(foundElement);\n      setOpen(true);\n    } else {\n      console.log('Element not found');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"title\",\n        children: \"Step 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan a selected product listed on www.rezy.com, aim to the camera and\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Wait for the confirmation popup, once the bottle is recognized your bottle will be added to your wallet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          width: window.innerWidth < 1000 ? \"100%\" : \"25%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 12,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n            width: 500,\n            height: 500\n            // stopStream={stopStream}\n            ,\n            onUpdate: (err, result) => {\n              if (result) {\n                handleScanWebCam(result.text); // Send only text property\n                console.log(result);\n\n                // setData(result.text);\n                // setStopStream(true);\n              } else {\n                setData(\"Not Found\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        Text: \"Scan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalStyle, {\n      flag: open,\n      close: handleClose,\n      product: producto,\n      accept: handleAccept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(Scan, \"yPhIYLFRDL438uaWG6QUCUlDQ5E=\", false, function () {\n  return [useNavigate];\n});\n_c = Scan;\nexport default Scan;\nvar _c;\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"names":["ButtonStyle","ModalStyle","React","useState","QrReader","Grid","useNavigate","Barcode","BarcodeScannerComponent","products","jsxDEV","_jsxDEV","URL","Scan","_s","initialData","data","setData","producto","setProducto","stopStream","setStopStream","filteredData","setFilteredData","navigate","open","setOpen","handleClose","postToArduino","option","handleAccept","setTimeout","handleErrorWebCam","error","console","log","parseAndSendToEndpoint","result","text","textResult","dataToSend","headers","fetch","method","body","JSON","stringify","then","response","status","json","responseData","catch","handleScanWebCam","resultText","toString","getProduct","id","foundElement","find","item","Id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","style","width","window","innerWidth","xl","lg","md","sm","xs","height","onUpdate","err","Text","flag","close","product","accept","_c","$RefreshReg$"],"sources":["C:/Users/DAVOTRADE/Desktop/Rezy barcode/scanner/scanner/src/scan/Scan.js"],"sourcesContent":["import \"./Scan.css\";\nimport ButtonStyle from \"../components/button\";\nimport ModalStyle from \"../components/Modal\";\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport Barcode from \"react-barcode\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport products from '../products.json'\n\nconst URL = 'http://localhost:3500';\n\nfunction Scan() {\n  const initialData = products;\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [stopStream, setStopStream] = useState(false);\n  const [filteredData, setFilteredData] = useState(initialData);\n\n  let navigate = useNavigate();\n\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    postToArduino(\"0\");\n    setOpen(false);\n  };\n\n  const postToArduino = (option) => {\n    // ... (your existing code)\n  };\n\n  const handleAccept = () => {\n    postToArduino(\"1\");\n    setTimeout(function () {\n      postToArduino(\"0\");\n      setOpen(false);\n      navigate(\"/step3\");\n    }, 2000);\n  };\n\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n\n  const parseAndSendToEndpoint = (result) => {\n    if (result && result.text) {\n      // Extract the \"text\" property from the result\n      const textResult = result.text;\n\n      // Create an object to hold the data to be sent\n      const dataToSend = { result: textResult };\n\n      // Define the headers for the POST request\n      const headers = {\n        'Content-Type': 'application/json',\n      };\n\n      // Make the POST request to the endpoint\n      fetch(URL, {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(dataToSend),\n      })\n        .then((response) => {\n          if (response.status === 200) {\n            // Request was successful\n            return response.json();\n          } else {\n            // Handle errors here\n            console.error('Error sending data to the endpoint');\n          }\n        })\n        .then((responseData) => {\n          // Handle the response from the endpoint if needed\n          console.log('Response from endpoint:', responseData);\n        })\n        .catch((error) => {\n          // Handle any network errors here\n          console.error('Network error:', error);\n        });\n    }\n  };\n\n  const handleScanWebCam = (result) => {\n    if (result && result.text) {\n      const resultText = result.text.toString();\n      setData(resultText);\n      if (!open) {\n        getProduct(resultText);\n      }\n      parseAndSendToEndpoint(result); // Send only text property\n    }\n  };\n\n  const getProduct = (id) => {\n    const foundElement = filteredData.find(item => item.Id === id);\n\n    if (foundElement) {\n      setProducto(foundElement);\n      setOpen(true);\n    } else {\n      console.log('Element not found');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <label className=\"title\">Step 1</label>\n        <p>\n          Scan a selected product listed on www.rezy.com, aim to the camera and</p>\n          <p> Wait for the confirmation popup, once the bottle is recognized your bottle will be added to your wallet.</p>\n        \n\n        <Grid\n          container\n          style={{ width: window.innerWidth < 1000 ? \"100%\" : \"25%\" }}\n        >\n          <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n            <BarcodeScannerComponent\n              width={500}\n              height={500}\n              // stopStream={stopStream}\n              onUpdate={(err, result) => {\n                if (result) {\n                  handleScanWebCam(result.text); // Send only text property\n                  console.log(result);\n                 \n                  // setData(result.text);\n                  // setStopStream(true);\n                } else {\n                  setData(\"Not Found\");\n                }\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        <p>{data}</p>\n        <ButtonStyle Text={\"Scan!\"}></ButtonStyle>\n      </div>\n      <ModalStyle\n        flag={open}\n        close={handleClose}\n        product={producto}\n        accept={handleAccept}\n      ></ModalStyle>\n    </div>\n  );\n}\n\nexport default Scan;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}