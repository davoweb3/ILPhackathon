{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar OneDReader_1 = require(\"./OneDReader\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\nvar FormatException_1 = require(\"../FormatException\");\n/**\n * <p>Encapsulates functionality and implementation that is common to UPC and EAN families\n * of one-dimensional barcodes.</p>\n *\n * @author dswitkin@google.com (Daniel Switkin)\n * @author Sean Owen\n * @author alasdair@google.com (Alasdair Mackintosh)\n */\nvar AbstractUPCEANReader = /** @class */function (_super) {\n  __extends(AbstractUPCEANReader, _super);\n  function AbstractUPCEANReader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.decodeRowStringBuffer = '';\n    return _this;\n  }\n  // private final UPCEANExtensionSupport extensionReader;\n  // private final EANManufacturerOrgSupport eanManSupport;\n  /*\n  protected UPCEANReader() {\n      decodeRowStringBuffer = new StringBuilder(20);\n      extensionReader = new UPCEANExtensionSupport();\n      eanManSupport = new EANManufacturerOrgSupport();\n  }\n  */\n  AbstractUPCEANReader.findStartGuardPattern = function (row) {\n    var foundStart = false;\n    var startRange = null;\n    var nextStart = 0;\n    var counters = [0, 0, 0];\n    while (!foundStart) {\n      counters = [0, 0, 0];\n      startRange = AbstractUPCEANReader.findGuardPattern(row, nextStart, false, this.START_END_PATTERN, counters);\n      var start = startRange[0];\n      nextStart = startRange[1];\n      var quietStart = start - (nextStart - start);\n      if (quietStart >= 0) {\n        foundStart = row.isRange(quietStart, start, false);\n      }\n    }\n    return startRange;\n  };\n  AbstractUPCEANReader.checkChecksum = function (s) {\n    return AbstractUPCEANReader.checkStandardUPCEANChecksum(s);\n  };\n  AbstractUPCEANReader.checkStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    if (length === 0) return false;\n    var check = parseInt(s.charAt(length - 1), 10);\n    return AbstractUPCEANReader.getStandardUPCEANChecksum(s.substring(0, length - 1)) === check;\n  };\n  AbstractUPCEANReader.getStandardUPCEANChecksum = function (s) {\n    var length = s.length;\n    var sum = 0;\n    for (var i = length - 1; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n      sum += digit;\n    }\n    sum *= 3;\n    for (var i = length - 2; i >= 0; i -= 2) {\n      var digit = s.charAt(i).charCodeAt(0) - '0'.charCodeAt(0);\n      if (digit < 0 || digit > 9) {\n        throw new FormatException_1.default();\n      }\n      sum += digit;\n    }\n    return (1000 - sum) % 10;\n  };\n  AbstractUPCEANReader.decodeEnd = function (row, endStart) {\n    return AbstractUPCEANReader.findGuardPattern(row, endStart, false, AbstractUPCEANReader.START_END_PATTERN, new Array(AbstractUPCEANReader.START_END_PATTERN.length).fill(0));\n  };\n  AbstractUPCEANReader.findGuardPattern = function (row, rowOffset, whiteFirst, pattern, counters) {\n    var width = row.getSize();\n    rowOffset = whiteFirst ? row.getNextUnset(rowOffset) : row.getNextSet(rowOffset);\n    var counterPosition = 0;\n    var patternStart = rowOffset;\n    var patternLength = pattern.length;\n    var isWhite = whiteFirst;\n    for (var x = rowOffset; x < width; x++) {\n      if (row.get(x) !== isWhite) {\n        counters[counterPosition]++;\n      } else {\n        if (counterPosition === patternLength - 1) {\n          if (OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE) < AbstractUPCEANReader.MAX_AVG_VARIANCE) {\n            return [patternStart, x];\n          }\n          patternStart += counters[0] + counters[1];\n          var slice = counters.slice(2, counters.length);\n          for (var i = 0; i < counterPosition - 1; i++) {\n            counters[i] = slice[i];\n          }\n          counters[counterPosition - 1] = 0;\n          counters[counterPosition] = 0;\n          counterPosition--;\n        } else {\n          counterPosition++;\n        }\n        counters[counterPosition] = 1;\n        isWhite = !isWhite;\n      }\n    }\n    throw new NotFoundException_1.default();\n  };\n  AbstractUPCEANReader.decodeDigit = function (row, counters, rowOffset, patterns) {\n    this.recordPattern(row, rowOffset, counters);\n    var bestVariance = this.MAX_AVG_VARIANCE;\n    var bestMatch = -1;\n    var max = patterns.length;\n    for (var i = 0; i < max; i++) {\n      var pattern = patterns[i];\n      var variance = OneDReader_1.default.patternMatchVariance(counters, pattern, AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE);\n      if (variance < bestVariance) {\n        bestVariance = variance;\n        bestMatch = i;\n      }\n    }\n    if (bestMatch >= 0) {\n      return bestMatch;\n    } else {\n      throw new NotFoundException_1.default();\n    }\n  };\n  // These two values are critical for determining how permissive the decoding will be.\n  // We've arrived at these values through a lot of trial and error. Setting them any higher\n  // lets false positives creep in quickly.\n  AbstractUPCEANReader.MAX_AVG_VARIANCE = 0.48;\n  AbstractUPCEANReader.MAX_INDIVIDUAL_VARIANCE = 0.7;\n  /**\n   * Start/end guard pattern.\n   */\n  AbstractUPCEANReader.START_END_PATTERN = [1, 1, 1];\n  /**\n   * Pattern marking the middle of a UPC/EAN pattern, separating the two halves.\n   */\n  AbstractUPCEANReader.MIDDLE_PATTERN = [1, 1, 1, 1, 1];\n  /**\n   * end guard pattern.\n   */\n  AbstractUPCEANReader.END_PATTERN = [1, 1, 1, 1, 1, 1];\n  /**\n   * \"Odd\", or \"L\" patterns used to encode UPC/EAN digits.\n   */\n  AbstractUPCEANReader.L_PATTERNS = [[3, 2, 1, 1], [2, 2, 2, 1], [2, 1, 2, 2], [1, 4, 1, 1], [1, 1, 3, 2], [1, 2, 3, 1], [1, 1, 1, 4], [1, 3, 1, 2], [1, 2, 1, 3], [3, 1, 1, 2]];\n  return AbstractUPCEANReader;\n}(OneDReader_1.default);\nexports.default = AbstractUPCEANReader;","map":{"version":3,"names":["OneDReader_1","require","NotFoundException_1","FormatException_1","AbstractUPCEANReader","_super","__extends","_this","apply","arguments","decodeRowStringBuffer","findStartGuardPattern","row","foundStart","startRange","nextStart","counters","findGuardPattern","START_END_PATTERN","start","quietStart","isRange","checkChecksum","s","checkStandardUPCEANChecksum","length","check","parseInt","charAt","getStandardUPCEANChecksum","substring","sum","i","digit","charCodeAt","default","decodeEnd","endStart","Array","fill","rowOffset","whiteFirst","pattern","width","getSize","getNextUnset","getNextSet","counterPosition","patternStart","patternLength","isWhite","x","get","patternMatchVariance","MAX_INDIVIDUAL_VARIANCE","MAX_AVG_VARIANCE","slice","decodeDigit","patterns","recordPattern","bestVariance","bestMatch","max","variance","MIDDLE_PATTERN","END_PATTERN","L_PATTERNS"],"sources":["../../../src/core/oned/AbstractUPCEANReader.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}