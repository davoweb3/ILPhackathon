{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.oned {*/\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\nvar Code39Reader_1 = require(\"./Code39Reader\");\nvar Code128Reader_1 = require(\"./Code128Reader\");\nvar RSS14Reader_1 = require(\"./rss/RSS14Reader\");\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\nvar ITFReader_1 = require(\"./ITFReader\");\nvar MultiFormatUPCEANReader_1 = require(\"./MultiFormatUPCEANReader\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\nvar OneDReader_1 = require(\"./OneDReader\");\n/**\n * @author Daniel Switkin <dswitkin@google.com>\n * @author Sean Owen\n */\nvar MultiFormatOneDReader = /** @class */function (_super) {\n  __extends(MultiFormatOneDReader, _super);\n  function MultiFormatOneDReader(hints) {\n    var _this = _super.call(this) || this;\n    _this.readers = [];\n    var possibleFormats = !hints ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n    var useCode39CheckDigit = hints && hints.get(DecodeHintType_1.default.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n    if (possibleFormats) {\n      if (possibleFormats.includes(BarcodeFormat_1.default.EAN_13) || possibleFormats.includes(BarcodeFormat_1.default.EAN_8)) {\n        _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n      }\n      // if (possibleFormats.includes(BarcodeFormat.EAN_13) ||\n      //     possibleFormats.includes(BarcodeFormat.UPC_A) ||\n      //     possibleFormats.includes(BarcodeFormat.EAN_8) ||\n      //     possibleFormats.includes(BarcodeFormat.UPC_E)) {\n      //   readers.push(new MultiFormatUPCEANReader(hints));\n      // }\n      if (possibleFormats.includes(BarcodeFormat_1.default.CODE_39)) {\n        _this.readers.push(new Code39Reader_1.default(useCode39CheckDigit));\n      }\n      // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n      //    this.readers.push(new Code93Reader());\n      // }\n      if (possibleFormats.includes(BarcodeFormat_1.default.CODE_128)) {\n        _this.readers.push(new Code128Reader_1.default());\n      }\n      if (possibleFormats.includes(BarcodeFormat_1.default.ITF)) {\n        _this.readers.push(new ITFReader_1.default());\n      }\n      // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n      //    this.readers.push(new CodaBarReader());\n      // }\n      if (possibleFormats.includes(BarcodeFormat_1.default.RSS_14)) {\n        _this.readers.push(new RSS14Reader_1.default());\n      }\n      // if (possibleFormats.includes(BarcodeFormat.RSS_EXPANDED)) {\n      //   this.readers.push(new RSSExpandedReader());\n      // }\n    }\n\n    if (_this.readers.length === 0) {\n      // this.readers.push(new MultiFormatUPCEANReader(hints));\n      _this.readers.push(new Code39Reader_1.default());\n      // this.readers.push(new CodaBarReader());\n      // this.readers.push(new Code93Reader());\n      _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n      _this.readers.push(new Code128Reader_1.default());\n      _this.readers.push(new ITFReader_1.default());\n      _this.readers.push(new RSS14Reader_1.default());\n      // this.readers.push(new RSSExpandedReader());\n    }\n\n    return _this;\n  }\n  // @Override\n  MultiFormatOneDReader.prototype.decodeRow = function (rowNumber, row, hints) {\n    for (var i = 0; i < this.readers.length; i++) {\n      try {\n        return this.readers[i].decodeRow(rowNumber, row, hints);\n      } catch (re) {\n        // continue\n      }\n    }\n    throw new NotFoundException_1.default();\n  };\n  // @Override\n  MultiFormatOneDReader.prototype.reset = function () {\n    this.readers.forEach(function (reader) {\n      return reader.reset();\n    });\n  };\n  return MultiFormatOneDReader;\n}(OneDReader_1.default);\nexports.default = MultiFormatOneDReader;","map":{"version":3,"sources":["../../../src/core/oned/MultiFormatOneDReader.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*namespace com.google.zxing.oned {*/\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\nvar Code39Reader_1 = require(\"./Code39Reader\");\nvar Code128Reader_1 = require(\"./Code128Reader\");\nvar RSS14Reader_1 = require(\"./rss/RSS14Reader\");\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\nvar ITFReader_1 = require(\"./ITFReader\");\nvar MultiFormatUPCEANReader_1 = require(\"./MultiFormatUPCEANReader\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\nvar OneDReader_1 = require(\"./OneDReader\");\n/**\n * @author Daniel Switkin <dswitkin@google.com>\n * @author Sean Owen\n */\nvar MultiFormatOneDReader = /** @class */ (function (_super) {\n    __extends(MultiFormatOneDReader, _super);\n    function MultiFormatOneDReader(hints) {\n        var _this = _super.call(this) || this;\n        _this.readers = [];\n        var possibleFormats = !hints ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n        var useCode39CheckDigit = hints && hints.get(DecodeHintType_1.default.ASSUME_CODE_39_CHECK_DIGIT) !== undefined;\n        if (possibleFormats) {\n            if (possibleFormats.includes(BarcodeFormat_1.default.EAN_13) ||\n                possibleFormats.includes(BarcodeFormat_1.default.EAN_8)) {\n                _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n            }\n            // if (possibleFormats.includes(BarcodeFormat.EAN_13) ||\n            //     possibleFormats.includes(BarcodeFormat.UPC_A) ||\n            //     possibleFormats.includes(BarcodeFormat.EAN_8) ||\n            //     possibleFormats.includes(BarcodeFormat.UPC_E)) {\n            //   readers.push(new MultiFormatUPCEANReader(hints));\n            // }\n            if (possibleFormats.includes(BarcodeFormat_1.default.CODE_39)) {\n                _this.readers.push(new Code39Reader_1.default(useCode39CheckDigit));\n            }\n            // if (possibleFormats.includes(BarcodeFormat.CODE_93)) {\n            //    this.readers.push(new Code93Reader());\n            // }\n            if (possibleFormats.includes(BarcodeFormat_1.default.CODE_128)) {\n                _this.readers.push(new Code128Reader_1.default());\n            }\n            if (possibleFormats.includes(BarcodeFormat_1.default.ITF)) {\n                _this.readers.push(new ITFReader_1.default());\n            }\n            // if (possibleFormats.includes(BarcodeFormat.CODABAR)) {\n            //    this.readers.push(new CodaBarReader());\n            // }\n            if (possibleFormats.includes(BarcodeFormat_1.default.RSS_14)) {\n                _this.readers.push(new RSS14Reader_1.default());\n            }\n            // if (possibleFormats.includes(BarcodeFormat.RSS_EXPANDED)) {\n            //   this.readers.push(new RSSExpandedReader());\n            // }\n        }\n        if (_this.readers.length === 0) {\n            // this.readers.push(new MultiFormatUPCEANReader(hints));\n            _this.readers.push(new Code39Reader_1.default());\n            // this.readers.push(new CodaBarReader());\n            // this.readers.push(new Code93Reader());\n            _this.readers.push(new MultiFormatUPCEANReader_1.default(hints));\n            _this.readers.push(new Code128Reader_1.default());\n            _this.readers.push(new ITFReader_1.default());\n            _this.readers.push(new RSS14Reader_1.default());\n            // this.readers.push(new RSSExpandedReader());\n        }\n        return _this;\n    }\n    // @Override\n    MultiFormatOneDReader.prototype.decodeRow = function (rowNumber, row, hints) {\n        for (var i = 0; i < this.readers.length; i++) {\n            try {\n                return this.readers[i].decodeRow(rowNumber, row, hints);\n            }\n            catch (re) {\n                // continue\n            }\n        }\n        throw new NotFoundException_1.default();\n    };\n    // @Override\n    MultiFormatOneDReader.prototype.reset = function () {\n        this.readers.forEach(function (reader) { return reader.reset(); });\n    };\n    return MultiFormatOneDReader;\n}(OneDReader_1.default));\nexports.default = MultiFormatOneDReader;\n//# sourceMappingURL=MultiFormatOneDReader.js.map"]},"metadata":{},"sourceType":"script"}