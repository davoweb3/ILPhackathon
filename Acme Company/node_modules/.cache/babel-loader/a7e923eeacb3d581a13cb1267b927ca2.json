{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport { filterIceServers } from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window, browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers, browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender && !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack = window.RTCRtpSender.prototype.setTrack;\n  }\n}","map":{"version":3,"names":["utils","filterIceServers","shimRTCPeerConnection","shimGetUserMedia","shimGetDisplayMedia","shimPeerConnection","window","browserDetails","RTCIceGatherer","RTCIceCandidate","args","RTCSessionDescription","version","origMSTEnabled","Object","getOwnPropertyDescriptor","MediaStreamTrack","prototype","defineProperty","set","value","call","ev","Event","enabled","dispatchEvent","RTCRtpSender","get","_dtmf","undefined","track","kind","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","RTCPeerConnection","config","iceServers","log","shimReplaceTrack","replaceTrack","setTrack"],"sources":["C:/Users/DAVOTRADE/Desktop/Rezy barcode/scanner/scanner/node_modules/webrtc-adapter/src/js/edge/edge_shim.js"],"sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}