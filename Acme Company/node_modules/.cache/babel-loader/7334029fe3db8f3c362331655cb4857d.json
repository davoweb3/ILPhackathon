{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DetectorResult_1 = require(\"../common/DetectorResult\");\n/**\n * <p>Extends {@link DetectorResult} with more information specific to the Aztec format,\n * like the number of layers and whether it's compact.</p>\n *\n * @author Sean Owen\n */\nvar AztecDetectorResult = /** @class */function (_super) {\n  __extends(AztecDetectorResult, _super);\n  function AztecDetectorResult(bits, points, compact, nbDatablocks, nbLayers) {\n    var _this = _super.call(this, bits, points) || this;\n    _this.compact = compact;\n    _this.nbDatablocks = nbDatablocks;\n    _this.nbLayers = nbLayers;\n    return _this;\n  }\n  AztecDetectorResult.prototype.getNbLayers = function () {\n    return this.nbLayers;\n  };\n  AztecDetectorResult.prototype.getNbDatablocks = function () {\n    return this.nbDatablocks;\n  };\n  AztecDetectorResult.prototype.isCompact = function () {\n    return this.compact;\n  };\n  return AztecDetectorResult;\n}(DetectorResult_1.default);\nexports.default = AztecDetectorResult;","map":{"version":3,"names":["DetectorResult_1","require","AztecDetectorResult","_super","__extends","bits","points","compact","nbDatablocks","nbLayers","_this","call","prototype","getNbLayers","getNbDatablocks","isCompact","default"],"sources":["../../../src/core/aztec/AztecDetectorResult.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,IAAAA,gBAAA,GAAAC,OAAA;AAEA;;;;;;AAMA,IAAAC,mBAAA,0BAAAC,MAAA;EAAiDC,SAAA,CAAAF,mBAAA,EAAAC,MAAA;EAM7C,SAAAD,oBAAmBG,IAAe,EAC9BC,MAAqB,EACrBC,OAAgB,EAChBC,YAAoB,EACpBC,QAAgB;IAJpB,IAAAC,KAAA,GAKIP,MAAA,CAAAQ,IAAA,OAAMN,IAAI,EAAEC,MAAM,CAAC;IACnBI,KAAI,CAACH,OAAO,GAAGA,OAAO;IACtBG,KAAI,CAACF,YAAY,GAAGA,YAAY;IAChCE,KAAI,CAACD,QAAQ,GAAGA,QAAQ;;EAC5B;EAEOP,mBAAA,CAAAU,SAAA,CAAAC,WAAW,GAAlB;IACI,OAAO,IAAI,CAACJ,QAAQ;EACxB,CAAC;EAEMP,mBAAA,CAAAU,SAAA,CAAAE,eAAe,GAAtB;IACI,OAAO,IAAI,CAACN,YAAY;EAC5B,CAAC;EAEMN,mBAAA,CAAAU,SAAA,CAAAG,SAAS,GAAhB;IACI,OAAO,IAAI,CAACR,OAAO;EACvB,CAAC;EACL,OAAAL,mBAAC;AAAD,CAAC,CA5BgDF,gBAAA,CAAAgB,OAAc"},"metadata":{},"sourceType":"script"}