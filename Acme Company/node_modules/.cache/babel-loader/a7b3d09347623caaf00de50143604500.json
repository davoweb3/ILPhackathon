{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing.common {*/\nvar GridSampler_1 = require(\"./GridSampler\");\nvar BitMatrix_1 = require(\"./BitMatrix\");\nvar PerspectiveTransform_1 = require(\"./PerspectiveTransform\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\n * @author Sean Owen\n */\nvar DefaultGridSampler = /** @class */function (_super) {\n  __extends(DefaultGridSampler, _super);\n  function DefaultGridSampler() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /*@Override*/\n  DefaultGridSampler.prototype.sampleGrid = function (image, dimensionX /*int*/, dimensionY /*int*/, p1ToX /*float*/, p1ToY /*float*/, p2ToX /*float*/, p2ToY /*float*/, p3ToX /*float*/, p3ToY /*float*/, p4ToX /*float*/, p4ToY /*float*/, p1FromX /*float*/, p1FromY /*float*/, p2FromX /*float*/, p2FromY /*float*/, p3FromX /*float*/, p3FromY /*float*/, p4FromX /*float*/, p4FromY /*float*/) {\n    var transform = PerspectiveTransform_1.default.quadrilateralToQuadrilateral(p1ToX, p1ToY, p2ToX, p2ToY, p3ToX, p3ToY, p4ToX, p4ToY, p1FromX, p1FromY, p2FromX, p2FromY, p3FromX, p3FromY, p4FromX, p4FromY);\n    return this.sampleGridWithTransform(image, dimensionX, dimensionY, transform);\n  };\n  /*@Override*/\n  DefaultGridSampler.prototype.sampleGridWithTransform = function (image, dimensionX /*int*/, dimensionY /*int*/, transform) {\n    if (dimensionX <= 0 || dimensionY <= 0) {\n      throw new NotFoundException_1.default();\n    }\n    var bits = new BitMatrix_1.default(dimensionX, dimensionY);\n    var points = new Float32Array(2 * dimensionX);\n    for (var y = 0; y < dimensionY; y++) {\n      var max = points.length;\n      var iValue = y + 0.5;\n      for (var x = 0; x < max; x += 2) {\n        points[x] = x / 2 + 0.5;\n        points[x + 1] = iValue;\n      }\n      transform.transformPoints(points);\n      // Quick check to see if points transformed to something inside the image\n      // sufficient to check the endpoints\n      GridSampler_1.default.checkAndNudgePoints(image, points);\n      try {\n        for (var x = 0; x < max; x += 2) {\n          if (image.get(Math.floor(points[x]), Math.floor(points[x + 1]))) {\n            // Black(-ish) pixel\n            bits.set(x / 2, y);\n          }\n        }\n      } catch (aioobe /*: ArrayIndexOutOfBoundsException*/) {\n        // This feels wrong, but, sometimes if the finder patterns are misidentified, the resulting\n        // transform gets \"twisted\" such that it maps a straight line of points to a set of points\n        // whose endpoints are in bounds, but others are not. There is probably some mathematical\n        // way to detect this about the transformation that I don't know yet.\n        // This results in an ugly runtime exception despite our clever checks above -- can't have\n        // that. We could check each point's coordinates but that feels duplicative. We settle for\n        // catching and wrapping ArrayIndexOutOfBoundsException.\n        throw new NotFoundException_1.default();\n      }\n    }\n    return bits;\n  };\n  return DefaultGridSampler;\n}(GridSampler_1.default);\nexports.default = DefaultGridSampler;","map":{"version":3,"names":["GridSampler_1","require","BitMatrix_1","PerspectiveTransform_1","NotFoundException_1","DefaultGridSampler","_super","__extends","prototype","sampleGrid","image","dimensionX","dimensionY","p1ToX","p1ToY","p2ToX","p2ToY","p3ToX","p3ToY","p4ToX","p4ToY","p1FromX","p1FromY","p2FromX","p2FromY","p3FromX","p3FromY","p4FromX","p4FromY","transform","default","quadrilateralToQuadrilateral","sampleGridWithTransform","bits","points","Float32Array","y","max","length","iValue","x","transformPoints","checkAndNudgePoints","get","Math","floor","set","aioobe"],"sources":["../../../src/core/common/DefaultGridSampler.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}