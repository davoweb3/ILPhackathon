{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417.decoder;\n// import java.util.Formatter;\nvar Formatter_1 = require(\"../../util/Formatter\");\nvar BoundingBox_1 = require(\"./BoundingBox\");\n/**\n * @author Guenther Grau\n */\nvar DetectionResultColumn = /** @class */function () {\n  function DetectionResultColumn(boundingBox) {\n    this.boundingBox = new BoundingBox_1.default(boundingBox);\n    // this.codewords = new Codeword[boundingBox.getMaxY() - boundingBox.getMinY() + 1];\n    this.codewords = new Array(boundingBox.getMaxY() - boundingBox.getMinY() + 1);\n  }\n  /*final*/\n  DetectionResultColumn.prototype.getCodewordNearby = function (imageRow) {\n    var codeword = this.getCodeword(imageRow);\n    if (codeword != null) {\n      return codeword;\n    }\n    for (var i = 1; i < DetectionResultColumn.MAX_NEARBY_DISTANCE; i++) {\n      var nearImageRow = this.imageRowToCodewordIndex(imageRow) - i;\n      if (nearImageRow >= 0) {\n        codeword = this.codewords[nearImageRow];\n        if (codeword != null) {\n          return codeword;\n        }\n      }\n      nearImageRow = this.imageRowToCodewordIndex(imageRow) + i;\n      if (nearImageRow < this.codewords.length) {\n        codeword = this.codewords[nearImageRow];\n        if (codeword != null) {\n          return codeword;\n        }\n      }\n    }\n    return null;\n  };\n  /*final int*/\n  DetectionResultColumn.prototype.imageRowToCodewordIndex = function (imageRow) {\n    return imageRow - this.boundingBox.getMinY();\n  };\n  /*final void*/\n  DetectionResultColumn.prototype.setCodeword = function (imageRow, codeword) {\n    this.codewords[this.imageRowToCodewordIndex(imageRow)] = codeword;\n  };\n  /*final*/\n  DetectionResultColumn.prototype.getCodeword = function (imageRow) {\n    return this.codewords[this.imageRowToCodewordIndex(imageRow)];\n  };\n  /*final*/\n  DetectionResultColumn.prototype.getBoundingBox = function () {\n    return this.boundingBox;\n  };\n  /*final*/\n  DetectionResultColumn.prototype.getCodewords = function () {\n    return this.codewords;\n  };\n  // @Override\n  DetectionResultColumn.prototype.toString = function () {\n    var e_1, _a;\n    var formatter = new Formatter_1.default();\n    var row = 0;\n    try {\n      for (var _b = __values(this.codewords), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var codeword = _c.value;\n        if (codeword == null) {\n          formatter.format('%3d:    |   %n', row++);\n          continue;\n        }\n        formatter.format('%3d: %3d|%3d%n', row++, codeword.getRowNumber(), codeword.getValue());\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return formatter.toString();\n  };\n  DetectionResultColumn.MAX_NEARBY_DISTANCE = 5;\n  return DetectionResultColumn;\n}();\nexports.default = DetectionResultColumn;","map":{"version":3,"names":["Formatter_1","require","BoundingBox_1","DetectionResultColumn","boundingBox","default","codewords","Array","getMaxY","getMinY","prototype","getCodewordNearby","imageRow","codeword","getCodeword","i","MAX_NEARBY_DISTANCE","nearImageRow","imageRowToCodewordIndex","length","setCodeword","getBoundingBox","getCodewords","toString","formatter","row","_b","__values","_c","next","done","value","format","getRowNumber","getValue"],"sources":["../../../../src/core/pdf417/decoder/DetectionResultColumn.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}