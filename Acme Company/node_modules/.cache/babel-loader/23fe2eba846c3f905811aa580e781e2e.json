{"ast":null,"code":"\"use strict\";\n\n/*\n* Copyright 2012 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417.decoder.ec;\n// import com.google.zxing.ChecksumException;\nvar ChecksumException_1 = require(\"../../../ChecksumException\");\nvar ModulusPoly_1 = require(\"./ModulusPoly\");\nvar ModulusGF_1 = require(\"./ModulusGF\");\n/**\n * <p>PDF417 error correction implementation.</p>\n *\n * <p>This <a href=\"http://en.wikipedia.org/wiki/Reed%E2%80%93Solomon_error_correction#Example\">example</a>\n * is quite useful in understanding the algorithm.</p>\n *\n * @author Sean Owen\n * @see com.google.zxing.common.reedsolomon.ReedSolomonDecoder\n */\nvar ErrorCorrection = /** @class */function () {\n  function ErrorCorrection() {\n    this.field = ModulusGF_1.default.PDF417_GF;\n  }\n  /**\n   * @param received received codewords\n   * @param numECCodewords number of those codewords used for EC\n   * @param erasures location of erasures\n   * @return number of errors\n   * @throws ChecksumException if errors cannot be corrected, maybe because of too many errors\n   */\n  ErrorCorrection.prototype.decode = function (received, numECCodewords, erasures) {\n    var e_1, _a;\n    var poly = new ModulusPoly_1.default(this.field, received);\n    var S = new Int32Array(numECCodewords);\n    var error = false;\n    for (var i /*int*/ = numECCodewords; i > 0; i--) {\n      var evaluation = poly.evaluateAt(this.field.exp(i));\n      S[numECCodewords - i] = evaluation;\n      if (evaluation !== 0) {\n        error = true;\n      }\n    }\n    if (!error) {\n      return 0;\n    }\n    var knownErrors = this.field.getOne();\n    if (erasures != null) {\n      try {\n        for (var erasures_1 = __values(erasures), erasures_1_1 = erasures_1.next(); !erasures_1_1.done; erasures_1_1 = erasures_1.next()) {\n          var erasure = erasures_1_1.value;\n          var b = this.field.exp(received.length - 1 - erasure);\n          // Add (1 - bx) term:\n          var term = new ModulusPoly_1.default(this.field, new Int32Array([this.field.subtract(0, b), 1]));\n          knownErrors = knownErrors.multiply(term);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (erasures_1_1 && !erasures_1_1.done && (_a = erasures_1.return)) _a.call(erasures_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    var syndrome = new ModulusPoly_1.default(this.field, S);\n    // syndrome = syndrome.multiply(knownErrors);\n    var sigmaOmega = this.runEuclideanAlgorithm(this.field.buildMonomial(numECCodewords, 1), syndrome, numECCodewords);\n    var sigma = sigmaOmega[0];\n    var omega = sigmaOmega[1];\n    // sigma = sigma.multiply(knownErrors);\n    var errorLocations = this.findErrorLocations(sigma);\n    var errorMagnitudes = this.findErrorMagnitudes(omega, sigma, errorLocations);\n    for (var i /*int*/ = 0; i < errorLocations.length; i++) {\n      var position = received.length - 1 - this.field.log(errorLocations[i]);\n      if (position < 0) {\n        throw ChecksumException_1.default.getChecksumInstance();\n      }\n      received[position] = this.field.subtract(received[position], errorMagnitudes[i]);\n    }\n    return errorLocations.length;\n  };\n  /**\n   *\n   * @param ModulusPoly\n   * @param a\n   * @param ModulusPoly\n   * @param b\n   * @param int\n   * @param R\n   * @throws ChecksumException\n   */\n  ErrorCorrection.prototype.runEuclideanAlgorithm = function (a, b, R) {\n    // Assume a's degree is >= b's\n    if (a.getDegree() < b.getDegree()) {\n      var temp = a;\n      a = b;\n      b = temp;\n    }\n    var rLast = a;\n    var r = b;\n    var tLast = this.field.getZero();\n    var t = this.field.getOne();\n    // Run Euclidean algorithm until r's degree is less than R/2\n    while (r.getDegree() >= Math.round(R / 2)) {\n      var rLastLast = rLast;\n      var tLastLast = tLast;\n      rLast = r;\n      tLast = t;\n      // Divide rLastLast by rLast, with quotient in q and remainder in r\n      if (rLast.isZero()) {\n        // Oops, Euclidean algorithm already terminated?\n        throw ChecksumException_1.default.getChecksumInstance();\n      }\n      r = rLastLast;\n      var q = this.field.getZero();\n      var denominatorLeadingTerm = rLast.getCoefficient(rLast.getDegree());\n      var dltInverse = this.field.inverse(denominatorLeadingTerm);\n      while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n        var degreeDiff = r.getDegree() - rLast.getDegree();\n        var scale = this.field.multiply(r.getCoefficient(r.getDegree()), dltInverse);\n        q = q.add(this.field.buildMonomial(degreeDiff, scale));\n        r = r.subtract(rLast.multiplyByMonomial(degreeDiff, scale));\n      }\n      t = q.multiply(tLast).subtract(tLastLast).negative();\n    }\n    var sigmaTildeAtZero = t.getCoefficient(0);\n    if (sigmaTildeAtZero === 0) {\n      throw ChecksumException_1.default.getChecksumInstance();\n    }\n    var inverse = this.field.inverse(sigmaTildeAtZero);\n    var sigma = t.multiply(inverse);\n    var omega = r.multiply(inverse);\n    return [sigma, omega];\n  };\n  /**\n   *\n   * @param errorLocator\n   * @throws ChecksumException\n   */\n  ErrorCorrection.prototype.findErrorLocations = function (errorLocator) {\n    // This is a direct application of Chien's search\n    var numErrors = errorLocator.getDegree();\n    var result = new Int32Array(numErrors);\n    var e = 0;\n    for (var i /*int*/ = 1; i < this.field.getSize() && e < numErrors; i++) {\n      if (errorLocator.evaluateAt(i) === 0) {\n        result[e] = this.field.inverse(i);\n        e++;\n      }\n    }\n    if (e !== numErrors) {\n      throw ChecksumException_1.default.getChecksumInstance();\n    }\n    return result;\n  };\n  ErrorCorrection.prototype.findErrorMagnitudes = function (errorEvaluator, errorLocator, errorLocations) {\n    var errorLocatorDegree = errorLocator.getDegree();\n    var formalDerivativeCoefficients = new Int32Array(errorLocatorDegree);\n    for (var i /*int*/ = 1; i <= errorLocatorDegree; i++) {\n      formalDerivativeCoefficients[errorLocatorDegree - i] = this.field.multiply(i, errorLocator.getCoefficient(i));\n    }\n    var formalDerivative = new ModulusPoly_1.default(this.field, formalDerivativeCoefficients);\n    // This is directly applying Forney's Formula\n    var s = errorLocations.length;\n    var result = new Int32Array(s);\n    for (var i /*int*/ = 0; i < s; i++) {\n      var xiInverse = this.field.inverse(errorLocations[i]);\n      var numerator = this.field.subtract(0, errorEvaluator.evaluateAt(xiInverse));\n      var denominator = this.field.inverse(formalDerivative.evaluateAt(xiInverse));\n      result[i] = this.field.multiply(numerator, denominator);\n    }\n    return result;\n  };\n  return ErrorCorrection;\n}();\nexports.default = ErrorCorrection;","map":{"version":3,"names":["ChecksumException_1","require","ModulusPoly_1","ModulusGF_1","ErrorCorrection","field","default","PDF417_GF","prototype","decode","received","numECCodewords","erasures","poly","S","Int32Array","error","i","evaluation","evaluateAt","exp","knownErrors","getOne","erasures_1","__values","erasures_1_1","next","done","erasure","value","b","length","term","subtract","multiply","syndrome","sigmaOmega","runEuclideanAlgorithm","buildMonomial","sigma","omega","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","position","log","getChecksumInstance","a","R","getDegree","temp","rLast","r","tLast","getZero","t","Math","round","rLastLast","tLastLast","isZero","q","denominatorLeadingTerm","getCoefficient","dltInverse","inverse","degreeDiff","scale","add","multiplyByMonomial","negative","sigmaTildeAtZero","errorLocator","numErrors","result","e","getSize","errorEvaluator","errorLocatorDegree","formalDerivativeCoefficients","formalDerivative","s","xiInverse","numerator","denominator"],"sources":["../../../../../src/core/pdf417/decoder/ec/ErrorCorrection.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAEA;AACA,IAAAA,mBAAA,GAAAC,OAAA;AAEA,IAAAC,aAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAIA;;;;;;;;;AASA,IAAAG,eAAA;EAIE,SAAAA,gBAAA;IACE,IAAI,CAACC,KAAK,GAAGF,WAAA,CAAAG,OAAS,CAACC,SAAS;EAClC;EAEA;;;;;;;EAOOH,eAAA,CAAAI,SAAA,CAAAC,MAAM,GAAb,UAAcC,QAAoB,EAChCC,cAAmB,EACnBC,QAAoB;;IAEpB,IAAIC,IAAI,GAAgB,IAAIX,aAAA,CAAAI,OAAW,CAAC,IAAI,CAACD,KAAK,EAAEK,QAAQ,CAAC;IAC7D,IAAII,CAAC,GAAe,IAAIC,UAAU,CAACJ,cAAc,CAAC;IAClD,IAAIK,KAAK,GAAY,KAAK;IAC1B,KAAK,IAAIC,CAAC,CAAC,UAAUN,cAAc,EAAEM,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC/C,IAAIC,UAAU,GAAQL,IAAI,CAACM,UAAU,CAAC,IAAI,CAACd,KAAK,CAACe,GAAG,CAACH,CAAC,CAAC,CAAC;MACxDH,CAAC,CAACH,cAAc,GAAGM,CAAC,CAAC,GAAGC,UAAU;MAClC,IAAIA,UAAU,KAAK,CAAC,EAAE;QACpBF,KAAK,GAAG,IAAI;;;IAIhB,IAAI,CAACA,KAAK,EAAE;MACV,OAAO,CAAC;;IAGV,IAAIK,WAAW,GAAgB,IAAI,CAAChB,KAAK,CAACiB,MAAM,EAAE;IAClD,IAAIV,QAAQ,IAAI,IAAI,EAAE;;QACpB,KAAsB,IAAAW,UAAA,GAAAC,QAAA,CAAAZ,QAAQ,GAAAa,YAAA,GAAAF,UAAA,CAAAG,IAAA,KAAAD,YAAA,CAAAE,IAAA,EAAAF,YAAA,GAAAF,UAAA,CAAAG,IAAA,IAAE;UAA3B,IAAME,OAAO,GAAAH,YAAA,CAAAI,KAAA;UAChB,IAAIC,CAAC,GAAQ,IAAI,CAACzB,KAAK,CAACe,GAAG,CAACV,QAAQ,CAACqB,MAAM,GAAG,CAAC,GAAGH,OAAO,CAAC;UAC1D;UACA,IAAII,IAAI,GAAgB,IAAI9B,aAAA,CAAAI,OAAW,CAAC,IAAI,CAACD,KAAK,EAAE,IAAIU,UAAU,CAAC,CAAC,IAAI,CAACV,KAAK,CAAC4B,QAAQ,CAAC,CAAC,EAAEH,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;UACnGT,WAAW,GAAGA,WAAW,CAACa,QAAQ,CAACF,IAAI,CAAC;;;;;;;;;;;;;;IAI5C,IAAIG,QAAQ,GAAgB,IAAIjC,aAAA,CAAAI,OAAW,CAAC,IAAI,CAACD,KAAK,EAAES,CAAC,CAAC;IAC1D;IAEA,IAAIsB,UAAU,GACZ,IAAI,CAACC,qBAAqB,CAAC,IAAI,CAAChC,KAAK,CAACiC,aAAa,CAAC3B,cAAc,EAAE,CAAC,CAAC,EAAEwB,QAAQ,EAAExB,cAAc,CAAC;IACnG,IAAI4B,KAAK,GAAgBH,UAAU,CAAC,CAAC,CAAC;IACtC,IAAII,KAAK,GAAgBJ,UAAU,CAAC,CAAC,CAAC;IAEtC;IAEA,IAAIK,cAAc,GAAe,IAAI,CAACC,kBAAkB,CAACH,KAAK,CAAC;IAC/D,IAAII,eAAe,GAAe,IAAI,CAACC,mBAAmB,CAACJ,KAAK,EAAED,KAAK,EAAEE,cAAc,CAAC;IAExF,KAAK,IAAIxB,CAAC,CAAC,UAAU,CAAC,EAAEA,CAAC,GAAGwB,cAAc,CAACV,MAAM,EAAEd,CAAC,EAAE,EAAE;MACtD,IAAI4B,QAAQ,GAAQnC,QAAQ,CAACqB,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC1B,KAAK,CAACyC,GAAG,CAACL,cAAc,CAACxB,CAAC,CAAC,CAAC;MAC3E,IAAI4B,QAAQ,GAAG,CAAC,EAAE;QAChB,MAAM7C,mBAAA,CAAAM,OAAiB,CAACyC,mBAAmB,EAAE;;MAE/CrC,QAAQ,CAACmC,QAAQ,CAAC,GAAG,IAAI,CAACxC,KAAK,CAAC4B,QAAQ,CAACvB,QAAQ,CAACmC,QAAQ,CAAC,EAAEF,eAAe,CAAC1B,CAAC,CAAC,CAAC;;IAElF,OAAOwB,cAAc,CAACV,MAAM;EAC9B,CAAC;EAED;;;;;;;;;;EAUQ3B,eAAA,CAAAI,SAAA,CAAA6B,qBAAqB,GAA7B,UAA8BW,CAAc,EAAElB,CAAc,EAAEmB,CAAM;IAClE;IACA,IAAID,CAAC,CAACE,SAAS,EAAE,GAAGpB,CAAC,CAACoB,SAAS,EAAE,EAAE;MACjC,IAAIC,IAAI,GAAgBH,CAAC;MACzBA,CAAC,GAAGlB,CAAC;MACLA,CAAC,GAAGqB,IAAI;;IAGV,IAAIC,KAAK,GAAgBJ,CAAC;IAC1B,IAAIK,CAAC,GAAgBvB,CAAC;IACtB,IAAIwB,KAAK,GAAgB,IAAI,CAACjD,KAAK,CAACkD,OAAO,EAAE;IAC7C,IAAIC,CAAC,GAAgB,IAAI,CAACnD,KAAK,CAACiB,MAAM,EAAE;IAExC;IACA,OAAO+B,CAAC,CAACH,SAAS,EAAE,IAAIO,IAAI,CAACC,KAAK,CAACT,CAAC,GAAG,CAAC,CAAC,EAAE;MACzC,IAAIU,SAAS,GAAgBP,KAAK;MAClC,IAAIQ,SAAS,GAAgBN,KAAK;MAClCF,KAAK,GAAGC,CAAC;MACTC,KAAK,GAAGE,CAAC;MAET;MACA,IAAIJ,KAAK,CAACS,MAAM,EAAE,EAAE;QAClB;QACA,MAAM7D,mBAAA,CAAAM,OAAiB,CAACyC,mBAAmB,EAAE;;MAE/CM,CAAC,GAAGM,SAAS;MACb,IAAIG,CAAC,GAAgB,IAAI,CAACzD,KAAK,CAACkD,OAAO,EAAE;MACzC,IAAIQ,sBAAsB,GAAQX,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACF,SAAS,EAAE,CAAC;MACzE,IAAIe,UAAU,GAAQ,IAAI,CAAC5D,KAAK,CAAC6D,OAAO,CAACH,sBAAsB,CAAC;MAChE,OAAOV,CAAC,CAACH,SAAS,EAAE,IAAIE,KAAK,CAACF,SAAS,EAAE,IAAI,CAACG,CAAC,CAACQ,MAAM,EAAE,EAAE;QACxD,IAAIM,UAAU,GAAQd,CAAC,CAACH,SAAS,EAAE,GAAGE,KAAK,CAACF,SAAS,EAAE;QACvD,IAAIkB,KAAK,GAAQ,IAAI,CAAC/D,KAAK,CAAC6B,QAAQ,CAACmB,CAAC,CAACW,cAAc,CAACX,CAAC,CAACH,SAAS,EAAE,CAAC,EAAEe,UAAU,CAAC;QACjFH,CAAC,GAAGA,CAAC,CAACO,GAAG,CAAC,IAAI,CAAChE,KAAK,CAACiC,aAAa,CAAC6B,UAAU,EAAEC,KAAK,CAAC,CAAC;QACtDf,CAAC,GAAGA,CAAC,CAACpB,QAAQ,CAACmB,KAAK,CAACkB,kBAAkB,CAACH,UAAU,EAAEC,KAAK,CAAC,CAAC;;MAG7DZ,CAAC,GAAGM,CAAC,CAAC5B,QAAQ,CAACoB,KAAK,CAAC,CAACrB,QAAQ,CAAC2B,SAAS,CAAC,CAACW,QAAQ,EAAE;;IAGtD,IAAIC,gBAAgB,GAAQhB,CAAC,CAACQ,cAAc,CAAC,CAAC,CAAC;IAC/C,IAAIQ,gBAAgB,KAAK,CAAC,EAAE;MAC1B,MAAMxE,mBAAA,CAAAM,OAAiB,CAACyC,mBAAmB,EAAE;;IAG/C,IAAImB,OAAO,GAAQ,IAAI,CAAC7D,KAAK,CAAC6D,OAAO,CAACM,gBAAgB,CAAC;IACvD,IAAIjC,KAAK,GAAgBiB,CAAC,CAACtB,QAAQ,CAACgC,OAAO,CAAC;IAC5C,IAAI1B,KAAK,GAAgBa,CAAC,CAACnB,QAAQ,CAACgC,OAAO,CAAC;IAC5C,OAAO,CAAC3B,KAAK,EAAEC,KAAK,CAAC;EACvB,CAAC;EAED;;;;;EAKQpC,eAAA,CAAAI,SAAA,CAAAkC,kBAAkB,GAA1B,UAA2B+B,YAAyB;IAClD;IACA,IAAIC,SAAS,GAAQD,YAAY,CAACvB,SAAS,EAAE;IAC7C,IAAIyB,MAAM,GAAe,IAAI5D,UAAU,CAAC2D,SAAS,CAAC;IAClD,IAAIE,CAAC,GAAQ,CAAC;IACd,KAAK,IAAI3D,CAAC,CAAC,UAAU,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACZ,KAAK,CAACwE,OAAO,EAAE,IAAID,CAAC,GAAGF,SAAS,EAAEzD,CAAC,EAAE,EAAE;MACtE,IAAIwD,YAAY,CAACtD,UAAU,CAACF,CAAC,CAAC,KAAK,CAAC,EAAE;QACpC0D,MAAM,CAACC,CAAC,CAAC,GAAG,IAAI,CAACvE,KAAK,CAAC6D,OAAO,CAACjD,CAAC,CAAC;QACjC2D,CAAC,EAAE;;;IAGP,IAAIA,CAAC,KAAKF,SAAS,EAAE;MACnB,MAAM1E,mBAAA,CAAAM,OAAiB,CAACyC,mBAAmB,EAAE;;IAE/C,OAAO4B,MAAM;EACf,CAAC;EAEOvE,eAAA,CAAAI,SAAA,CAAAoC,mBAAmB,GAA3B,UAA4BkC,cAA2B,EACrDL,YAAyB,EACzBhC,cAA0B;IAC1B,IAAIsC,kBAAkB,GAAQN,YAAY,CAACvB,SAAS,EAAE;IACtD,IAAI8B,4BAA4B,GAAe,IAAIjE,UAAU,CAACgE,kBAAkB,CAAC;IACjF,KAAK,IAAI9D,CAAC,CAAC,UAAU,CAAC,EAAEA,CAAC,IAAI8D,kBAAkB,EAAE9D,CAAC,EAAE,EAAE;MACpD+D,4BAA4B,CAACD,kBAAkB,GAAG9D,CAAC,CAAC,GAClD,IAAI,CAACZ,KAAK,CAAC6B,QAAQ,CAACjB,CAAC,EAAEwD,YAAY,CAACT,cAAc,CAAC/C,CAAC,CAAC,CAAC;;IAE1D,IAAIgE,gBAAgB,GAAgB,IAAI/E,aAAA,CAAAI,OAAW,CAAC,IAAI,CAACD,KAAK,EAAE2E,4BAA4B,CAAC;IAE7F;IACA,IAAIE,CAAC,GAAQzC,cAAc,CAACV,MAAM;IAClC,IAAI4C,MAAM,GAAe,IAAI5D,UAAU,CAACmE,CAAC,CAAC;IAC1C,KAAK,IAAIjE,CAAC,CAAC,UAAU,CAAC,EAAEA,CAAC,GAAGiE,CAAC,EAAEjE,CAAC,EAAE,EAAE;MAClC,IAAIkE,SAAS,GAAQ,IAAI,CAAC9E,KAAK,CAAC6D,OAAO,CAACzB,cAAc,CAACxB,CAAC,CAAC,CAAC;MAC1D,IAAImE,SAAS,GAAQ,IAAI,CAAC/E,KAAK,CAAC4B,QAAQ,CAAC,CAAC,EAAE6C,cAAc,CAAC3D,UAAU,CAACgE,SAAS,CAAC,CAAC;MACjF,IAAIE,WAAW,GAAQ,IAAI,CAAChF,KAAK,CAAC6D,OAAO,CAACe,gBAAgB,CAAC9D,UAAU,CAACgE,SAAS,CAAC,CAAC;MACjFR,MAAM,CAAC1D,CAAC,CAAC,GAAG,IAAI,CAACZ,KAAK,CAAC6B,QAAQ,CAACkD,SAAS,EAAEC,WAAW,CAAC;;IAEzD,OAAOV,MAAM;EACf,CAAC;EACH,OAAAvE,eAAC;AAAD,CAAC,EA3KD"},"metadata":{},"sourceType":"script"}