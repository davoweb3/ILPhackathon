{"ast":null,"code":"/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(transceiver.dtlsTransport.getLocalParameters(), type === 'offer' ? 'actpass' : dtlsRole || 'active');\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId || transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' + trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' + transceiver.sendEncodingParameters[0].ssrc + ' ' + transceiver.sendEncodingParameters[0].rtx.ssrc + '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc + ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function (url) {\n        var validTurn = url.indexOf('turn:') === 0 && url.indexOf('transport=udp') !== -1 && url.indexOf('turn:[') === -1 && !hasTurn;\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 && url.indexOf('?transport=udp') === -1;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n  var findCodecByPayloadType = function (pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt || codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n  var rtxCapabilityMatches = function (lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec && lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n  localCapabilities.codecs.forEach(function (lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() && lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' && lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec, localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels, rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function (fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type && lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n  localCapabilities.headerExtensions.forEach(function (lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length; i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldÑ• are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates().find(function (remoteCandidate) {\n    return candidate.foundation === remoteCandidate.foundation && candidate.ip === remoteCandidate.ip && candidate.port === remoteCandidate.port && candidate.priority === remoteCandidate.priority && candidate.protocol === remoteCandidate.protocol && candidate.type === remoteCandidate.type;\n  });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\nmodule.exports = function (window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack', {\n      track: track\n    }));\n  }\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack', {\n      track: track\n    }));\n  }\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {\n      receiver: receiver\n    };\n    trackEvent.streams = streams;\n    window.setTimeout(function () {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n  var RTCPeerConnection = function (config) {\n    var pc = this;\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent'].forEach(function (method) {\n      pc[method] = _eventTarget[method].bind(_eventTarget);\n    });\n    this.canTrickleIceCandidates = null;\n    this.needNegotiation = false;\n    this.localStreams = [];\n    this.remoteStreams = [];\n    this._localDescription = null;\n    this._remoteDescription = null;\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n    config = JSON.parse(JSON.stringify(config || {}));\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw makeError('NotSupportedError', 'rtcpMuxPolicy \\'negotiate\\' is not supported');\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function () {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function () {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n  RTCPeerConnection.prototype._dispatchEvent = function (name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n  RTCPeerConnection.prototype._emitGatheringStateChange = function () {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n  RTCPeerConnection.prototype.getConfiguration = function () {\n    return this._config;\n  };\n  RTCPeerConnection.prototype.getLocalStreams = function () {\n    return this.localStreams;\n  };\n  RTCPeerConnection.prototype.getRemoteStreams = function () {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function (kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n  RTCPeerConnection.prototype.addTrack = function (track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call addTrack on a closed peerconnection.');\n    }\n    var alreadyExists = this.transceivers.find(function (s) {\n      return s.track === track;\n    });\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track && this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n    this._maybeFireNegotiationNeeded();\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track, transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n  RTCPeerConnection.prototype.addStream = function (stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function (track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function (track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function (event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function (track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n  RTCPeerConnection.prototype.removeTrack = function (sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError', 'Attempted to call removeTrack on a closed peerconnection.');\n    }\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.');\n    }\n    var transceiver = this.transceivers.find(function (t) {\n      return t.rtpSender === sender;\n    });\n    if (!transceiver) {\n      throw makeError('InvalidAccessError', 'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function (t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 && this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n    this._maybeFireNegotiationNeeded();\n  };\n  RTCPeerConnection.prototype.removeStream = function (stream) {\n    var pc = this;\n    stream.getTracks().forEach(function (track) {\n      var sender = pc.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n  RTCPeerConnection.prototype.getSenders = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpSender;\n    }).map(function (transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n  RTCPeerConnection.prototype.getReceivers = function () {\n    return this.transceivers.filter(function (transceiver) {\n      return !!transceiver.rtpReceiver;\n    }).map(function (transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n  RTCPeerConnection.prototype._createIceGatherer = function (sdpMLineIndex, usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state', {\n      value: 'new',\n      writable: true\n    });\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function (event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function (mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents = this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate', this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function (evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // Ñ•dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {\n        sdpMid: mid,\n        sdpMLineIndex: sdpMLineIndex\n      };\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateCompleteâ€¥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate, SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function () {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] += 'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] += 'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp = SDPUtils.getDescription(pc._localDescription.sdp) + sections.join('');\n      var complete = pc.transceivers.every(function (transceiver) {\n        return transceiver.iceGatherer && transceiver.iceGatherer.state === 'completed';\n      });\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function () {\n      bufferedCandidateEvents.forEach(function (e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function () {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function () {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function () {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function () {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state', {\n        value: 'failed',\n        writable: true\n      });\n      pc._updateConnectionState();\n    };\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function (sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function (transceiver, send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video' && transceiver.recvEncodingParameters && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function (p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n  RTCPeerConnection.prototype.setLocalDescription = function (description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n    if (!isActionAllowedInSignalingState('setLocalDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set local ' + description.type + ' in state ' + pc.signalingState));\n    }\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n      pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n      sections.forEach(function (mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters, isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities, remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver, params.codecs.length > 0, false);\n        }\n      });\n    }\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    return Promise.resolve();\n  };\n  RTCPeerConnection.prototype.setRemoteDescription = function (description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError', 'Unsupported type \"' + description.type + '\"'));\n    }\n    if (!isActionAllowedInSignalingState('setRemoteDescription', description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not set remote ' + description.type + ' in state ' + pc.signalingState));\n    }\n    var streams = {};\n    pc.remoteStreams.forEach(function (stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart, 'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart, 'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart, 'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ').indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n    sections.forEach(function (mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) && SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || kind === 'application' && (protocol === 'DTLS/SCTP' || protocol === 'UDP/DTLS/SCTP')) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n      if (!rejected && pc.transceivers[sdpMLineIndex] && pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection, sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection, sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters = SDPUtils.parseRtpEncodingParameters(mediaSection);\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n      var isComplete = SDPUtils.matchPrefix(mediaSection, 'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:').map(function (cand) {\n        return SDPUtils.parseCandidate(cand);\n      }).filter(function (cand) {\n        return cand.component === 1;\n      });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') && !rejected && usingBundle && sdpMLineIndex > 0 && pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer = pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport = pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport = pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] || pc._createTransceiver(kind);\n        transceiver.mid = mid;\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, usingBundle);\n        }\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n            return codec.name !== 'rtx';\n          });\n        }\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver || new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function () {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function () {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function (s) {\n            var nativeTrack = s.getTracks().find(function (t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex], false, isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters = recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities = remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) && (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function (candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters, 'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n        var hasRtx = commonCapabilities.codecs.filter(function (c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n        pc._transceive(transceiver, direction === 'sendrecv' || direction === 'recvonly', direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver && (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function (sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function () {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n        receiverList.forEach(function (item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function (item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function () {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function (transceiver) {\n        if (transceiver.iceTransport && transceiver.iceTransport.state === 'new' && transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' + 'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n    return Promise.resolve();\n  };\n  RTCPeerConnection.prototype.close = function () {\n    this.transceivers.forEach(function (transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function (newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function () {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function () {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function () {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function (transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n  RTCPeerConnection.prototype.createOffer = function () {\n    var pc = this;\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createOffer after close'));\n    }\n    var numAudioTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function (t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError('Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n    pc.transceivers.forEach(function (transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex, pc.usingBundle);\n      }\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(function (codec) {\n          return codec.name !== 'rtx';\n        });\n      }\n      localCapabilities.codecs.forEach(function (codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' && codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities && transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function (remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() && codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function (hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities && transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function (rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' && !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n      }\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities, 'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' && (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function (cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n  RTCPeerConnection.prototype.createAnswer = function () {\n    var pc = this;\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer after close'));\n    }\n    if (!(pc.signalingState === 'have-remote-offer' || pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError', 'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId, pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function (t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function (transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') {\n            // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol + ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' + 'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' + 'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' + 'a=inactive\\r\\n' + 'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' && !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(transceiver.localCapabilities, transceiver.remoteCapabilities);\n      var hasRtx = commonCapabilities.codecs.filter(function (c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n      sdp += writeMediaSection(transceiver, commonCapabilities, 'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters && transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n  RTCPeerConnection.prototype.addIceCandidate = function (candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function (resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError', 'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp = SDPUtils.getDescription(pc._remoteDescription.sdp) + sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ? SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || sdpMLineIndex > 0 && transceiver.iceTransport !== pc.transceivers[0].iceTransport) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError', 'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' + (cand.type ? candidateString : 'end-of-candidates') + '\\r\\n';\n          pc._remoteDescription.sdp = SDPUtils.getDescription(pc._remoteDescription.sdp) + sections.join('');\n        } else {\n          return reject(makeError('OperationError', 'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n  RTCPeerConnection.prototype.getStats = function (selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function (transceiver) {\n        if (transceiver.rtpSender && transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n    var promises = [];\n    this.transceivers.forEach(function (transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport', 'dtlsTransport'].forEach(function (method) {\n        if (transceiver[method]) {\n          promises.push(transceiver[method].getStats());\n        }\n      });\n    });\n    return Promise.all(promises).then(function (allStats) {\n      var results = new Map();\n      allStats.forEach(function (stats) {\n        stats.forEach(function (stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer', 'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function (ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function () {\n        return nativeGetstats.apply(this).then(function (nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function (id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n      if (typeof args[0] === 'function' || typeof args[1] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, [arguments[2]]).then(function (description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function (error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n      if (typeof args[1] === 'function' || typeof args[2] === 'function') {\n        // legacy\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function (error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function (method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function () {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments).then(function () {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n  return RTCPeerConnection;\n};","map":{"version":3,"names":["SDPUtils","require","fixStatsType","stat","inboundrtp","outboundrtp","candidatepair","localcandidate","remotecandidate","type","writeMediaSection","transceiver","caps","stream","dtlsRole","sdp","writeRtpDescription","kind","writeIceParameters","iceGatherer","getLocalParameters","writeDtlsParameters","dtlsTransport","mid","rtpSender","rtpReceiver","trackId","_initialTrackId","track","id","msid","sendEncodingParameters","ssrc","rtx","localCName","filterIceServers","iceServers","edgeVersion","hasTurn","JSON","parse","stringify","filter","server","urls","url","console","warn","isString","validTurn","indexOf","length","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","codecs","headerExtensions","fecMechanisms","findCodecByPayloadType","pt","parseInt","i","payloadType","preferredPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","parameters","apt","rCodec","name","toLowerCase","forEach","clockRate","numChannels","Math","min","push","rtcpFeedback","fb","j","parameter","lHeaderExtension","rHeaderExtension","uri","isActionAllowedInSignalingState","action","signalingState","offer","setLocalDescription","setRemoteDescription","answer","maybeAddCandidate","iceTransport","candidate","alreadyAdded","getRemoteCandidates","find","remoteCandidate","foundation","ip","port","priority","protocol","addRemoteCandidate","makeError","description","e","Error","code","NotSupportedError","InvalidStateError","InvalidAccessError","TypeError","undefined","OperationError","module","exports","window","addTrackToStreamAndFireEvent","addTrack","dispatchEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","removeTrack","fireAddTrack","pc","receiver","streams","trackEvent","Event","setTimeout","_dispatchEvent","RTCPeerConnection","config","_eventTarget","document","createDocumentFragment","method","bind","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceConnectionState","connectionState","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","RTCIceGatherer","gatherPolicy","_config","transceivers","_sdpSessionId","generateSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","Object","defineProperty","prototype","configurable","get","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","event","_emitGatheringStateChange","getConfiguration","getLocalStreams","getRemoteStreams","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","alreadyExists","s","_maybeFireNegotiationNeeded","RTCRtpSender","addStream","getTracks","clonedStream","clone","idx","clonedTrack","addEventListener","enabled","sender","t","stop","map","splice","removeStream","getSenders","getReceivers","_createIceGatherer","sdpMLineIndex","shift","value","writable","bufferedCandidateEvents","bufferCandidates","end","keys","state","_gather","onlocalcandidate","removeEventListener","evt","sdpMid","cand","component","ufrag","usernameFragment","serializedCandidate","writeCandidate","assign","parseCandidate","toJSON","sections","getMediaSections","getDescription","join","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","send","recv","params","encodings","rtcp","cname","compound","rtcpParameters","p","receive","Promise","reject","sessionpart","splitSections","mediaSection","parseRtpParameters","isIceLite","matchPrefix","rejected","isRejected","remoteIceParameters","getIceParameters","remoteDtlsParameters","getDtlsParameters","role","start","_updateSignalingState","resolve","receiverList","iceOptions","substr","split","lines","splitLines","getKind","direction","getDirection","remoteMsid","parseMsid","getMid","generateIdentifier","parseRtpEncodingParameters","parseRtcpParameters","isComplete","cands","setTransport","setRemoteCandidates","RTCRtpReceiver","getCapabilities","codec","isNewTrack","MediaStream","default","nativeTrack","hasRtx","c","sid","item","close","newState","states","closed","checking","connected","completed","disconnected","failed","new","connecting","createOffer","numAudioTracks","numVideoTracks","offerOptions","arguments","mandatory","optional","offerToReceiveAudio","offerToReceiveVideo","writeSessionBoilerplate","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","desc","RTCSessionDescription","createAnswer","mediaSectionsInOffer","localTrack","getAudioTracks","getVideoTracks","reducedSize","addIceCandidate","candidateString","trim","getStats","selector","MediaStreamTrack","senderOrReceiver","promises","all","then","allStats","results","Map","stats","set","ortcObjects","ortcObjectName","obj","nativeGetstats","apply","nativeStats","mapStats","methods","nativeMethod","args","error"],"sources":["C:/Users/DAVOTRADE/Desktop/Rezy Acme Company/node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"sourcesContent":["/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldÑ• are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // Ñ•dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateCompleteâ€¥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}