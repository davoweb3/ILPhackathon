{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar AI01decoder_1 = require(\"./AI01decoder\");\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\nvar AI01AndOtherAIs = /** @class */function (_super) {\n  __extends(AI01AndOtherAIs, _super);\n  //the second one is the encodation method, and the other two are for the variable length\n  function AI01AndOtherAIs(information) {\n    return _super.call(this, information) || this;\n  }\n  AI01AndOtherAIs.prototype.parseInformation = function () {\n    var buff = new StringBuilder_1.default();\n    buff.append(\"(01)\");\n    var initialGtinPosition = buff.length();\n    var firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n    buff.append(firstGtinDigit);\n    this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n    return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n  };\n  AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; //first bit encodes the linkage flag,\n  return AI01AndOtherAIs;\n}(AI01decoder_1.default);\nexports.default = AI01AndOtherAIs;","map":{"version":3,"sources":["../../../../../../src/core/oned/rss/expanded/decoders/AI01AndOtherAIs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AAEA,IAAA,eAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;AACA,IAAA,eAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA6C,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;EAG3C;EAEA,SAAA,eAAA,CAAY,WAAqB,EAAA;WAC/B,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,WAAW,CAAC,IAAA,IAAA;EACpB;EAEO,eAAA,CAAA,SAAA,CAAA,gBAAgB,GAAvB,YAAA;IAEA,IAAI,IAAI,GAAG,IAAI,eAAA,CAAA,OAAa,EAAE;IAC9B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;IACnB,IAAI,mBAAmB,GAAG,IAAI,CAAC,MAAM,EAAE;IACvC,IAAK,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC,+BAA+B,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC;IAC9G,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC;IAC3B,IAAI,CAAC,6BAA6B,CAAC,IAAI,EAAE,eAAe,CAAC,WAAW,GAAG,CAAC,EAAE,mBAAmB,CAAC;IAC9F,OAAO,IAAI,CAAC,iBAAiB,EAAE,CAAC,cAAc,CAAC,IAAI,EAAE,eAAe,CAAC,WAAW,GAAG,EAAE,CAAC;EACxF,CAAC;EAhB0B,eAAA,CAAA,WAAW,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;EAkBpD,OAAA,eAAC;CAAA,CApB4C,aAAA,CAAA,OAAW,CAAA;kBAAnC,eAAe","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AI01decoder_1 = require(\"./AI01decoder\");\nvar StringBuilder_1 = require(\"../../../../util/StringBuilder\");\nvar AI01AndOtherAIs = /** @class */ (function (_super) {\n    __extends(AI01AndOtherAIs, _super);\n    //the second one is the encodation method, and the other two are for the variable length\n    function AI01AndOtherAIs(information) {\n        return _super.call(this, information) || this;\n    }\n    AI01AndOtherAIs.prototype.parseInformation = function () {\n        var buff = new StringBuilder_1.default();\n        buff.append(\"(01)\");\n        var initialGtinPosition = buff.length();\n        var firstGtinDigit = this.getGeneralDecoder().extractNumericValueFromBitArray(AI01AndOtherAIs.HEADER_SIZE, 4);\n        buff.append(firstGtinDigit);\n        this.encodeCompressedGtinWithoutAI(buff, AI01AndOtherAIs.HEADER_SIZE + 4, initialGtinPosition);\n        return this.getGeneralDecoder().decodeAllCodes(buff, AI01AndOtherAIs.HEADER_SIZE + 44);\n    };\n    AI01AndOtherAIs.HEADER_SIZE = 1 + 1 + 2; //first bit encodes the linkage flag,\n    return AI01AndOtherAIs;\n}(AI01decoder_1.default));\nexports.default = AI01AndOtherAIs;\n//# sourceMappingURL=AI01AndOtherAIs.js.map"]},"metadata":{},"sourceType":"script"}