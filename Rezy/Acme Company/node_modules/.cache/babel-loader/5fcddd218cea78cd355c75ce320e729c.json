{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2010 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Result_1 = require(\"../Result\");\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\nvar DecodeHintType_1 = require(\"../DecodeHintType\");\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\nvar System_1 = require(\"../util/System\");\nvar Decoder_1 = require(\"./decoder/Decoder\");\nvar Detector_1 = require(\"./detector/Detector\");\n// import java.util.List;\n// import java.util.Map;\n/**\n * This implementation can detect and decode Aztec codes in an image.\n *\n * @author David Olivier\n */\nvar AztecReader = /** @class */function () {\n  function AztecReader() {}\n  /**\n   * Locates and decodes a Data Matrix code in an image.\n   *\n   * @return a String representing the content encoded by the Data Matrix code\n   * @throws NotFoundException if a Data Matrix code cannot be found\n   * @throws FormatException if a Data Matrix code cannot be decoded\n   */\n  AztecReader.prototype.decode = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n    var exception = null;\n    var detector = new Detector_1.default(image.getBlackMatrix());\n    var points = null;\n    var decoderResult = null;\n    try {\n      var detectorResult = detector.detectMirror(false);\n      points = detectorResult.getPoints();\n      this.reportFoundResultPoints(hints, points);\n      decoderResult = new Decoder_1.default().decode(detectorResult);\n    } catch (e) {\n      exception = e;\n    }\n    if (decoderResult == null) {\n      try {\n        var detectorResult = detector.detectMirror(true);\n        points = detectorResult.getPoints();\n        this.reportFoundResultPoints(hints, points);\n        decoderResult = new Decoder_1.default().decode(detectorResult);\n      } catch (e) {\n        if (exception != null) {\n          throw exception;\n        }\n        throw e;\n      }\n    }\n    var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), decoderResult.getNumBits(), points, BarcodeFormat_1.default.AZTEC, System_1.default.currentTimeMillis());\n    var byteSegments = decoderResult.getByteSegments();\n    if (byteSegments != null) {\n      result.putMetadata(ResultMetadataType_1.default.BYTE_SEGMENTS, byteSegments);\n    }\n    var ecLevel = decoderResult.getECLevel();\n    if (ecLevel != null) {\n      result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, ecLevel);\n    }\n    return result;\n  };\n  AztecReader.prototype.reportFoundResultPoints = function (hints, points) {\n    if (hints != null) {\n      var rpcb_1 = hints.get(DecodeHintType_1.default.NEED_RESULT_POINT_CALLBACK);\n      if (rpcb_1 != null) {\n        points.forEach(function (point, idx, arr) {\n          rpcb_1.foundPossibleResultPoint(point);\n        });\n      }\n    }\n  };\n  // @Override\n  AztecReader.prototype.reset = function () {\n    // do nothing\n  };\n  return AztecReader;\n}();\nexports.default = AztecReader;","map":{"version":3,"names":["Result_1","require","BarcodeFormat_1","DecodeHintType_1","ResultMetadataType_1","System_1","Decoder_1","Detector_1","AztecReader","prototype","decode","image","hints","exception","detector","default","getBlackMatrix","points","decoderResult","detectorResult","detectMirror","getPoints","reportFoundResultPoints","e","result","getText","getRawBytes","getNumBits","AZTEC","currentTimeMillis","byteSegments","getByteSegments","putMetadata","BYTE_SEGMENTS","ecLevel","getECLevel","ERROR_CORRECTION_LEVEL","rpcb_1","get","NEED_RESULT_POINT_CALLBACK","forEach","point","idx","arr","foundPossibleResultPoint","reset"],"sources":["../../../src/core/aztec/AztecReader.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}