{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417.decoder;\n/**\n * @author Guenther Grau\n */\nvar Codeword = /** @class */function () {\n  function Codeword(startX, endX, bucket, value) {\n    this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n    this.startX = Math.trunc(startX);\n    this.endX = Math.trunc(endX);\n    this.bucket = Math.trunc(bucket);\n    this.value = Math.trunc(value);\n  }\n  Codeword.prototype.hasValidRowNumber = function () {\n    return this.isValidRowNumber(this.rowNumber);\n  };\n  Codeword.prototype.isValidRowNumber = function (rowNumber) {\n    return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === rowNumber % 3 * 3;\n  };\n  Codeword.prototype.setRowNumberAsRowIndicatorColumn = function () {\n    this.rowNumber = Math.trunc(Math.trunc(this.value / 30) * 3 + Math.trunc(this.bucket / 3));\n  };\n  Codeword.prototype.getWidth = function () {\n    return this.endX - this.startX;\n  };\n  Codeword.prototype.getStartX = function () {\n    return this.startX;\n  };\n  Codeword.prototype.getEndX = function () {\n    return this.endX;\n  };\n  Codeword.prototype.getBucket = function () {\n    return this.bucket;\n  };\n  Codeword.prototype.getValue = function () {\n    return this.value;\n  };\n  Codeword.prototype.getRowNumber = function () {\n    return this.rowNumber;\n  };\n  Codeword.prototype.setRowNumber = function (rowNumber) {\n    this.rowNumber = rowNumber;\n  };\n  //   @Override\n  Codeword.prototype.toString = function () {\n    return this.rowNumber + '|' + this.value;\n  };\n  Codeword.BARCODE_ROW_UNKNOWN = -1;\n  return Codeword;\n}();\nexports.default = Codeword;","map":{"version":3,"sources":["../../../../src/core/pdf417/decoder/Codeword.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;AAcG;;;;AAIH;AAEA;;AAEG;AACH,IAAA,QAAA,GAAA,aAAA,YAAA;EAUE,SAAA,QAAA,CAAY,MAAW,EAAE,IAAS,EAAE,MAAW,EAAE,KAAU,EAAA;IAFnD,IAAA,CAAA,SAAS,GAAQ,QAAQ,CAAC,mBAAmB;IAGnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAChC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;EAChC;EAEA,QAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,YAAA;IACE,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC;EAC9C,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,UAAiB,SAAc,EAAA;IAC7B,OAAO,SAAS,KAAK,QAAQ,CAAC,mBAAmB,IAAI,IAAI,CAAC,MAAM,KAAM,SAAS,GAAG,CAAC,GAAI,CAAC;EAC1F,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,gCAAgC,GAAhC,YAAA;IACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,GAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9F,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM;EAChC,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;IACE,OAAO,IAAI,CAAC,MAAM;EACpB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,OAAO,IAAI,CAAC,IAAI;EAClB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,SAAS,GAAT,YAAA;IACE,OAAO,IAAI,CAAC,MAAM;EACpB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACE,OAAO,IAAI,CAAC,KAAK;EACnB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,YAAY,GAAZ,YAAA;IACE,OAAO,IAAI,CAAC,SAAS;EACvB,CAAC;EAED,QAAA,CAAA,SAAA,CAAA,YAAY,GAAZ,UAAa,SAAc,EAAA;IACzB,IAAI,CAAC,SAAS,GAAG,SAAS;EAC5B,CAAC;EAEH;EACU,QAAA,CAAA,SAAA,CAAA,QAAQ,GAAhB,YAAA;IACE,OAAO,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK;EAC1C,CAAC;EA1DwB,QAAA,CAAA,mBAAmB,GAAQ,CAAC,CAAC;EA4DxD,OAAA,QAAC;CAAA,EAAA;kBA9D8B,QAAQ","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder;\n/**\n * @author Guenther Grau\n */\nvar Codeword = /** @class */ (function () {\n    function Codeword(startX, endX, bucket, value) {\n        this.rowNumber = Codeword.BARCODE_ROW_UNKNOWN;\n        this.startX = Math.trunc(startX);\n        this.endX = Math.trunc(endX);\n        this.bucket = Math.trunc(bucket);\n        this.value = Math.trunc(value);\n    }\n    Codeword.prototype.hasValidRowNumber = function () {\n        return this.isValidRowNumber(this.rowNumber);\n    };\n    Codeword.prototype.isValidRowNumber = function (rowNumber) {\n        return rowNumber !== Codeword.BARCODE_ROW_UNKNOWN && this.bucket === (rowNumber % 3) * 3;\n    };\n    Codeword.prototype.setRowNumberAsRowIndicatorColumn = function () {\n        this.rowNumber = Math.trunc((Math.trunc(this.value / 30)) * 3 + Math.trunc(this.bucket / 3));\n    };\n    Codeword.prototype.getWidth = function () {\n        return this.endX - this.startX;\n    };\n    Codeword.prototype.getStartX = function () {\n        return this.startX;\n    };\n    Codeword.prototype.getEndX = function () {\n        return this.endX;\n    };\n    Codeword.prototype.getBucket = function () {\n        return this.bucket;\n    };\n    Codeword.prototype.getValue = function () {\n        return this.value;\n    };\n    Codeword.prototype.getRowNumber = function () {\n        return this.rowNumber;\n    };\n    Codeword.prototype.setRowNumber = function (rowNumber) {\n        this.rowNumber = rowNumber;\n    };\n    //   @Override\n    Codeword.prototype.toString = function () {\n        return this.rowNumber + '|' + this.value;\n    };\n    Codeword.BARCODE_ROW_UNKNOWN = -1;\n    return Codeword;\n}());\nexports.default = Codeword;\n//# sourceMappingURL=Codeword.js.map"]},"metadata":{},"sourceType":"script"}