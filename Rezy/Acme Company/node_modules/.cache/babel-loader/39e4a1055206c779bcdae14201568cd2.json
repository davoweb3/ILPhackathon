{"ast":null,"code":"/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport _defineProperty from \"C:/Users/DAVOTRADE/Desktop/Rezy barcode/scanner/scanner/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport * as utils from '../utils.js';\nexport { shimGetUserMedia } from './getusermedia';\nexport { shimGetDisplayMedia } from './getdisplaymedia';\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get: function get() {\n        return this._ontrack;\n      },\n      set: function set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n      var _this = this;\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = function (e) {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', function (te) {\n            var receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === te.track.id;\n              });\n            } else {\n              receiver = {\n                track: te.track\n              };\n            }\n            var event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver: receiver\n            };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(function (track) {\n            var receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = _this.getReceivers().find(function (r) {\n                return r.track && r.track.id === track.id;\n              });\n            } else {\n              receiver = {\n                track: track\n              };\n            }\n            var event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {\n              receiver: receiver\n            };\n            event.streams = [e.stream];\n            _this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver', {\n          value: {\n            receiver: e.receiver\n          }\n        });\n      }\n      return e;\n    });\n  }\n}\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection && !('getSenders' in window.RTCPeerConnection.prototype) && 'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    var shimSenderWithDtmf = function shimSenderWithDtmf(pc, track) {\n      return {\n        track: track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n\n      var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n        var sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n      var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n        origRemoveTrack.apply(this, arguments);\n        var idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      var _this2 = this;\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        _this2._senders.push(shimSenderWithDtmf(_this2, track));\n      });\n    };\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n      var _this3 = this;\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n      stream.getTracks().forEach(function (track) {\n        var sender = _this3._senders.find(function (s) {\n          return s.track === track;\n        });\n        if (sender) {\n          // remove sender\n          _this3._senders.splice(_this3._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection && 'getSenders' in window.RTCPeerConnection.prototype && 'createDTMFSender' in window.RTCPeerConnection.prototype && window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      var _this4 = this;\n      var senders = origGetSenders.apply(this, []);\n      senders.forEach(function (sender) {\n        return sender._pc = _this4;\n      });\n      return senders;\n    };\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get: function get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    var _this5 = this;\n    var _arguments = Array.prototype.slice.call(arguments),\n      selector = _arguments[0],\n      onSucc = _arguments[1],\n      onErr = _arguments[2];\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 || typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n    var fixChromeStats_ = function fixChromeStats_(response) {\n      var standardReport = {};\n      var reports = response.result();\n      reports.forEach(function (report) {\n        var standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(function (name) {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function makeMapStats(stats) {\n      return new Map(Object.keys(stats).map(function (key) {\n        return [key, stats[key]];\n      }));\n    };\n    if (arguments.length >= 2) {\n      var successCallbackWrapper_ = function successCallbackWrapper_(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n      return origGetStats.apply(this, [successCallbackWrapper_, selector]);\n    }\n\n    // promise-support\n    return new Promise(function (resolve, reject) {\n      origGetStats.apply(_this5, [function (response) {\n        resolve(makeMapStats(fixChromeStats_(response)));\n      }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection && window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        var _this6 = this;\n        var senders = origGetSenders.apply(this, []);\n        senders.forEach(function (sender) {\n          return sender._pc = _this6;\n        });\n        return senders;\n      };\n    }\n    var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        var sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      var sender = this;\n      return this._pc.getStats().then(function (result) {\n        return (\n          /* Note: this will include stats of all senders that\n           *   send a track with the same id as sender.track as\n           *   it is not possible to identify the RTCRtpSender.\n           */\n          utils.filterStats(result, sender.track, true)\n        );\n      });\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    var origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n        var _this7 = this;\n        var receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(function (receiver) {\n          return receiver._pc = _this7;\n        });\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', function (e) {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      var receiver = this;\n      return this._pc.getStats().then(function (result) {\n        return utils.filterStats(result, receiver.track, false);\n      });\n    };\n  }\n  if (!('getStats' in window.RTCRtpSender.prototype && 'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  var origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 && arguments[0] instanceof window.MediaStreamTrack) {\n      var track = arguments[0];\n      var sender;\n      var receiver;\n      var err;\n      this.getSenders().forEach(function (s) {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(function (r) {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || sender && receiver) {\n        return Promise.reject(new DOMException('There are more than one sender or receiver for the track.', 'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException('There is no sender or receiver for the track.', 'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this8 = this;\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams).map(function (streamId) {\n      return _this8._shimmedLocalStreams[streamId][0];\n    });\n  };\n  var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    var sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this9 = this;\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this9.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    var existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    var newSenders = this.getSenders().filter(function (newSender) {\n      return existingSenders.indexOf(newSender) === -1;\n    });\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n  var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this10 = this;\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(function (streamId) {\n        var idx = _this10._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          _this10._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (_this10._shimmedLocalStreams[streamId].length === 1) {\n          delete _this10._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack && browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  var origGetLocalStreams = window.RTCPeerConnection.prototype.getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function getLocalStreams() {\n    var _this11 = this;\n    var nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(function (stream) {\n      return _this11._reverseStreams[stream.id];\n    });\n  };\n  var origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    var _this12 = this;\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    stream.getTracks().forEach(function (track) {\n      var alreadyExists = _this12.getSenders().find(function (s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.', 'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      var newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n  var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function removeStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    origRemoveStream.apply(this, [this._streams[stream.id] || stream]);\n    delete this._reverseStreams[this._streams[stream.id] ? this._streams[stream.id].id : stream.id];\n    delete this._streams[stream.id];\n  };\n  window.RTCPeerConnection.prototype.addTrack = function addTrack(track, stream) {\n    var _this13 = this;\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    var streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 || !streams[0].getTracks().find(function (t) {\n      return t === track;\n    })) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException('The adapter.js addTrack polyfill only supports a single ' + ' stream which is associated with the specified track.', 'NotSupportedError');\n    }\n    var alreadyExists = this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.', 'InvalidAccessError');\n    }\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    var oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(function () {\n        _this13.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      var newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(function (s) {\n      return s.track === track;\n    });\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'), externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    var sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(function (internalId) {\n      var externalStream = pc._reverseStreams[internalId];\n      var internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'), internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp: sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function (method) {\n    var nativeMethod = window.RTCPeerConnection.prototype[method];\n    var methodObj = _defineProperty({}, method, function () {\n      var _this14 = this;\n      var args = arguments;\n      var isLegacyCall = arguments.length && typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [function (description) {\n          var desc = replaceInternalStreamId(_this14, description);\n          args[0].apply(null, [desc]);\n        }, function (err) {\n          if (args[1]) {\n            args[1].apply(null, err);\n          }\n        }, arguments[2]]);\n      }\n      return nativeMethod.apply(this, arguments).then(function (description) {\n        return replaceInternalStreamId(_this14, description);\n      });\n    });\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n  var origSetLocalDescription = window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function setLocalDescription() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  var origLocalDescription = Object.getOwnPropertyDescriptor(window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype, 'localDescription', {\n    get: function get() {\n      var description = origLocalDescription.get.apply(this);\n      if (description.type === '') {\n        return description;\n      }\n      return replaceInternalStreamId(this, description);\n    }\n  });\n  window.RTCPeerConnection.prototype.removeTrack = function removeTrack(sender) {\n    var _this15 = this;\n    if (this.signalingState === 'closed') {\n      throw new DOMException('The RTCPeerConnection\\'s signalingState is \\'closed\\'.', 'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' + 'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    var isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.', 'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    var stream;\n    Object.keys(this._streams).forEach(function (streamid) {\n      var hasTrack = _this15._streams[streamid].getTracks().find(function (track) {\n        return sender.track === track;\n      });\n      if (hasTrack) {\n        stream = _this15._streams[streamid];\n      }\n    });\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'].forEach(function (method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      var methodObj = _defineProperty({}, method, function () {\n        arguments[0] = new (method === 'addIceCandidate' ? window.RTCIceCandidate : window.RTCSessionDescription)(arguments[0]);\n        return nativeMethod.apply(this, arguments);\n      });\n      window.RTCPeerConnection.prototype[method] = methodObj[method];\n    });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', function (e) {\n    var pc = e.target;\n    if (browserDetails.version < 72 || pc.getConfiguration && pc.getConfiguration().sdpSemantics === 'plan-b') {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}","map":{"version":3,"names":["_defineProperty","utils","shimGetUserMedia","shimGetDisplayMedia","shimMediaStream","window","MediaStream","webkitMediaStream","shimOnTrack","RTCPeerConnection","prototype","Object","defineProperty","get","_ontrack","set","f","removeEventListener","addEventListener","enumerable","configurable","origSetRemoteDescription","setRemoteDescription","_this","_ontrackpoly","e","stream","te","receiver","getReceivers","find","r","track","id","event","Event","transceiver","streams","dispatchEvent","getTracks","forEach","apply","arguments","wrapPeerConnectionEvent","value","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","undefined","kind","createDTMFSender","_pc","getSenders","_senders","slice","origAddTrack","addTrack","sender","push","origRemoveTrack","removeTrack","idx","indexOf","splice","origAddStream","addStream","_this2","origRemoveStream","removeStream","_this3","s","RTCRtpSender","origGetSenders","_this4","senders","shimGetStats","origGetStats","getStats","_this5","_arguments","Array","call","selector","onSucc","onErr","length","fixChromeStats_","response","standardReport","reports","result","report","standardStats","timestamp","type","localcandidate","remotecandidate","names","name","stat","makeMapStats","stats","Map","keys","map","key","successCallbackWrapper_","Promise","resolve","reject","then","shimSenderReceiverGetStats","RTCRtpReceiver","_this6","filterStats","origGetReceivers","_this7","receivers","srcElement","MediaStreamTrack","err","DOMException","shimAddTrackRemoveTrackWithNative","getLocalStreams","_this8","_shimmedLocalStreams","streamId","_this9","alreadyExists","existingSenders","newSenders","filter","newSender","concat","_this10","shimAddTrackRemoveTrack","browserDetails","version","origGetLocalStreams","_this11","nativeStreams","_reverseStreams","_this12","_streams","newStream","_this13","signalingState","t","oldStream","replaceInternalStreamId","description","sdp","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","method","nativeMethod","methodObj","_this14","args","isLegacyCall","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","_this15","isLocal","streamid","hasTrack","shimPeerConnection","webkitRTCPeerConnection","RTCIceCandidate","fixNegotiationNeeded","target","getConfiguration","sdpSemantics"],"sources":["C:/Users/DAVOTRADE/Desktop/Rezy barcode/scanner/scanner/node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js"],"sourcesContent":["/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}