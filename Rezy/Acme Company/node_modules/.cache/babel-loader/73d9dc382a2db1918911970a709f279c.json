{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2013 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417.decoder;\n// import com.google.zxing.pdf417.PDF417Common;\nvar PDF417Common_1 = require(\"../PDF417Common\");\n// import java.util.ArrayList;\n// import java.util.Collection;\n// import java.util.HashMap;\n// import java.util.Map;\n// import java.util.Map.Entry;\n/**\n * @author Guenther Grau\n */\nvar BarcodeValue = /** @class */function () {\n  function BarcodeValue() {\n    this.values = new Map();\n  }\n  /**\n   * Add an occurrence of a value\n   */\n  BarcodeValue.prototype.setValue = function (value) {\n    value = Math.trunc(value);\n    var confidence = this.values.get(value);\n    if (confidence == null) {\n      confidence = 0;\n    }\n    confidence++;\n    this.values.set(value, confidence);\n  };\n  /**\n   * Determines the maximum occurrence of a set value and returns all values which were set with this occurrence.\n   * @return an array of int, containing the values with the highest occurrence, or null, if no value was set\n   */\n  BarcodeValue.prototype.getValue = function () {\n    var e_1, _a;\n    var maxConfidence = -1;\n    var result = new Array();\n    var _loop_1 = function (key, value) {\n      var entry = {\n        getKey: function () {\n          return key;\n        },\n        getValue: function () {\n          return value;\n        }\n      };\n      if (entry.getValue() > maxConfidence) {\n        maxConfidence = entry.getValue();\n        result = [];\n        result.push(entry.getKey());\n      } else if (entry.getValue() === maxConfidence) {\n        result.push(entry.getKey());\n      }\n    };\n    try {\n      for (var _b = __values(this.values.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n          key = _d[0],\n          value = _d[1];\n        _loop_1(key, value);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return PDF417Common_1.default.toIntArray(result);\n  };\n  BarcodeValue.prototype.getConfidence = function (value) {\n    return this.values.get(value);\n  };\n  return BarcodeValue;\n}();\nexports.default = BarcodeValue;","map":{"version":3,"names":["PDF417Common_1","require","BarcodeValue","values","Map","prototype","setValue","value","Math","trunc","confidence","get","set","getValue","maxConfidence","result","Array","key","entry","getKey","push","_b","__values","entries","_c","next","done","_d","__read","default","toIntArray","getConfidence"],"sources":["../../../../src/core/pdf417/decoder/BarcodeValue.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA;AAEA;AACA,IAAAA,cAAA,GAAAC,OAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;;;AAGA,IAAAC,YAAA;EAAA,SAAAA,aAAA;IACoB,KAAAC,MAAM,GAAG,IAAIC,GAAG,EAAY;EA4ChD;EA1CE;;;EAGCF,YAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAR,UAASC,KAAU;IAClBA,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;IACzB,IAAIG,UAAU,GAAQ,IAAI,CAACP,MAAM,CAACQ,GAAG,CAACJ,KAAK,CAAC;IAC5C,IAAIG,UAAU,IAAI,IAAI,EAAE;MACtBA,UAAU,GAAG,CAAC;;IAEhBA,UAAU,EAAE;IACZ,IAAI,CAACP,MAAM,CAACS,GAAG,CAACL,KAAK,EAAEG,UAAU,CAAC;EACpC,CAAC;EAED;;;;EAICR,YAAA,CAAAG,SAAA,CAAAQ,QAAQ,GAAR;;IACC,IAAIC,aAAa,GAAQ,CAAC,CAAC;IAC3B,IAAIC,MAAM,GAAoB,IAAIC,KAAK,EAAO;4BAClCC,GAAG,EAAEV,KAAK;MAEpB,IAAMW,KAAK,GAAG;QACZC,MAAM,EAAE,SAAAA,CAAA;UAAM,OAAAF,GAAG;QAAH,CAAG;QACjBJ,QAAQ,EAAE,SAAAA,CAAA;UAAM,OAAAN,KAAK;QAAL;OACjB;MAED,IAAIW,KAAK,CAACL,QAAQ,EAAE,GAAGC,aAAa,EAAE;QACpCA,aAAa,GAAGI,KAAK,CAACL,QAAQ,EAAE;QAChCE,MAAM,GAAG,EAAE;QACXA,MAAM,CAACK,IAAI,CAACF,KAAK,CAACC,MAAM,EAAE,CAAC;OAC5B,MAAM,IAAID,KAAK,CAACL,QAAQ,EAAE,KAAKC,aAAa,EAAE;QAC7CC,MAAM,CAACK,IAAI,CAACF,KAAK,CAACC,MAAM,EAAE,CAAC;;;;MAZ/B,KAA2B,IAAAE,EAAA,GAAAC,QAAA,KAAI,CAACnB,MAAM,CAACoB,OAAO,EAAE,GAAAC,EAAA,GAAAH,EAAA,CAAAI,IAAA,KAAAD,EAAA,CAAAE,IAAA,EAAAF,EAAA,GAAAH,EAAA,CAAAI,IAAA;QAArC,IAAAE,EAAA,GAAAC,MAAA,CAAAJ,EAAA,CAAAjB,KAAA,IAAY;UAAXU,GAAA,GAAAU,EAAA,GAAG;UAAEpB,KAAA,GAAAoB,EAAA,GAAK;gBAAVV,GAAG,EAAEV,KAAK;;;;;;;;;;;;;IAetB,OAAOP,cAAA,CAAA6B,OAAY,CAACC,UAAU,CAACf,MAAM,CAAC;EACxC,CAAC;EAEAb,YAAA,CAAAG,SAAA,CAAA0B,aAAa,GAAb,UAAcxB,KAAU;IACvB,OAAO,IAAI,CAACJ,MAAM,CAACQ,GAAG,CAACJ,KAAK,CAAC;EAC/B,CAAC;EAEH,OAAAL,YAAC;AAAD,CAAC,EA7CD"},"metadata":{},"sourceType":"script"}