{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417;\n// import com.google.zxing.BarcodeFormat;\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n// import com.google.zxing.ChecksumException;\nvar ChecksumException_1 = require(\"../ChecksumException\");\n// import com.google.zxing.FormatException;\nvar FormatException_1 = require(\"../FormatException\");\n// import com.google.zxing.NotFoundException;\nvar NotFoundException_1 = require(\"../NotFoundException\");\n// import com.google.zxing.Result;\nvar Result_1 = require(\"../Result\");\n// import com.google.zxing.common.DecoderResult;\n// import com.google.zxing.multi.MultipleBarcodeReader;\n// import com.google.zxing.pdf417.decoder.PDF417ScanningDecoder;\n// import com.google.zxing.pdf417.detector.Detector;\n// import com.google.zxing.pdf417.detector.PDF417DetectorResult;\nvar PDF417Common_1 = require(\"./PDF417Common\");\nvar Integer_1 = require(\"../util/Integer\");\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\nvar Detector_1 = require(\"./detector/Detector\");\nvar PDF417ScanningDecoder_1 = require(\"./decoder/PDF417ScanningDecoder\");\n// import java.util.ArrayList;\n// import java.util.List;\n// import java.util.Map;\n/**\n * This implementation can detect and decode PDF417 codes in an image.\n *\n * @author Guenther Grau\n */\nvar PDF417Reader = /** @class */function () {\n  function PDF417Reader() {}\n  // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n  /**\n   * Locates and decodes a PDF417 code in an image.\n   *\n   * @return a String representing the content encoded by the PDF417 code\n   * @throws NotFoundException if a PDF417 code cannot be found,\n   * @throws FormatException if a PDF417 cannot be decoded\n   * @throws ChecksumException\n   */\n  // @Override\n  PDF417Reader.prototype.decode = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n    var result = PDF417Reader.decode(image, hints, false);\n    if (result == null || result.length === 0 || result[0] == null) {\n      throw NotFoundException_1.default.getNotFoundInstance();\n    }\n    return result[0];\n  };\n  /**\n   *\n   * @param BinaryBitmap\n   * @param image\n   * @throws NotFoundException\n   */\n  //   @Override\n  PDF417Reader.prototype.decodeMultiple = function (image, hints) {\n    if (hints === void 0) {\n      hints = null;\n    }\n    try {\n      return PDF417Reader.decode(image, hints, true);\n    } catch (ignored) {\n      if (ignored instanceof FormatException_1.default || ignored instanceof ChecksumException_1.default) {\n        throw NotFoundException_1.default.getNotFoundInstance();\n      }\n      throw ignored;\n    }\n  };\n  /**\n   *\n   * @param image\n   * @param hints\n   * @param multiple\n   *\n   * @throws NotFoundException\n   * @throws FormatException√ü\n   * @throws ChecksumException\n   */\n  PDF417Reader.decode = function (image, hints, multiple) {\n    var e_1, _a;\n    var results = new Array();\n    var detectorResult = Detector_1.default.detectMultiple(image, hints, multiple);\n    try {\n      for (var _b = __values(detectorResult.getPoints()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var points = _c.value;\n        var decoderResult = PDF417ScanningDecoder_1.default.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n        var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat_1.default.PDF_417);\n        result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n        var pdf417ResultMetadata = decoderResult.getOther();\n        if (pdf417ResultMetadata != null) {\n          result.putMetadata(ResultMetadataType_1.default.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n        }\n        results.push(result);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    return results.map(function (x) {\n      return x;\n    });\n  };\n  PDF417Reader.getMaxWidth = function (p1, p2) {\n    if (p1 == null || p2 == null) {\n      return 0;\n    }\n    return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n  };\n  PDF417Reader.getMinWidth = function (p1, p2) {\n    if (p1 == null || p2 == null) {\n      return Integer_1.default.MAX_VALUE;\n    }\n    return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n  };\n  PDF417Reader.getMaxCodewordWidth = function (p) {\n    return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n  };\n  PDF417Reader.getMinCodewordWidth = function (p) {\n    return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD / PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n  };\n  // @Override\n  PDF417Reader.prototype.reset = function () {\n    // nothing needs to be reset\n  };\n  return PDF417Reader;\n}();\nexports.default = PDF417Reader;","map":{"version":3,"sources":["../../../src/core/pdf417/PDF417Reader.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417;\n// import com.google.zxing.BarcodeFormat;\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\n// import com.google.zxing.ChecksumException;\nvar ChecksumException_1 = require(\"../ChecksumException\");\n// import com.google.zxing.FormatException;\nvar FormatException_1 = require(\"../FormatException\");\n// import com.google.zxing.NotFoundException;\nvar NotFoundException_1 = require(\"../NotFoundException\");\n// import com.google.zxing.Result;\nvar Result_1 = require(\"../Result\");\n// import com.google.zxing.common.DecoderResult;\n// import com.google.zxing.multi.MultipleBarcodeReader;\n// import com.google.zxing.pdf417.decoder.PDF417ScanningDecoder;\n// import com.google.zxing.pdf417.detector.Detector;\n// import com.google.zxing.pdf417.detector.PDF417DetectorResult;\nvar PDF417Common_1 = require(\"./PDF417Common\");\nvar Integer_1 = require(\"../util/Integer\");\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\nvar Detector_1 = require(\"./detector/Detector\");\nvar PDF417ScanningDecoder_1 = require(\"./decoder/PDF417ScanningDecoder\");\n// import java.util.ArrayList;\n// import java.util.List;\n// import java.util.Map;\n/**\n * This implementation can detect and decode PDF417 codes in an image.\n *\n * @author Guenther Grau\n */\nvar PDF417Reader = /** @class */ (function () {\n    function PDF417Reader() {\n    }\n    // private static /*final Result[]*/ EMPTY_RESULT_ARRAY: Result[] = new Result([0]);\n    /**\n     * Locates and decodes a PDF417 code in an image.\n     *\n     * @return a String representing the content encoded by the PDF417 code\n     * @throws NotFoundException if a PDF417 code cannot be found,\n     * @throws FormatException if a PDF417 cannot be decoded\n     * @throws ChecksumException\n     */\n    // @Override\n    PDF417Reader.prototype.decode = function (image, hints) {\n        if (hints === void 0) { hints = null; }\n        var result = PDF417Reader.decode(image, hints, false);\n        if (result == null || result.length === 0 || result[0] == null) {\n            throw NotFoundException_1.default.getNotFoundInstance();\n        }\n        return result[0];\n    };\n    /**\n     *\n     * @param BinaryBitmap\n     * @param image\n     * @throws NotFoundException\n     */\n    //   @Override\n    PDF417Reader.prototype.decodeMultiple = function (image, hints) {\n        if (hints === void 0) { hints = null; }\n        try {\n            return PDF417Reader.decode(image, hints, true);\n        }\n        catch (ignored) {\n            if (ignored instanceof FormatException_1.default || ignored instanceof ChecksumException_1.default) {\n                throw NotFoundException_1.default.getNotFoundInstance();\n            }\n            throw ignored;\n        }\n    };\n    /**\n     *\n     * @param image\n     * @param hints\n     * @param multiple\n     *\n     * @throws NotFoundException\n     * @throws FormatException√ü\n     * @throws ChecksumException\n     */\n    PDF417Reader.decode = function (image, hints, multiple) {\n        var e_1, _a;\n        var results = new Array();\n        var detectorResult = Detector_1.default.detectMultiple(image, hints, multiple);\n        try {\n            for (var _b = __values(detectorResult.getPoints()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var points = _c.value;\n                var decoderResult = PDF417ScanningDecoder_1.default.decode(detectorResult.getBits(), points[4], points[5], points[6], points[7], PDF417Reader.getMinCodewordWidth(points), PDF417Reader.getMaxCodewordWidth(points));\n                var result = new Result_1.default(decoderResult.getText(), decoderResult.getRawBytes(), undefined, points, BarcodeFormat_1.default.PDF_417);\n                result.putMetadata(ResultMetadataType_1.default.ERROR_CORRECTION_LEVEL, decoderResult.getECLevel());\n                var pdf417ResultMetadata = decoderResult.getOther();\n                if (pdf417ResultMetadata != null) {\n                    result.putMetadata(ResultMetadataType_1.default.PDF417_EXTRA_METADATA, pdf417ResultMetadata);\n                }\n                results.push(result);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return results.map(function (x) { return x; });\n    };\n    PDF417Reader.getMaxWidth = function (p1, p2) {\n        if (p1 == null || p2 == null) {\n            return 0;\n        }\n        return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n    };\n    PDF417Reader.getMinWidth = function (p1, p2) {\n        if (p1 == null || p2 == null) {\n            return Integer_1.default.MAX_VALUE;\n        }\n        return Math.trunc(Math.abs(p1.getX() - p2.getX()));\n    };\n    PDF417Reader.getMaxCodewordWidth = function (p) {\n        return Math.floor(Math.max(Math.max(PDF417Reader.getMaxWidth(p[0], p[4]), PDF417Reader.getMaxWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.max(PDF417Reader.getMaxWidth(p[1], p[5]), PDF417Reader.getMaxWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n    };\n    PDF417Reader.getMinCodewordWidth = function (p) {\n        return Math.floor(Math.min(Math.min(PDF417Reader.getMinWidth(p[0], p[4]), PDF417Reader.getMinWidth(p[6], p[2]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN), Math.min(PDF417Reader.getMinWidth(p[1], p[5]), PDF417Reader.getMinWidth(p[7], p[3]) * PDF417Common_1.default.MODULES_IN_CODEWORD /\n            PDF417Common_1.default.MODULES_IN_STOP_PATTERN)));\n    };\n    // @Override\n    PDF417Reader.prototype.reset = function () {\n        // nothing needs to be reset\n    };\n    return PDF417Reader;\n}());\nexports.default = PDF417Reader;\n//# sourceMappingURL=PDF417Reader.js.map"]},"metadata":{},"sourceType":"script"}