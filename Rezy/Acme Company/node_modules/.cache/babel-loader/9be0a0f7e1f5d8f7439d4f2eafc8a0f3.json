{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar DecodeHintType_1 = require(\"./DecodeHintType\");\nvar BarcodeFormat_1 = require(\"./BarcodeFormat\");\nvar QRCodeReader_1 = require(\"./qrcode/QRCodeReader\");\nvar AztecReader_1 = require(\"./aztec/AztecReader\");\nvar MultiFormatOneDReader_1 = require(\"./oned/MultiFormatOneDReader\");\nvar DataMatrixReader_1 = require(\"./datamatrix/DataMatrixReader\");\nvar NotFoundException_1 = require(\"./NotFoundException\");\nvar PDF417Reader_1 = require(\"./pdf417/PDF417Reader\");\nvar ReaderException_1 = require(\"./ReaderException\");\n/*namespace com.google.zxing {*/\n/**\n * MultiFormatReader is a convenience class and the main entry point into the library for most uses.\n * By default it attempts to decode all barcode formats that the library supports. Optionally, you\n * can provide a hints object to request different behavior, for example only decoding QR codes.\n *\n * @author Sean Owen\n * @author dswitkin@google.com (Daniel Switkin)\n */\nvar MultiFormatReader = /** @class */function () {\n  function MultiFormatReader() {}\n  /**\n   * This version of decode honors the intent of Reader.decode(BinaryBitmap) in that it\n   * passes null as a hint to the decoders. However, that makes it inefficient to call repeatedly.\n   * Use setHints() followed by decodeWithState() for continuous scan applications.\n   *\n   * @param image The pixel data to decode\n   * @return The contents of the image\n   *\n   * @throws NotFoundException Any errors which occurred\n   */\n  /*@Override*/\n  // public decode(image: BinaryBitmap): Result {\n  //   setHints(null)\n  //   return decodeInternal(image)\n  // }\n  /**\n   * Decode an image using the hints provided. Does not honor existing state.\n   *\n   * @param image The pixel data to decode\n   * @param hints The hints to use, clearing the previous state.\n   * @return The contents of the image\n   *\n   * @throws NotFoundException Any errors which occurred\n   */\n  /*@Override*/\n  MultiFormatReader.prototype.decode = function (image, hints) {\n    this.setHints(hints);\n    return this.decodeInternal(image);\n  };\n  /**\n   * Decode an image using the state set up by calling setHints() previously. Continuous scan\n   * clients will get a <b>large</b> speed increase by using this instead of decode().\n   *\n   * @param image The pixel data to decode\n   * @return The contents of the image\n   *\n   * @throws NotFoundException Any errors which occurred\n   */\n  MultiFormatReader.prototype.decodeWithState = function (image) {\n    // Make sure to set up the default state so we don't crash\n    if (this.readers === null || this.readers === undefined) {\n      this.setHints(null);\n    }\n    return this.decodeInternal(image);\n  };\n  /**\n   * This method adds state to the MultiFormatReader. By setting the hints once, subsequent calls\n   * to decodeWithState(image) can reuse the same set of readers without reallocating memory. This\n   * is important for performance in continuous scan clients.\n   *\n   * @param hints The set of hints to use for subsequent calls to decode(image)\n   */\n  MultiFormatReader.prototype.setHints = function (hints) {\n    this.hints = hints;\n    var tryHarder = hints !== null && hints !== undefined && undefined !== hints.get(DecodeHintType_1.default.TRY_HARDER);\n    /*@SuppressWarnings(\"unchecked\")*/\n    var formats = hints === null || hints === undefined ? null : hints.get(DecodeHintType_1.default.POSSIBLE_FORMATS);\n    var readers = new Array();\n    if (formats !== null && formats !== undefined) {\n      var addOneDReader = formats.some(function (f) {\n        return f === BarcodeFormat_1.default.UPC_A || f === BarcodeFormat_1.default.UPC_E || f === BarcodeFormat_1.default.EAN_13 || f === BarcodeFormat_1.default.EAN_8 || f === BarcodeFormat_1.default.CODABAR || f === BarcodeFormat_1.default.CODE_39 || f === BarcodeFormat_1.default.CODE_93 || f === BarcodeFormat_1.default.CODE_128 || f === BarcodeFormat_1.default.ITF || f === BarcodeFormat_1.default.RSS_14 || f === BarcodeFormat_1.default.RSS_EXPANDED;\n      });\n      // Put 1D readers upfront in \"normal\" mode\n      // TYPESCRIPTPORT: TODO: uncomment below as they are ported\n      if (addOneDReader && !tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n      if (formats.includes(BarcodeFormat_1.default.QR_CODE)) {\n        readers.push(new QRCodeReader_1.default());\n      }\n      if (formats.includes(BarcodeFormat_1.default.DATA_MATRIX)) {\n        readers.push(new DataMatrixReader_1.default());\n      }\n      if (formats.includes(BarcodeFormat_1.default.AZTEC)) {\n        readers.push(new AztecReader_1.default());\n      }\n      if (formats.includes(BarcodeFormat_1.default.PDF_417)) {\n        readers.push(new PDF417Reader_1.default());\n      }\n      // if (formats.includes(BarcodeFormat.MAXICODE)) {\n      //    readers.push(new MaxiCodeReader())\n      // }\n      // At end in \"try harder\" mode\n      if (addOneDReader && tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n    }\n    if (readers.length === 0) {\n      if (!tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n      readers.push(new QRCodeReader_1.default());\n      readers.push(new DataMatrixReader_1.default());\n      readers.push(new AztecReader_1.default());\n      readers.push(new PDF417Reader_1.default());\n      // readers.push(new MaxiCodeReader())\n      if (tryHarder) {\n        readers.push(new MultiFormatOneDReader_1.default(hints));\n      }\n    }\n    this.readers = readers; // .toArray(new Reader[readers.size()])\n  };\n  /*@Override*/\n  MultiFormatReader.prototype.reset = function () {\n    var e_1, _a;\n    if (this.readers !== null) {\n      try {\n        for (var _b = __values(this.readers), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var reader = _c.value;\n          reader.reset();\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n  };\n  /**\n   * @throws NotFoundException\n   */\n  MultiFormatReader.prototype.decodeInternal = function (image) {\n    var e_2, _a;\n    if (this.readers === null) {\n      throw new ReaderException_1.default('No readers where selected, nothing can be read.');\n    }\n    try {\n      for (var _b = __values(this.readers), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var reader = _c.value;\n        // Trying to decode with ${reader} reader.\n        try {\n          return reader.decode(image, this.hints);\n        } catch (ex) {\n          if (ex instanceof ReaderException_1.default) {\n            continue;\n          }\n          // Bad Exception.\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    throw new NotFoundException_1.default('No MultiFormat Readers were able to detect the code.');\n  };\n  return MultiFormatReader;\n}();\nexports.default = MultiFormatReader;","map":{"version":3,"names":["DecodeHintType_1","require","BarcodeFormat_1","QRCodeReader_1","AztecReader_1","MultiFormatOneDReader_1","DataMatrixReader_1","NotFoundException_1","PDF417Reader_1","ReaderException_1","MultiFormatReader","prototype","decode","image","hints","setHints","decodeInternal","decodeWithState","readers","undefined","tryHarder","get","default","TRY_HARDER","formats","POSSIBLE_FORMATS","Array","addOneDReader","some","f","UPC_A","UPC_E","EAN_13","EAN_8","CODABAR","CODE_39","CODE_93","CODE_128","ITF","RSS_14","RSS_EXPANDED","push","includes","QR_CODE","DATA_MATRIX","AZTEC","PDF_417","length","reset","_b","__values","_c","next","done","reader","value","ex"],"sources":["../../src/core/MultiFormatReader.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}