{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// import DataMatrixWriter from './datamatrix/DataMatrixWriter'\n// import CodaBarWriter from './oned/CodaBarWriter'\n// import Code128Writer from './oned/Code128Writer'\n// import Code39Writer from './oned/Code39Writer'\n// import Code93Writer from './oned/Code93Writer'\n// import EAN13Writer from './oned/EAN13Writer'\n// import EAN8Writer from './oned/EAN8Writer'\n// import ITFWriter from './oned/ITFWriter'\n// import UPCAWriter from './oned/UPCAWriter'\n// import UPCEWriter from './oned/UPCEWriter'\n// import PDF417Writer from './pdf417/PDF417Writer'\nvar QRCodeWriter_1 = require(\"./qrcode/QRCodeWriter\");\nvar BarcodeFormat_1 = require(\"./BarcodeFormat\");\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n/*import java.util.Map;*/\n/**\n * This is a factory class which finds the appropriate Writer subclass for the BarcodeFormat\n * requested and encodes the barcode with the supplied contents.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n */\nvar MultiFormatWriter = /** @class */function () {\n  function MultiFormatWriter() {}\n  /*@Override*/\n  // public encode(contents: string,\n  //                         format: BarcodeFormat,\n  //                         width: number /*int*/,\n  //                         height: number /*int*/): BitMatrix /*throws WriterException */ {\n  //   return encode(contents, format, width, height, null)\n  // }\n  /*@Override*/\n  MultiFormatWriter.prototype.encode = function (contents, format, width /*int*/, height /*int*/, hints) {\n    var writer;\n    switch (format) {\n      // case BarcodeFormat.EAN_8:\n      //   writer = new EAN8Writer()\n      //   break\n      // case BarcodeFormat.UPC_E:\n      //   writer = new UPCEWriter()\n      //   break\n      // case BarcodeFormat.EAN_13:\n      //   writer = new EAN13Writer()\n      //   break\n      // case BarcodeFormat.UPC_A:\n      //   writer = new UPCAWriter()\n      //   break\n      case BarcodeFormat_1.default.QR_CODE:\n        writer = new QRCodeWriter_1.default();\n        break;\n      // case BarcodeFormat.CODE_39:\n      //   writer = new Code39Writer()\n      //   break\n      // case BarcodeFormat.CODE_93:\n      //   writer = new Code93Writer()\n      //   break\n      // case BarcodeFormat.CODE_128:\n      //   writer = new Code128Writer()\n      //   break\n      // case BarcodeFormat.ITF:\n      //   writer = new ITFWriter()\n      //   break\n      // case BarcodeFormat.PDF_417:\n      //   writer = new PDF417Writer()\n      //   break\n      // case BarcodeFormat.CODABAR:\n      //   writer = new CodaBarWriter()\n      //   break\n      // case BarcodeFormat.DATA_MATRIX:\n      //   writer = new DataMatrixWriter()\n      //   break\n      // case BarcodeFormat.AZTEC:\n      //   writer = new AztecWriter()\n      //   break\n      default:\n        throw new IllegalArgumentException_1.default('No encoder available for format ' + format);\n    }\n    return writer.encode(contents, format, width, height, hints);\n  };\n  return MultiFormatWriter;\n}();\nexports.default = MultiFormatWriter;","map":{"version":3,"names":["QRCodeWriter_1","require","BarcodeFormat_1","IllegalArgumentException_1","MultiFormatWriter","prototype","encode","contents","format","width","height","hints","writer","default","QR_CODE"],"sources":["../../src/core/MultiFormatWriter.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAAA,cAAA,GAAAC,OAAA;AAEA,IAAAC,eAAA,GAAAD,OAAA;AAGA,IAAAE,0BAAA,GAAAF,OAAA;AAEA;AAEA;;;;;;AAMA,IAAAG,iBAAA;EAAA,SAAAA,kBAAA,GA+DA;EA7DI;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACOA,iBAAA,CAAAC,SAAA,CAAAC,MAAM,GAAb,UAAcC,QAAgB,EAC1BC,MAAqB,EACrBC,KAAa,CAAC,SAASC,MAAc,CAAC,SACtCC,KAA+B;IAE/B,IAAIC,MAAc;IAClB,QAAQJ,MAAM;MACV;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,KAAKN,eAAA,CAAAW,OAAa,CAACC,OAAO;QACtBF,MAAM,GAAG,IAAIZ,cAAA,CAAAa,OAAY,EAAE;QAC3B;MACJ;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;QACI,MAAM,IAAIV,0BAAA,CAAAU,OAAwB,CAAC,kCAAkC,GAAGL,MAAM,CAAC;IAAC;IAExF,OAAOI,MAAM,CAACN,MAAM,CAACC,QAAQ,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC;EAChE,CAAC;EAEL,OAAAP,iBAAC;AAAD,CAAC,EA/DD"},"metadata":{},"sourceType":"script"}