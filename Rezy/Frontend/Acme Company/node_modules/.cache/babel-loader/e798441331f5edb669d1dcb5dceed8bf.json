{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar StringUtils_1 = require(\"../common/StringUtils\");\nvar StringBuilder = /** @class */function () {\n  function StringBuilder(value) {\n    if (value === void 0) {\n      value = '';\n    }\n    this.value = value;\n  }\n  StringBuilder.prototype.enableDecoding = function (encoding) {\n    this.encoding = encoding;\n    return this;\n  };\n  StringBuilder.prototype.append = function (s) {\n    if (typeof s === 'string') {\n      this.value += s.toString();\n    } else if (this.encoding) {\n      // use passed format (fromCharCode will return UTF8 encoding)\n      this.value += StringUtils_1.default.castAsNonUtf8Char(s, this.encoding);\n    } else {\n      // correctly converts from UTF-8, but not other encodings\n      this.value += String.fromCharCode(s);\n    }\n    return this;\n  };\n  StringBuilder.prototype.length = function () {\n    return this.value.length;\n  };\n  StringBuilder.prototype.charAt = function (n) {\n    return this.value.charAt(n);\n  };\n  StringBuilder.prototype.deleteCharAt = function (n) {\n    this.value = this.value.substr(0, n) + this.value.substring(n + 1);\n  };\n  StringBuilder.prototype.setCharAt = function (n, c) {\n    this.value = this.value.substr(0, n) + c + this.value.substr(n + 1);\n  };\n  StringBuilder.prototype.substring = function (start, end) {\n    return this.value.substring(start, end);\n  };\n  /**\n   * @note helper method for RSS Expanded\n   */\n  StringBuilder.prototype.setLengthToZero = function () {\n    this.value = \"\";\n  };\n  StringBuilder.prototype.toString = function () {\n    return this.value;\n  };\n  StringBuilder.prototype.insert = function (n, c) {\n    this.value = this.value.substr(0, n) + c + this.value.substr(n + c.length);\n  };\n  return StringBuilder;\n}();\nexports.default = StringBuilder;","map":{"version":3,"names":["StringUtils_1","require","StringBuilder","value","prototype","enableDecoding","encoding","append","s","toString","default","castAsNonUtf8Char","String","fromCharCode","length","charAt","n","deleteCharAt","substr","substring","setCharAt","c","start","end","setLengthToZero","insert"],"sources":["../../../src/core/util/StringBuilder.ts"],"sourcesContent":[null],"mappings":";;;;;AAGA,IAAAA,aAAA,GAAAC,OAAA;AAGA,IAAAC,aAAA;EAIE,SAAAA,cAA2BC,KAAkB;IAAlB,IAAAA,KAAA;MAAAA,KAAA,KAAkB;IAAA;IAAlB,KAAAA,KAAK,GAALA,KAAK;EAAgB;EAEzCD,aAAA,CAAAE,SAAA,CAAAC,cAAc,GAArB,UAAsBC,QAAyB;IAC7C,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,OAAO,IAAI;EACb,CAAC;EAEMJ,aAAA,CAAAE,SAAA,CAAAG,MAAM,GAAb,UAAcC,CAAkB;IAC9B,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE;MACzB,IAAI,CAACL,KAAK,IAAIK,CAAC,CAACC,QAAQ,EAAE;KAC3B,MAAM,IAAI,IAAI,CAACH,QAAQ,EAAE;MACxB;MACA,IAAI,CAACH,KAAK,IAAIH,aAAA,CAAAU,OAAW,CAACC,iBAAiB,CAACH,CAAC,EAAE,IAAI,CAACF,QAAQ,CAAC;KAC9D,MAAM;MACL;MACA,IAAI,CAACH,KAAK,IAAIS,MAAM,CAACC,YAAY,CAACL,CAAC,CAAC;;IAEtC,OAAO,IAAI;EACb,CAAC;EAEMN,aAAA,CAAAE,SAAA,CAAAU,MAAM,GAAb;IACE,OAAO,IAAI,CAACX,KAAK,CAACW,MAAM;EAC1B,CAAC;EAEMZ,aAAA,CAAAE,SAAA,CAAAW,MAAM,GAAb,UAAcC,CAAS;IACrB,OAAO,IAAI,CAACb,KAAK,CAACY,MAAM,CAACC,CAAC,CAAC;EAC7B,CAAC;EAEMd,aAAA,CAAAE,SAAA,CAAAa,YAAY,GAAnB,UAAoBD,CAAS;IAC3B,IAAI,CAACb,KAAK,GAAG,IAAI,CAACA,KAAK,CAACe,MAAM,CAAC,CAAC,EAAEF,CAAC,CAAC,GAAG,IAAI,CAACb,KAAK,CAACgB,SAAS,CAACH,CAAC,GAAG,CAAC,CAAC;EACpE,CAAC;EAEMd,aAAA,CAAAE,SAAA,CAAAgB,SAAS,GAAhB,UAAiBJ,CAAS,EAAEK,CAAS;IACnC,IAAI,CAAClB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACe,MAAM,CAAC,CAAC,EAAEF,CAAC,CAAC,GAAGK,CAAC,GAAG,IAAI,CAAClB,KAAK,CAACe,MAAM,CAACF,CAAC,GAAG,CAAC,CAAC;EACrE,CAAC;EAEMd,aAAA,CAAAE,SAAA,CAAAe,SAAS,GAAhB,UAAiBG,KAAU,EAAEC,GAAQ;IACnC,OAAO,IAAI,CAACpB,KAAK,CAACgB,SAAS,CAACG,KAAK,EAAEC,GAAG,CAAC;EACzC,CAAC;EAED;;;EAGOrB,aAAA,CAAAE,SAAA,CAAAoB,eAAe,GAAtB;IACI,IAAI,CAACrB,KAAK,GAAG,EAAE;EACnB,CAAC;EAEMD,aAAA,CAAAE,SAAA,CAAAK,QAAQ,GAAf;IACE,OAAO,IAAI,CAACN,KAAK;EACnB,CAAC;EAEMD,aAAA,CAAAE,SAAA,CAAAqB,MAAM,GAAb,UAAcT,CAAS,EAAEK,CAAS;IAChC,IAAI,CAAClB,KAAK,GAAG,IAAI,CAACA,KAAK,CAACe,MAAM,CAAC,CAAC,EAAEF,CAAC,CAAC,GAAGK,CAAC,GAAG,IAAI,CAAClB,KAAK,CAACe,MAAM,CAACF,CAAC,GAAGK,CAAC,CAACP,MAAM,CAAC;EAC5E,CAAC;EACH,OAAAZ,aAAC;AAAD,CAAC,EA1DD"},"metadata":{},"sourceType":"script"}