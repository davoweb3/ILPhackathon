{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright (C) 2012 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar BarcodeFormat_1 = require(\"../BarcodeFormat\");\nvar AbstractUPCEANReader_1 = require(\"./AbstractUPCEANReader\");\nvar Result_1 = require(\"../Result\");\nvar ResultPoint_1 = require(\"../ResultPoint\");\nvar ResultMetadataType_1 = require(\"../ResultMetadataType\");\nvar NotFoundException_1 = require(\"../NotFoundException\");\n/**\n * @see UPCEANExtension5Support\n */\nvar UPCEANExtension2Support = /** @class */function () {\n  function UPCEANExtension2Support() {\n    this.decodeMiddleCounters = [0, 0, 0, 0];\n    this.decodeRowStringBuffer = '';\n  }\n  UPCEANExtension2Support.prototype.decodeRow = function (rowNumber, row, extensionStartRange) {\n    var result = this.decodeRowStringBuffer;\n    var end = this.decodeMiddle(row, extensionStartRange, result);\n    var resultString = result.toString();\n    var extensionData = UPCEANExtension2Support.parseExtensionString(resultString);\n    var resultPoints = [new ResultPoint_1.default((extensionStartRange[0] + extensionStartRange[1]) / 2.0, rowNumber), new ResultPoint_1.default(end, rowNumber)];\n    var extensionResult = new Result_1.default(resultString, null, 0, resultPoints, BarcodeFormat_1.default.UPC_EAN_EXTENSION, new Date().getTime());\n    if (extensionData != null) {\n      extensionResult.putAllMetadata(extensionData);\n    }\n    return extensionResult;\n  };\n  UPCEANExtension2Support.prototype.decodeMiddle = function (row, startRange, resultString) {\n    var e_1, _a;\n    var counters = this.decodeMiddleCounters;\n    counters[0] = 0;\n    counters[1] = 0;\n    counters[2] = 0;\n    counters[3] = 0;\n    var end = row.getSize();\n    var rowOffset = startRange[1];\n    var checkParity = 0;\n    for (var x = 0; x < 2 && rowOffset < end; x++) {\n      var bestMatch = AbstractUPCEANReader_1.default.decodeDigit(row, counters, rowOffset, AbstractUPCEANReader_1.default.L_AND_G_PATTERNS);\n      resultString += String.fromCharCode('0'.charCodeAt(0) + bestMatch % 10);\n      try {\n        for (var counters_1 = __values(counters), counters_1_1 = counters_1.next(); !counters_1_1.done; counters_1_1 = counters_1.next()) {\n          var counter = counters_1_1.value;\n          rowOffset += counter;\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (counters_1_1 && !counters_1_1.done && (_a = counters_1.return)) _a.call(counters_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n      if (bestMatch >= 10) {\n        checkParity |= 1 << 1 - x;\n      }\n      if (x !== 1) {\n        // Read off separator if not last\n        rowOffset = row.getNextSet(rowOffset);\n        rowOffset = row.getNextUnset(rowOffset);\n      }\n    }\n    if (resultString.length !== 2) {\n      throw new NotFoundException_1.default();\n    }\n    if (parseInt(resultString.toString()) % 4 !== checkParity) {\n      throw new NotFoundException_1.default();\n    }\n    return rowOffset;\n  };\n  UPCEANExtension2Support.parseExtensionString = function (raw) {\n    if (raw.length !== 2) {\n      return null;\n    }\n    return new Map([[ResultMetadataType_1.default.ISSUE_NUMBER, parseInt(raw)]]);\n  };\n  return UPCEANExtension2Support;\n}();\nexports.default = UPCEANExtension2Support;","map":{"version":3,"names":["BarcodeFormat_1","require","AbstractUPCEANReader_1","Result_1","ResultPoint_1","ResultMetadataType_1","NotFoundException_1","UPCEANExtension2Support","decodeMiddleCounters","decodeRowStringBuffer","prototype","decodeRow","rowNumber","row","extensionStartRange","result","end","decodeMiddle","resultString","toString","extensionData","parseExtensionString","resultPoints","default","extensionResult","UPC_EAN_EXTENSION","Date","getTime","putAllMetadata","startRange","counters","getSize","rowOffset","checkParity","x","bestMatch","decodeDigit","L_AND_G_PATTERNS","String","fromCharCode","charCodeAt","counters_1","__values","counters_1_1","next","done","counter","value","getNextSet","getNextUnset","length","parseInt","raw","Map","ISSUE_NUMBER"],"sources":["../../../src/core/oned/UPCEANExtension2Support.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAAA,eAAA,GAAAC,OAAA;AAGA,IAAAC,sBAAA,GAAAD,OAAA;AACA,IAAAE,QAAA,GAAAF,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AACA,IAAAI,oBAAA,GAAAJ,OAAA;AACA,IAAAK,mBAAA,GAAAL,OAAA;AAEA;;;AAGA,IAAAM,uBAAA;EAAA,SAAAA,wBAAA;IACY,KAAAC,oBAAoB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnC,KAAAC,qBAAqB,GAAG,EAAE;EAqEtC;EAlEWF,uBAAA,CAAAG,SAAA,CAAAC,SAAS,GAAhB,UAAiBC,SAAiB,EAAEC,GAAa,EAAEC,mBAA6B;IAC5E,IAAIC,MAAM,GAAG,IAAI,CAACN,qBAAqB;IACvC,IAAIO,GAAG,GAAG,IAAI,CAACC,YAAY,CAACJ,GAAG,EAAEC,mBAAmB,EAAEC,MAAM,CAAC;IAE7D,IAAIG,YAAY,GAAGH,MAAM,CAACI,QAAQ,EAAE;IACpC,IAAIC,aAAa,GAAGb,uBAAuB,CAACc,oBAAoB,CAACH,YAAY,CAAC;IAE9E,IAAII,YAAY,GAAG,CACf,IAAIlB,aAAA,CAAAmB,OAAW,CAAC,CAACT,mBAAmB,CAAC,CAAC,CAAC,GAAGA,mBAAmB,CAAC,CAAC,CAAC,IAAI,GAAG,EAAEF,SAAS,CAAC,EACnF,IAAIR,aAAA,CAAAmB,OAAW,CAACP,GAAG,EAAEJ,SAAS,CAAC,CAClC;IAED,IAAIY,eAAe,GAAG,IAAIrB,QAAA,CAAAoB,OAAM,CAACL,YAAY,EAAE,IAAI,EAAE,CAAC,EAAEI,YAAY,EAAEtB,eAAA,CAAAuB,OAAa,CAACE,iBAAiB,EAAE,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAAC;IAE5H,IAAIP,aAAa,IAAI,IAAI,EAAE;MACvBI,eAAe,CAACI,cAAc,CAACR,aAAa,CAAC;;IAGjD,OAAOI,eAAe;EAC1B,CAAC;EAEMjB,uBAAA,CAAAG,SAAA,CAAAO,YAAY,GAAnB,UAAoBJ,GAAa,EAAEgB,UAAoB,EAAEX,YAAoB;;IACzE,IAAIY,QAAQ,GAAG,IAAI,CAACtB,oBAAoB;IACxCsB,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;IACfA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;IACfA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;IACfA,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC;IACf,IAAId,GAAG,GAAGH,GAAG,CAACkB,OAAO,EAAE;IACvB,IAAIC,SAAS,GAAGH,UAAU,CAAC,CAAC,CAAC;IAE7B,IAAII,WAAW,GAAG,CAAC;IAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,IAAIF,SAAS,GAAGhB,GAAG,EAAEkB,CAAC,EAAE,EAAE;MAC3C,IAAIC,SAAS,GAAGjC,sBAAA,CAAAqB,OAAoB,CAACa,WAAW,CAACvB,GAAG,EAAEiB,QAAQ,EAAEE,SAAS,EAAE9B,sBAAA,CAAAqB,OAAoB,CAACc,gBAAgB,CAAC;MACjHnB,YAAY,IAAIoB,MAAM,CAACC,YAAY,CAAE,GAAG,CAACC,UAAU,CAAC,CAAC,CAAC,GAAGL,SAAS,GAAG,EAAE,CAAE;;QACzE,KAAoB,IAAAM,UAAA,GAAAC,QAAA,CAAAZ,QAAQ,GAAAa,YAAA,GAAAF,UAAA,CAAAG,IAAA,KAAAD,YAAA,CAAAE,IAAA,EAAAF,YAAA,GAAAF,UAAA,CAAAG,IAAA,IAAE;UAAzB,IAAIE,OAAO,GAAAH,YAAA,CAAAI,KAAA;UACZf,SAAS,IAAIc,OAAO;;;;;;;;;;;;;MAExB,IAAIX,SAAS,IAAI,EAAE,EAAE;QACjBF,WAAW,IAAI,CAAC,IAAK,CAAC,GAAGC,CAAE;;MAE/B,IAAIA,CAAC,KAAK,CAAC,EAAE;QACT;QACAF,SAAS,GAAGnB,GAAG,CAACmC,UAAU,CAAChB,SAAS,CAAC;QACrCA,SAAS,GAAGnB,GAAG,CAACoC,YAAY,CAACjB,SAAS,CAAC;;;IAI/C,IAAId,YAAY,CAACgC,MAAM,KAAK,CAAC,EAAE;MAC3B,MAAM,IAAI5C,mBAAA,CAAAiB,OAAiB,EAAE;;IAGjC,IAAI4B,QAAQ,CAACjC,YAAY,CAACC,QAAQ,EAAE,CAAC,GAAG,CAAC,KAAKc,WAAW,EAAE;MACvD,MAAM,IAAI3B,mBAAA,CAAAiB,OAAiB,EAAE;;IAGjC,OAAOS,SAAS;EACpB,CAAC;EAEMzB,uBAAA,CAAAc,oBAAoB,GAA3B,UAA4B+B,GAAW;IACnC,IAAIA,GAAG,CAACF,MAAM,KAAK,CAAC,EAAE;MAClB,OAAO,IAAI;;IAGf,OAAO,IAAIG,GAAG,CAAC,CAAC,CAAChD,oBAAA,CAAAkB,OAAkB,CAAC+B,YAAY,EAAEH,QAAQ,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;EACtE,CAAC;EACL,OAAA7C,uBAAC;AAAD,CAAC,EAvED"},"metadata":{},"sourceType":"script"}