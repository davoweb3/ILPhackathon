{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar StringBuilder_1 = require(\"./util/StringBuilder\");\nvar UnsupportedOperationException_1 = require(\"./UnsupportedOperationException\");\n/*namespace com.google.zxing {*/\n/**\n * The purpose of this class hierarchy is to abstract different bitmap implementations across\n * platforms into a standard interface for requesting greyscale luminance values. The interface\n * only provides immutable methods; therefore crop and rotation create copies. This is to ensure\n * that one Reader does not modify the original luminance source and leave it in an unknown state\n * for other Readers in the chain.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n */\nvar LuminanceSource = /** @class */function () {\n  function LuminanceSource(width /*int*/, height /*int*/) {\n    this.width = width;\n    this.height = height;\n  }\n  /**\n   * @return The width of the bitmap.\n   */\n  LuminanceSource.prototype.getWidth = function () {\n    return this.width;\n  };\n  /**\n   * @return The height of the bitmap.\n   */\n  LuminanceSource.prototype.getHeight = function () {\n    return this.height;\n  };\n  /**\n   * @return Whether this subclass supports cropping.\n   */\n  LuminanceSource.prototype.isCropSupported = function () {\n    return false;\n  };\n  /**\n   * Returns a new object with cropped image data. Implementations may keep a reference to the\n   * original data rather than a copy. Only callable if isCropSupported() is true.\n   *\n   * @param left The left coordinate, which must be in [0,getWidth())\n   * @param top The top coordinate, which must be in [0,getHeight())\n   * @param width The width of the rectangle to crop.\n   * @param height The height of the rectangle to crop.\n   * @return A cropped version of this object.\n   */\n  LuminanceSource.prototype.crop = function (left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n    throw new UnsupportedOperationException_1.default('This luminance source does not support cropping.');\n  };\n  /**\n   * @return Whether this subclass supports counter-clockwise rotation.\n   */\n  LuminanceSource.prototype.isRotateSupported = function () {\n    return false;\n  };\n  /**\n   * Returns a new object with rotated image data by 90 degrees counterclockwise.\n   * Only callable if {@link #isRotateSupported()} is true.\n   *\n   * @return A rotated version of this object.\n   */\n  LuminanceSource.prototype.rotateCounterClockwise = function () {\n    throw new UnsupportedOperationException_1.default('This luminance source does not support rotation by 90 degrees.');\n  };\n  /**\n   * Returns a new object with rotated image data by 45 degrees counterclockwise.\n   * Only callable if {@link #isRotateSupported()} is true.\n   *\n   * @return A rotated version of this object.\n   */\n  LuminanceSource.prototype.rotateCounterClockwise45 = function () {\n    throw new UnsupportedOperationException_1.default('This luminance source does not support rotation by 45 degrees.');\n  };\n  /*@Override*/\n  LuminanceSource.prototype.toString = function () {\n    var row = new Uint8ClampedArray(this.width);\n    var result = new StringBuilder_1.default();\n    for (var y = 0; y < this.height; y++) {\n      var sourceRow = this.getRow(y, row);\n      for (var x = 0; x < this.width; x++) {\n        var luminance = sourceRow[x] & 0xFF;\n        var c = void 0;\n        if (luminance < 0x40) {\n          c = '#';\n        } else if (luminance < 0x80) {\n          c = '+';\n        } else if (luminance < 0xC0) {\n          c = '.';\n        } else {\n          c = ' ';\n        }\n        result.append(c);\n      }\n      result.append('\\n');\n    }\n    return result.toString();\n  };\n  return LuminanceSource;\n}();\nexports.default = LuminanceSource;","map":{"version":3,"names":["StringBuilder_1","require","UnsupportedOperationException_1","LuminanceSource","width","height","prototype","getWidth","getHeight","isCropSupported","crop","left","top","default","isRotateSupported","rotateCounterClockwise","rotateCounterClockwise45","toString","row","Uint8ClampedArray","result","y","sourceRow","getRow","x","luminance","c","append","exports"],"sources":["../../src/core/LuminanceSource.ts"],"sourcesContent":[null],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;AAiBA,IAAAA,eAAA,GAAAC,OAAA;AACA,IAAAC,+BAAA,GAAAD,OAAA;AAEA;AAEA;;;;;;;;;AASA,IAAAE,eAAA;EAEI,SAAAA,gBAA8BC,KAAa,CAAC,SAAiBC,MAAc,CAAC,SAAO;IAArD,KAAAD,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;EAAoB;EA0BvF;;;EAGOF,eAAA,CAAAG,SAAA,CAAAC,QAAQ,GAAf;IACI,OAAO,IAAI,CAACH,KAAK;EACrB,CAAC;EAED;;;EAGOD,eAAA,CAAAG,SAAA,CAAAE,SAAS,GAAhB;IACI,OAAO,IAAI,CAACH,MAAM;EACtB,CAAC;EAED;;;EAGOF,eAAA,CAAAG,SAAA,CAAAG,eAAe,GAAtB;IACI,OAAO,KAAK;EAChB,CAAC;EAED;;;;;;;;;;EAUON,eAAA,CAAAG,SAAA,CAAAI,IAAI,GAAX,UAAYC,IAAY,CAAC,SAASC,GAAW,CAAC,SAASR,KAAa,CAAC,SAASC,MAAc,CAAC,SAAO;IAChG,MAAM,IAAIH,+BAAA,CAAAW,OAA6B,CAAC,kDAAkD,CAAC;EAC/F,CAAC;EAED;;;EAGOV,eAAA,CAAAG,SAAA,CAAAQ,iBAAiB,GAAxB;IACI,OAAO,KAAK;EAChB,CAAC;EAQD;;;;;;EAMOX,eAAA,CAAAG,SAAA,CAAAS,sBAAsB,GAA7B;IACI,MAAM,IAAIb,+BAAA,CAAAW,OAA6B,CAAC,gEAAgE,CAAC;EAC7G,CAAC;EAED;;;;;;EAMOV,eAAA,CAAAG,SAAA,CAAAU,wBAAwB,GAA/B;IACI,MAAM,IAAId,+BAAA,CAAAW,OAA6B,CAAC,gEAAgE,CAAC;EAC7G,CAAC;EAED;EACOV,eAAA,CAAAG,SAAA,CAAAW,QAAQ,GAAf;IACI,IAAMC,GAAG,GAAG,IAAIC,iBAAiB,CAAC,IAAI,CAACf,KAAK,CAAC;IAC7C,IAAIgB,MAAM,GAAG,IAAIpB,eAAA,CAAAa,OAAa,EAAE;IAChC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,MAAM,EAAEgB,CAAC,EAAE,EAAE;MAClC,IAAMC,SAAS,GAAG,IAAI,CAACC,MAAM,CAACF,CAAC,EAAEH,GAAG,CAAC;MACrC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACpB,KAAK,EAAEoB,CAAC,EAAE,EAAE;QACjC,IAAMC,SAAS,GAAGH,SAAS,CAACE,CAAC,CAAC,GAAG,IAAI;QACrC,IAAIE,CAAC;QACL,IAAID,SAAS,GAAG,IAAI,EAAE;UAClBC,CAAC,GAAG,GAAG;SACV,MAAM,IAAID,SAAS,GAAG,IAAI,EAAE;UACzBC,CAAC,GAAG,GAAG;SACV,MAAM,IAAID,SAAS,GAAG,IAAI,EAAE;UACzBC,CAAC,GAAG,GAAG;SACV,MAAM;UACHA,CAAC,GAAG,GAAG;;QAEXN,MAAM,CAACO,MAAM,CAACD,CAAC,CAAC;;MAEpBN,MAAM,CAACO,MAAM,CAAC,IAAI,CAAC;;IAEvB,OAAOP,MAAM,CAACH,QAAQ,EAAE;EAC5B,CAAC;EAEL,OAAAd,eAAC;AAAD,CAAC,EAzHD;AA2HAyB,OAAA,CAAAf,OAAA,GAAeV,eAAe"},"metadata":{},"sourceType":"script"}