{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n    i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar NotFoundException_1 = require(\"../../../../NotFoundException\");\nvar FieldParser = /** @class */function () {\n  function FieldParser() {}\n  FieldParser.parseFieldsInGeneralPurpose = function (rawInformation) {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n    if (!rawInformation) {\n      return null;\n    }\n    // Processing 2-digit AIs\n    if (rawInformation.length < 2) {\n      throw new NotFoundException_1.default();\n    }\n    var firstTwoDigits = rawInformation.substring(0, 2);\n    try {\n      for (var _e = __values(FieldParser.TWO_DIGIT_DATA_LENGTH), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var dataLength = _f.value;\n        if (dataLength[0] === firstTwoDigits) {\n          if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n            return FieldParser.processVariableAI(2, dataLength[2], rawInformation);\n          }\n          return FieldParser.processFixedAI(2, dataLength[1], rawInformation);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n    if (rawInformation.length < 3) {\n      throw new NotFoundException_1.default();\n    }\n    var firstThreeDigits = rawInformation.substring(0, 3);\n    try {\n      for (var _g = __values(FieldParser.THREE_DIGIT_DATA_LENGTH), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var dataLength = _h.value;\n        if (dataLength[0] === firstThreeDigits) {\n          if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n            return FieldParser.processVariableAI(3, dataLength[2], rawInformation);\n          }\n          return FieldParser.processFixedAI(3, dataLength[1], rawInformation);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n    try {\n      for (var _j = __values(FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var dataLength = _k.value;\n        if (dataLength[0] === firstThreeDigits) {\n          if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n            return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n          }\n          return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n    if (rawInformation.length < 4) {\n      throw new NotFoundException_1.default();\n    }\n    var firstFourDigits = rawInformation.substring(0, 4);\n    try {\n      for (var _l = __values(FieldParser.FOUR_DIGIT_DATA_LENGTH), _m = _l.next(); !_m.done; _m = _l.next()) {\n        var dataLength = _m.value;\n        if (dataLength[0] === firstFourDigits) {\n          if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n            return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n          }\n          return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n    throw new NotFoundException_1.default();\n  };\n  FieldParser.processFixedAI = function (aiSize, fieldSize, rawInformation) {\n    if (rawInformation.length < aiSize) {\n      throw new NotFoundException_1.default();\n    }\n    var ai = rawInformation.substring(0, aiSize);\n    if (rawInformation.length < aiSize + fieldSize) {\n      throw new NotFoundException_1.default();\n    }\n    var field = rawInformation.substring(aiSize, aiSize + fieldSize);\n    var remaining = rawInformation.substring(aiSize + fieldSize);\n    var result = '(' + ai + ')' + field;\n    var parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n    return parsedAI == null ? result : result + parsedAI;\n  };\n  FieldParser.processVariableAI = function (aiSize, variableFieldSize, rawInformation) {\n    var ai = rawInformation.substring(0, aiSize);\n    var maxSize;\n    if (rawInformation.length < aiSize + variableFieldSize) {\n      maxSize = rawInformation.length;\n    } else {\n      maxSize = aiSize + variableFieldSize;\n    }\n    var field = rawInformation.substring(aiSize, maxSize);\n    var remaining = rawInformation.substring(maxSize);\n    var result = '(' + ai + ')' + field;\n    var parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n    return parsedAI == null ? result : result + parsedAI;\n  };\n  FieldParser.VARIABLE_LENGTH = [];\n  FieldParser.TWO_DIGIT_DATA_LENGTH = [[\"00\", 18], [\"01\", 14], [\"02\", 14], [\"10\", FieldParser.VARIABLE_LENGTH, 20], [\"11\", 6], [\"12\", 6], [\"13\", 6], [\"15\", 6], [\"17\", 6], [\"20\", 2], [\"21\", FieldParser.VARIABLE_LENGTH, 20], [\"22\", FieldParser.VARIABLE_LENGTH, 29], [\"30\", FieldParser.VARIABLE_LENGTH, 8], [\"37\", FieldParser.VARIABLE_LENGTH, 8],\n  //internal company codes\n  [\"90\", FieldParser.VARIABLE_LENGTH, 30], [\"91\", FieldParser.VARIABLE_LENGTH, 30], [\"92\", FieldParser.VARIABLE_LENGTH, 30], [\"93\", FieldParser.VARIABLE_LENGTH, 30], [\"94\", FieldParser.VARIABLE_LENGTH, 30], [\"95\", FieldParser.VARIABLE_LENGTH, 30], [\"96\", FieldParser.VARIABLE_LENGTH, 30], [\"97\", FieldParser.VARIABLE_LENGTH, 3], [\"98\", FieldParser.VARIABLE_LENGTH, 30], [\"99\", FieldParser.VARIABLE_LENGTH, 30]];\n  FieldParser.THREE_DIGIT_DATA_LENGTH = [\n  // Same format as above\n  [\"240\", FieldParser.VARIABLE_LENGTH, 30], [\"241\", FieldParser.VARIABLE_LENGTH, 30], [\"242\", FieldParser.VARIABLE_LENGTH, 6], [\"250\", FieldParser.VARIABLE_LENGTH, 30], [\"251\", FieldParser.VARIABLE_LENGTH, 30], [\"253\", FieldParser.VARIABLE_LENGTH, 17], [\"254\", FieldParser.VARIABLE_LENGTH, 20], [\"400\", FieldParser.VARIABLE_LENGTH, 30], [\"401\", FieldParser.VARIABLE_LENGTH, 30], [\"402\", 17], [\"403\", FieldParser.VARIABLE_LENGTH, 30], [\"410\", 13], [\"411\", 13], [\"412\", 13], [\"413\", 13], [\"414\", 13], [\"420\", FieldParser.VARIABLE_LENGTH, 20], [\"421\", FieldParser.VARIABLE_LENGTH, 15], [\"422\", 3], [\"423\", FieldParser.VARIABLE_LENGTH, 15], [\"424\", 3], [\"425\", 3], [\"426\", 3]];\n  FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH = [\n  // Same format as above\n  [\"310\", 6], [\"311\", 6], [\"312\", 6], [\"313\", 6], [\"314\", 6], [\"315\", 6], [\"316\", 6], [\"320\", 6], [\"321\", 6], [\"322\", 6], [\"323\", 6], [\"324\", 6], [\"325\", 6], [\"326\", 6], [\"327\", 6], [\"328\", 6], [\"329\", 6], [\"330\", 6], [\"331\", 6], [\"332\", 6], [\"333\", 6], [\"334\", 6], [\"335\", 6], [\"336\", 6], [\"340\", 6], [\"341\", 6], [\"342\", 6], [\"343\", 6], [\"344\", 6], [\"345\", 6], [\"346\", 6], [\"347\", 6], [\"348\", 6], [\"349\", 6], [\"350\", 6], [\"351\", 6], [\"352\", 6], [\"353\", 6], [\"354\", 6], [\"355\", 6], [\"356\", 6], [\"357\", 6], [\"360\", 6], [\"361\", 6], [\"362\", 6], [\"363\", 6], [\"364\", 6], [\"365\", 6], [\"366\", 6], [\"367\", 6], [\"368\", 6], [\"369\", 6], [\"390\", FieldParser.VARIABLE_LENGTH, 15], [\"391\", FieldParser.VARIABLE_LENGTH, 18], [\"392\", FieldParser.VARIABLE_LENGTH, 15], [\"393\", FieldParser.VARIABLE_LENGTH, 18], [\"703\", FieldParser.VARIABLE_LENGTH, 30]];\n  FieldParser.FOUR_DIGIT_DATA_LENGTH = [\n  // Same format as above\n  [\"7001\", 13], [\"7002\", FieldParser.VARIABLE_LENGTH, 30], [\"7003\", 10], [\"8001\", 14], [\"8002\", FieldParser.VARIABLE_LENGTH, 20], [\"8003\", FieldParser.VARIABLE_LENGTH, 30], [\"8004\", FieldParser.VARIABLE_LENGTH, 30], [\"8005\", 6], [\"8006\", 18], [\"8007\", FieldParser.VARIABLE_LENGTH, 30], [\"8008\", FieldParser.VARIABLE_LENGTH, 12], [\"8018\", 18], [\"8020\", FieldParser.VARIABLE_LENGTH, 25], [\"8100\", 6], [\"8101\", 10], [\"8102\", 2], [\"8110\", FieldParser.VARIABLE_LENGTH, 70], [\"8200\", FieldParser.VARIABLE_LENGTH, 70]];\n  return FieldParser;\n}();\nexports.default = FieldParser;","map":{"version":3,"sources":["../../../../../../src/core/oned/rss/expanded/decoders/FieldParser.ts"],"names":[],"mappings":"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V,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,CAAC,CAAC,EACV,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACxC,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACxC,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACxC,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACxC,CAAC,KAAK,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,CACzC;EACuB,WAAA,CAAA,sBAAsB,GAAG;EAC/C;EAEA,CAAC,MAAM,EAAE,EAAE,CAAC,EACZ,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,EAAE,CAAC,EAEZ,CAAC,MAAM,EAAE,EAAE,CAAC,EACZ,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,CAAC,CAAC,EACX,CAAC,MAAM,EAAE,EAAE,CAAC,EACZ,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,EAAE,CAAC,EACZ,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,CAAC,CAAC,EACX,CAAC,MAAM,EAAE,EAAE,CAAC,EACZ,CAAC,MAAM,EAAE,CAAC,CAAC,EACX,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,EACzC,CAAC,MAAM,EAAE,WAAW,CAAC,eAAe,EAAE,EAAE,CAAC,CAC1C;EAwGH,OAAA,WAAC;CAAA,EAAA;kBAvPoB,WAAW","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NotFoundException_1 = require(\"../../../../NotFoundException\");\nvar FieldParser = /** @class */ (function () {\n    function FieldParser() {\n    }\n    FieldParser.parseFieldsInGeneralPurpose = function (rawInformation) {\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n        if (!rawInformation) {\n            return null;\n        }\n        // Processing 2-digit AIs\n        if (rawInformation.length < 2) {\n            throw new NotFoundException_1.default();\n        }\n        var firstTwoDigits = rawInformation.substring(0, 2);\n        try {\n            for (var _e = __values(FieldParser.TWO_DIGIT_DATA_LENGTH), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var dataLength = _f.value;\n                if (dataLength[0] === firstTwoDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(2, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(2, dataLength[1], rawInformation);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (rawInformation.length < 3) {\n            throw new NotFoundException_1.default();\n        }\n        var firstThreeDigits = rawInformation.substring(0, 3);\n        try {\n            for (var _g = __values(FieldParser.THREE_DIGIT_DATA_LENGTH), _h = _g.next(); !_h.done; _h = _g.next()) {\n                var dataLength = _h.value;\n                if (dataLength[0] === firstThreeDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(3, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(3, dataLength[1], rawInformation);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        try {\n            for (var _j = __values(FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH), _k = _j.next(); !_k.done; _k = _j.next()) {\n                var dataLength = _k.value;\n                if (dataLength[0] === firstThreeDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (rawInformation.length < 4) {\n            throw new NotFoundException_1.default();\n        }\n        var firstFourDigits = rawInformation.substring(0, 4);\n        try {\n            for (var _l = __values(FieldParser.FOUR_DIGIT_DATA_LENGTH), _m = _l.next(); !_m.done; _m = _l.next()) {\n                var dataLength = _m.value;\n                if (dataLength[0] === firstFourDigits) {\n                    if (dataLength[1] === FieldParser.VARIABLE_LENGTH) {\n                        return FieldParser.processVariableAI(4, dataLength[2], rawInformation);\n                    }\n                    return FieldParser.processFixedAI(4, dataLength[1], rawInformation);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        throw new NotFoundException_1.default();\n    };\n    FieldParser.processFixedAI = function (aiSize, fieldSize, rawInformation) {\n        if (rawInformation.length < aiSize) {\n            throw new NotFoundException_1.default();\n        }\n        var ai = rawInformation.substring(0, aiSize);\n        if (rawInformation.length < aiSize + fieldSize) {\n            throw new NotFoundException_1.default();\n        }\n        var field = rawInformation.substring(aiSize, aiSize + fieldSize);\n        var remaining = rawInformation.substring(aiSize + fieldSize);\n        var result = '(' + ai + ')' + field;\n        var parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n        return parsedAI == null ? result : result + parsedAI;\n    };\n    FieldParser.processVariableAI = function (aiSize, variableFieldSize, rawInformation) {\n        var ai = rawInformation.substring(0, aiSize);\n        var maxSize;\n        if (rawInformation.length < aiSize + variableFieldSize) {\n            maxSize = rawInformation.length;\n        }\n        else {\n            maxSize = aiSize + variableFieldSize;\n        }\n        var field = rawInformation.substring(aiSize, maxSize);\n        var remaining = rawInformation.substring(maxSize);\n        var result = '(' + ai + ')' + field;\n        var parsedAI = FieldParser.parseFieldsInGeneralPurpose(remaining);\n        return parsedAI == null ? result : result + parsedAI;\n    };\n    FieldParser.VARIABLE_LENGTH = [];\n    FieldParser.TWO_DIGIT_DATA_LENGTH = [\n        [\"00\", 18],\n        [\"01\", 14],\n        [\"02\", 14],\n        [\"10\", FieldParser.VARIABLE_LENGTH, 20],\n        [\"11\", 6],\n        [\"12\", 6],\n        [\"13\", 6],\n        [\"15\", 6],\n        [\"17\", 6],\n        [\"20\", 2],\n        [\"21\", FieldParser.VARIABLE_LENGTH, 20],\n        [\"22\", FieldParser.VARIABLE_LENGTH, 29],\n        [\"30\", FieldParser.VARIABLE_LENGTH, 8],\n        [\"37\", FieldParser.VARIABLE_LENGTH, 8],\n        //internal company codes\n        [\"90\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"91\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"92\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"93\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"94\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"95\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"96\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"97\", FieldParser.VARIABLE_LENGTH, 3],\n        [\"98\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"99\", FieldParser.VARIABLE_LENGTH, 30],\n    ];\n    FieldParser.THREE_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        [\"240\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"241\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"242\", FieldParser.VARIABLE_LENGTH, 6],\n        [\"250\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"251\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"253\", FieldParser.VARIABLE_LENGTH, 17],\n        [\"254\", FieldParser.VARIABLE_LENGTH, 20],\n        [\"400\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"401\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"402\", 17],\n        [\"403\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"410\", 13],\n        [\"411\", 13],\n        [\"412\", 13],\n        [\"413\", 13],\n        [\"414\", 13],\n        [\"420\", FieldParser.VARIABLE_LENGTH, 20],\n        [\"421\", FieldParser.VARIABLE_LENGTH, 15],\n        [\"422\", 3],\n        [\"423\", FieldParser.VARIABLE_LENGTH, 15],\n        [\"424\", 3],\n        [\"425\", 3],\n        [\"426\", 3],\n    ];\n    FieldParser.THREE_DIGIT_PLUS_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        [\"310\", 6],\n        [\"311\", 6],\n        [\"312\", 6],\n        [\"313\", 6],\n        [\"314\", 6],\n        [\"315\", 6],\n        [\"316\", 6],\n        [\"320\", 6],\n        [\"321\", 6],\n        [\"322\", 6],\n        [\"323\", 6],\n        [\"324\", 6],\n        [\"325\", 6],\n        [\"326\", 6],\n        [\"327\", 6],\n        [\"328\", 6],\n        [\"329\", 6],\n        [\"330\", 6],\n        [\"331\", 6],\n        [\"332\", 6],\n        [\"333\", 6],\n        [\"334\", 6],\n        [\"335\", 6],\n        [\"336\", 6],\n        [\"340\", 6],\n        [\"341\", 6],\n        [\"342\", 6],\n        [\"343\", 6],\n        [\"344\", 6],\n        [\"345\", 6],\n        [\"346\", 6],\n        [\"347\", 6],\n        [\"348\", 6],\n        [\"349\", 6],\n        [\"350\", 6],\n        [\"351\", 6],\n        [\"352\", 6],\n        [\"353\", 6],\n        [\"354\", 6],\n        [\"355\", 6],\n        [\"356\", 6],\n        [\"357\", 6],\n        [\"360\", 6],\n        [\"361\", 6],\n        [\"362\", 6],\n        [\"363\", 6],\n        [\"364\", 6],\n        [\"365\", 6],\n        [\"366\", 6],\n        [\"367\", 6],\n        [\"368\", 6],\n        [\"369\", 6],\n        [\"390\", FieldParser.VARIABLE_LENGTH, 15],\n        [\"391\", FieldParser.VARIABLE_LENGTH, 18],\n        [\"392\", FieldParser.VARIABLE_LENGTH, 15],\n        [\"393\", FieldParser.VARIABLE_LENGTH, 18],\n        [\"703\", FieldParser.VARIABLE_LENGTH, 30],\n    ];\n    FieldParser.FOUR_DIGIT_DATA_LENGTH = [\n        // Same format as above\n        [\"7001\", 13],\n        [\"7002\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"7003\", 10],\n        [\"8001\", 14],\n        [\"8002\", FieldParser.VARIABLE_LENGTH, 20],\n        [\"8003\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"8004\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"8005\", 6],\n        [\"8006\", 18],\n        [\"8007\", FieldParser.VARIABLE_LENGTH, 30],\n        [\"8008\", FieldParser.VARIABLE_LENGTH, 12],\n        [\"8018\", 18],\n        [\"8020\", FieldParser.VARIABLE_LENGTH, 25],\n        [\"8100\", 6],\n        [\"8101\", 10],\n        [\"8102\", 2],\n        [\"8110\", FieldParser.VARIABLE_LENGTH, 70],\n        [\"8200\", FieldParser.VARIABLE_LENGTH, 70],\n    ];\n    return FieldParser;\n}());\nexports.default = FieldParser;\n//# sourceMappingURL=FieldParser.js.map"]},"metadata":{},"sourceType":"script"}