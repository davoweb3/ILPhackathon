{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ts_custom_error_1 = require(\"ts-custom-error\");\n/**\n * Custom Error class of type Exception.\n */\nvar Exception = /** @class */function (_super) {\n  __extends(Exception, _super);\n  /**\n   * Allows Exception to be constructed directly\n   * with some message and prototype definition.\n   */\n  function Exception(message) {\n    if (message === void 0) {\n      message = undefined;\n    }\n    var _this = _super.call(this, message) || this;\n    _this.message = message;\n    return _this;\n  }\n  return Exception;\n}(ts_custom_error_1.CustomError);\nexports.default = Exception;","map":{"version":3,"names":["ts_custom_error_1","require","Exception","_super","__extends","message","undefined","_this","call","CustomError"],"sources":["../../src/core/Exception.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,iBAAA,GAAAC,OAAA;AAEA;;;AAGA,IAAAC,SAAA,0BAAAC,MAAA;EAAuCC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAErC;;;;EAIA,SAAAD,UACSG,OAA2B;IAA3B,IAAAA,OAAA;MAAAA,OAAA,GAAAC,SAA2B;IAAA;IADpC,IAAAC,KAAA,GAGEJ,MAAA,CAAAK,IAAA,OAAMH,OAAO,CAAC;IAFPE,KAAA,CAAAF,OAAO,GAAPA,OAAO;;EAGhB;EACF,OAAAH,SAAC;AAAD,CAAC,CAXsCF,iBAAA,CAAAS,WAAW"},"metadata":{},"sourceType":"script"}