{"ast":null,"code":"\"use strict\";\n\n/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// package com.google.zxing.pdf417.decoder;\n// import com.google.zxing.common.detector.MathUtils;\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n// import com.google.zxing.pdf417.PDF417Common;\nvar PDF417Common_1 = require(\"../PDF417Common\");\nvar Float_1 = require(\"../../util/Float\");\n/**\n * @author Guenther Grau\n * @author creatale GmbH (christoph.schulz@creatale.de)\n */\nvar PDF417CodewordDecoder = /** @class */function () {\n  function PDF417CodewordDecoder() {}\n  /* @note\n   * this action have to be performed before first use of class\n   * - static constructor\n   * working with 32bit float (based from Java logic)\n  */\n  PDF417CodewordDecoder.initialize = function () {\n    // Pre-computes the symbol ratio table.\n    for ( /*int*/var i = 0; i < PDF417Common_1.default.SYMBOL_TABLE.length; i++) {\n      var currentSymbol = PDF417Common_1.default.SYMBOL_TABLE[i];\n      var currentBit = currentSymbol & 0x1;\n      for ( /*int*/var j = 0; j < PDF417Common_1.default.BARS_IN_MODULE; j++) {\n        var size = 0.0;\n        while ((currentSymbol & 0x1) === currentBit) {\n          size += 1.0;\n          currentSymbol >>= 1;\n        }\n        currentBit = currentSymbol & 0x1;\n        if (!PDF417CodewordDecoder.RATIOS_TABLE[i]) {\n          PDF417CodewordDecoder.RATIOS_TABLE[i] = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n        }\n        PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common_1.default.BARS_IN_MODULE - j - 1] = Math.fround(size / PDF417Common_1.default.MODULES_IN_CODEWORD);\n      }\n    }\n    this.bSymbolTableReady = true;\n  };\n  PDF417CodewordDecoder.getDecodedValue = function (moduleBitCount) {\n    var decodedValue = PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));\n    if (decodedValue !== -1) {\n      return decodedValue;\n    }\n    return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);\n  };\n  PDF417CodewordDecoder.sampleBitCounts = function (moduleBitCount) {\n    var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n    var result = new Int32Array(PDF417Common_1.default.BARS_IN_MODULE);\n    var bitCountIndex = 0;\n    var sumPreviousBits = 0;\n    for ( /*int*/var i = 0; i < PDF417Common_1.default.MODULES_IN_CODEWORD; i++) {\n      var sampleIndex = bitCountSum / (2 * PDF417Common_1.default.MODULES_IN_CODEWORD) + i * bitCountSum / PDF417Common_1.default.MODULES_IN_CODEWORD;\n      if (sumPreviousBits + moduleBitCount[bitCountIndex] <= sampleIndex) {\n        sumPreviousBits += moduleBitCount[bitCountIndex];\n        bitCountIndex++;\n      }\n      result[bitCountIndex]++;\n    }\n    return result;\n  };\n  PDF417CodewordDecoder.getDecodedCodewordValue = function (moduleBitCount) {\n    var decodedValue = PDF417CodewordDecoder.getBitValue(moduleBitCount);\n    return PDF417Common_1.default.getCodeword(decodedValue) === -1 ? -1 : decodedValue;\n  };\n  PDF417CodewordDecoder.getBitValue = function (moduleBitCount) {\n    var result = /*long*/0;\n    for (var /*int*/i = 0; i < moduleBitCount.length; i++) {\n      for ( /*int*/var bit = 0; bit < moduleBitCount[i]; bit++) {\n        result = result << 1 | (i % 2 === 0 ? 1 : 0);\n      }\n    }\n    return Math.trunc(result);\n  };\n  // working with 32bit float (as in Java)\n  PDF417CodewordDecoder.getClosestDecodedValue = function (moduleBitCount) {\n    var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n    var bitCountRatios = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n    if (bitCountSum > 1) {\n      for (var /*int*/i = 0; i < bitCountRatios.length; i++) {\n        bitCountRatios[i] = Math.fround(moduleBitCount[i] / bitCountSum);\n      }\n    }\n    var bestMatchError = Float_1.default.MAX_VALUE;\n    var bestMatch = -1;\n    if (!this.bSymbolTableReady) {\n      PDF417CodewordDecoder.initialize();\n    }\n    for ( /*int*/var j = 0; j < PDF417CodewordDecoder.RATIOS_TABLE.length; j++) {\n      var error = 0.0;\n      var ratioTableRow = PDF417CodewordDecoder.RATIOS_TABLE[j];\n      for ( /*int*/var k = 0; k < PDF417Common_1.default.BARS_IN_MODULE; k++) {\n        var diff = Math.fround(ratioTableRow[k] - bitCountRatios[k]);\n        error += Math.fround(diff * diff);\n        if (error >= bestMatchError) {\n          break;\n        }\n      }\n      if (error < bestMatchError) {\n        bestMatchError = error;\n        bestMatch = PDF417Common_1.default.SYMBOL_TABLE[j];\n      }\n    }\n    return bestMatch;\n  };\n  // flag that the table is ready for use\n  PDF417CodewordDecoder.bSymbolTableReady = false;\n  PDF417CodewordDecoder.RATIOS_TABLE = new Array(PDF417Common_1.default.SYMBOL_TABLE.length).map(function (x) {\n    return x = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n  });\n  return PDF417CodewordDecoder;\n}();\nexports.default = PDF417CodewordDecoder;","map":{"version":3,"sources":["../../../../src/core/pdf417/decoder/PDF417CodewordDecoder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n* Copyright 2013 ZXing authors\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*      http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// package com.google.zxing.pdf417.decoder;\n// import com.google.zxing.common.detector.MathUtils;\nvar MathUtils_1 = require(\"../../common/detector/MathUtils\");\n// import com.google.zxing.pdf417.PDF417Common;\nvar PDF417Common_1 = require(\"../PDF417Common\");\nvar Float_1 = require(\"../../util/Float\");\n/**\n * @author Guenther Grau\n * @author creatale GmbH (christoph.schulz@creatale.de)\n */\nvar PDF417CodewordDecoder = /** @class */ (function () {\n    function PDF417CodewordDecoder() {\n    }\n    /* @note\n     * this action have to be performed before first use of class\n     * - static constructor\n     * working with 32bit float (based from Java logic)\n    */\n    PDF417CodewordDecoder.initialize = function () {\n        // Pre-computes the symbol ratio table.\n        for ( /*int*/var i = 0; i < PDF417Common_1.default.SYMBOL_TABLE.length; i++) {\n            var currentSymbol = PDF417Common_1.default.SYMBOL_TABLE[i];\n            var currentBit = currentSymbol & 0x1;\n            for ( /*int*/var j = 0; j < PDF417Common_1.default.BARS_IN_MODULE; j++) {\n                var size = 0.0;\n                while ((currentSymbol & 0x1) === currentBit) {\n                    size += 1.0;\n                    currentSymbol >>= 1;\n                }\n                currentBit = currentSymbol & 0x1;\n                if (!PDF417CodewordDecoder.RATIOS_TABLE[i]) {\n                    PDF417CodewordDecoder.RATIOS_TABLE[i] = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n                }\n                PDF417CodewordDecoder.RATIOS_TABLE[i][PDF417Common_1.default.BARS_IN_MODULE - j - 1] = Math.fround(size / PDF417Common_1.default.MODULES_IN_CODEWORD);\n            }\n        }\n        this.bSymbolTableReady = true;\n    };\n    PDF417CodewordDecoder.getDecodedValue = function (moduleBitCount) {\n        var decodedValue = PDF417CodewordDecoder.getDecodedCodewordValue(PDF417CodewordDecoder.sampleBitCounts(moduleBitCount));\n        if (decodedValue !== -1) {\n            return decodedValue;\n        }\n        return PDF417CodewordDecoder.getClosestDecodedValue(moduleBitCount);\n    };\n    PDF417CodewordDecoder.sampleBitCounts = function (moduleBitCount) {\n        var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n        var result = new Int32Array(PDF417Common_1.default.BARS_IN_MODULE);\n        var bitCountIndex = 0;\n        var sumPreviousBits = 0;\n        for ( /*int*/var i = 0; i < PDF417Common_1.default.MODULES_IN_CODEWORD; i++) {\n            var sampleIndex = bitCountSum / (2 * PDF417Common_1.default.MODULES_IN_CODEWORD) +\n                (i * bitCountSum) / PDF417Common_1.default.MODULES_IN_CODEWORD;\n            if (sumPreviousBits + moduleBitCount[bitCountIndex] <= sampleIndex) {\n                sumPreviousBits += moduleBitCount[bitCountIndex];\n                bitCountIndex++;\n            }\n            result[bitCountIndex]++;\n        }\n        return result;\n    };\n    PDF417CodewordDecoder.getDecodedCodewordValue = function (moduleBitCount) {\n        var decodedValue = PDF417CodewordDecoder.getBitValue(moduleBitCount);\n        return PDF417Common_1.default.getCodeword(decodedValue) === -1 ? -1 : decodedValue;\n    };\n    PDF417CodewordDecoder.getBitValue = function (moduleBitCount) {\n        var result = /*long*/ 0;\n        for (var /*int*/ i = 0; i < moduleBitCount.length; i++) {\n            for ( /*int*/var bit = 0; bit < moduleBitCount[i]; bit++) {\n                result = (result << 1) | (i % 2 === 0 ? 1 : 0);\n            }\n        }\n        return Math.trunc(result);\n    };\n    // working with 32bit float (as in Java)\n    PDF417CodewordDecoder.getClosestDecodedValue = function (moduleBitCount) {\n        var bitCountSum = MathUtils_1.default.sum(moduleBitCount);\n        var bitCountRatios = new Array(PDF417Common_1.default.BARS_IN_MODULE);\n        if (bitCountSum > 1) {\n            for (var /*int*/ i = 0; i < bitCountRatios.length; i++) {\n                bitCountRatios[i] = Math.fround(moduleBitCount[i] / bitCountSum);\n            }\n        }\n        var bestMatchError = Float_1.default.MAX_VALUE;\n        var bestMatch = -1;\n        if (!this.bSymbolTableReady) {\n            PDF417CodewordDecoder.initialize();\n        }\n        for ( /*int*/var j = 0; j < PDF417CodewordDecoder.RATIOS_TABLE.length; j++) {\n            var error = 0.0;\n            var ratioTableRow = PDF417CodewordDecoder.RATIOS_TABLE[j];\n            for ( /*int*/var k = 0; k < PDF417Common_1.default.BARS_IN_MODULE; k++) {\n                var diff = Math.fround(ratioTableRow[k] - bitCountRatios[k]);\n                error += Math.fround(diff * diff);\n                if (error >= bestMatchError) {\n                    break;\n                }\n            }\n            if (error < bestMatchError) {\n                bestMatchError = error;\n                bestMatch = PDF417Common_1.default.SYMBOL_TABLE[j];\n            }\n        }\n        return bestMatch;\n    };\n    // flag that the table is ready for use\n    PDF417CodewordDecoder.bSymbolTableReady = false;\n    PDF417CodewordDecoder.RATIOS_TABLE = new Array(PDF417Common_1.default.SYMBOL_TABLE.length).map(function (x) { return x = new Array(PDF417Common_1.default.BARS_IN_MODULE); });\n    return PDF417CodewordDecoder;\n}());\nexports.default = PDF417CodewordDecoder;\n//# sourceMappingURL=PDF417CodewordDecoder.js.map"]},"metadata":{},"sourceType":"script"}