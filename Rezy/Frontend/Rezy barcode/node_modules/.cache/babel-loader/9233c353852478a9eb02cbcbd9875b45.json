{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\n * @author satorux@google.com (Satoru Takabayashi) - creator\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n */\nvar QRCode = /** @class */function () {\n  function QRCode() {\n    this.maskPattern = -1;\n  }\n  QRCode.prototype.getMode = function () {\n    return this.mode;\n  };\n  QRCode.prototype.getECLevel = function () {\n    return this.ecLevel;\n  };\n  QRCode.prototype.getVersion = function () {\n    return this.version;\n  };\n  QRCode.prototype.getMaskPattern = function () {\n    return this.maskPattern;\n  };\n  QRCode.prototype.getMatrix = function () {\n    return this.matrix;\n  };\n  /*@Override*/\n  QRCode.prototype.toString = function () {\n    var result = new StringBuilder_1.default(); // (200)\n    result.append('<<\\n');\n    result.append(' mode: ');\n    result.append(this.mode ? this.mode.toString() : 'null');\n    result.append('\\n ecLevel: ');\n    result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n    result.append('\\n version: ');\n    result.append(this.version ? this.version.toString() : 'null');\n    result.append('\\n maskPattern: ');\n    result.append(this.maskPattern.toString());\n    if (this.matrix) {\n      result.append('\\n matrix:\\n');\n      result.append(this.matrix.toString());\n    } else {\n      result.append('\\n matrix: null\\n');\n    }\n    result.append('>>\\n');\n    return result.toString();\n  };\n  QRCode.prototype.setMode = function (value) {\n    this.mode = value;\n  };\n  QRCode.prototype.setECLevel = function (value) {\n    this.ecLevel = value;\n  };\n  QRCode.prototype.setVersion = function (version) {\n    this.version = version;\n  };\n  QRCode.prototype.setMaskPattern = function (value /*int*/) {\n    this.maskPattern = value;\n  };\n  QRCode.prototype.setMatrix = function (value) {\n    this.matrix = value;\n  };\n  // Check if \"mask_pattern\" is valid.\n  QRCode.isValidMaskPattern = function (maskPattern /*int*/) {\n    return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n  };\n  QRCode.NUM_MASK_PATTERNS = 8;\n  return QRCode;\n}();\nexports.default = QRCode;","map":{"version":3,"sources":["../../../../src/core/qrcode/encoder/QRCode.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\n/*\n * Copyright 2008 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StringBuilder_1 = require(\"../../util/StringBuilder\");\n/**\n * @author satorux@google.com (Satoru Takabayashi) - creator\n * @author dswitkin@google.com (Daniel Switkin) - ported from C++\n */\nvar QRCode = /** @class */ (function () {\n    function QRCode() {\n        this.maskPattern = -1;\n    }\n    QRCode.prototype.getMode = function () {\n        return this.mode;\n    };\n    QRCode.prototype.getECLevel = function () {\n        return this.ecLevel;\n    };\n    QRCode.prototype.getVersion = function () {\n        return this.version;\n    };\n    QRCode.prototype.getMaskPattern = function () {\n        return this.maskPattern;\n    };\n    QRCode.prototype.getMatrix = function () {\n        return this.matrix;\n    };\n    /*@Override*/\n    QRCode.prototype.toString = function () {\n        var result = new StringBuilder_1.default(); // (200)\n        result.append('<<\\n');\n        result.append(' mode: ');\n        result.append(this.mode ? this.mode.toString() : 'null');\n        result.append('\\n ecLevel: ');\n        result.append(this.ecLevel ? this.ecLevel.toString() : 'null');\n        result.append('\\n version: ');\n        result.append(this.version ? this.version.toString() : 'null');\n        result.append('\\n maskPattern: ');\n        result.append(this.maskPattern.toString());\n        if (this.matrix) {\n            result.append('\\n matrix:\\n');\n            result.append(this.matrix.toString());\n        }\n        else {\n            result.append('\\n matrix: null\\n');\n        }\n        result.append('>>\\n');\n        return result.toString();\n    };\n    QRCode.prototype.setMode = function (value) {\n        this.mode = value;\n    };\n    QRCode.prototype.setECLevel = function (value) {\n        this.ecLevel = value;\n    };\n    QRCode.prototype.setVersion = function (version) {\n        this.version = version;\n    };\n    QRCode.prototype.setMaskPattern = function (value /*int*/) {\n        this.maskPattern = value;\n    };\n    QRCode.prototype.setMatrix = function (value) {\n        this.matrix = value;\n    };\n    // Check if \"mask_pattern\" is valid.\n    QRCode.isValidMaskPattern = function (maskPattern /*int*/) {\n        return maskPattern >= 0 && maskPattern < QRCode.NUM_MASK_PATTERNS;\n    };\n    QRCode.NUM_MASK_PATTERNS = 8;\n    return QRCode;\n}());\nexports.default = QRCode;\n//# sourceMappingURL=QRCode.js.map"]},"metadata":{},"sourceType":"script"}