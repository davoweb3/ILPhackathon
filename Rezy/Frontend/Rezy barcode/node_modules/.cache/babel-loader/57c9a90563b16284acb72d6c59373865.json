{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAVOTRADE\\\\Desktop\\\\Rezy barcode\\\\scanner\\\\scanner\\\\src\\\\scan\\\\Scan.js\",\n  _s = $RefreshSig$();\nimport \"./Scan.css\";\nimport ButtonStyle from \"../components/button\";\nimport ModalStyle from \"../components/Modal\";\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport Barcode from \"react-barcode\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport products from '../products.json';\n\n// const URL = \"https://backend-products-scan.onrender.com:3500\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3500';\n\n/* function Scan() {\n  const initialData = products\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [stopStream, setStopStream] = useState(false);\n  const [filteredData, setFilteredData] = useState(initialData);\n\n  let navigate = useNavigate();\n\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    postToArduino(\"0\");\n    setOpen(false);\n  }; */\n// Define a key for storing scan data in local storage\nconst LOCAL_STORAGE_KEY = \"scanData\";\nfunction Scan() {\n  _s();\n  const initialData = products;\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [filteredData, setFilteredData] = useState(initialData);\n  let navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n\n  // Function to add scan data to local storage\n  const addToLocalStorage = scanData => {\n    // Retrieve existing scan data from local storage\n    const existingData = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n\n    // Add the new scan data to the array\n    existingData.push(scanData);\n\n    // Store the updated scan data in local storage\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(existingData));\n  };\n  const postToArduino = option => {\n    const headers = {\n      \"Content-Type\": \"text/html\"\n    };\n    let url = `https://rezy.lat/esp-outputs-action.php?action=output_update&id=1&state=${option}`;\n    fetch(url, {\n      headers\n    }).then(response => {\n      if (response.status === 200) {\n        setData(\"Green led is on\");\n      } else {\n        setData(\"Green led is off\");\n      }\n    }).catch(err => {\n      console.log(err);\n      setOpen(false);\n    });\n  };\n  const handleAccept = () => {\n    postToArduino(\"1\");\n    setTimeout(function () {\n      postToArduino(\"0\");\n      setOpen(false);\n      navigate(\"/step3\");\n    }, 2000);\n  };\n  const handleErrorWebCam = error => {\n    console.log(error);\n  };\n  const handleScanWebCam = result => {\n    if (result) {\n      setData(result);\n      if (!open) {\n        getProduct(result);\n      }\n    }\n  };\n  const getProduct = id => {\n    const foundElement = filteredData.find(item => item.Id === id);\n    if (foundElement) {\n      // Do something with the found element\n      setProducto(foundElement);\n      setOpen(true);\n    } else {\n      // Element with the given id was not found\n      console.log('Element not found');\n    }\n\n    // const headers = {\n    //   \"Content-Type\": \"application/json\",\n    // };\n    // fetch(`${URL}/${name}`, { headers })\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setProducto(data[0]);\n    //     setOpen(true);\n    //   });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"title\",\n        children: \"Step 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan a selected product listed on www.rezy.com , aim to the camera and wait for the confirmation popup, once the bottle is recognized your bottle will be added !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          width: window.innerWidth < 1000 ? \"100%\" : \"25%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 12,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n            width: 500,\n            height: 500\n            // stopStream={stopStream}\n            ,\n            onUpdate: (err, result) => {\n              if (result) {\n                handleScanWebCam(result.text);\n                // setData(result.text);\n                // setStopStream(true);\n              } else {\n                setData(\"Not Found\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        Text: \"Scan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalStyle, {\n      flag: open\n      // close={handleClose}\n      ,\n      product: producto,\n      accept: handleAccept\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Scan, \"LAleUkUKIvbXQ/3IPJikJ6/KZ/8=\", false, function () {\n  return [useNavigate];\n});\n_c = Scan;\nexport default Scan;\nvar _c;\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"names":["ButtonStyle","ModalStyle","React","useState","QrReader","Grid","useNavigate","Barcode","BarcodeScannerComponent","products","jsxDEV","_jsxDEV","URL","LOCAL_STORAGE_KEY","Scan","_s","initialData","data","setData","producto","setProducto","filteredData","setFilteredData","navigate","open","setOpen","addToLocalStorage","scanData","existingData","JSON","parse","localStorage","getItem","push","setItem","stringify","postToArduino","option","headers","url","fetch","then","response","status","catch","err","console","log","handleAccept","setTimeout","handleErrorWebCam","error","handleScanWebCam","result","getProduct","id","foundElement","find","item","Id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","style","width","window","innerWidth","xl","lg","md","sm","xs","height","onUpdate","text","Text","flag","product","accept","_c","$RefreshReg$"],"sources":["C:/Users/DAVOTRADE/Desktop/Rezy barcode/scanner/scanner/src/scan/Scan.js"],"sourcesContent":["import \"./Scan.css\";\nimport ButtonStyle from \"../components/button\";\nimport ModalStyle from \"../components/Modal\";\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport Barcode from \"react-barcode\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport products from '../products.json'\n\n// const URL = \"https://backend-products-scan.onrender.com:3500\";\nconst URL = 'http://localhost:3500';\n\n/* function Scan() {\n  const initialData = products\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [stopStream, setStopStream] = useState(false);\n  const [filteredData, setFilteredData] = useState(initialData);\n\n  let navigate = useNavigate();\n\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    postToArduino(\"0\");\n    setOpen(false);\n  }; */\n// Define a key for storing scan data in local storage\nconst LOCAL_STORAGE_KEY = \"scanData\";\n  function Scan() {\n    const initialData = products;\n    const [data, setData] = useState(\"No result\");\n    const [producto, setProducto] = useState({});\n    const [filteredData, setFilteredData] = useState(initialData);\n  \n    let navigate = useNavigate();\n  \n    const [open, setOpen] = useState(false);\n  \n    // Function to add scan data to local storage\n    const addToLocalStorage = (scanData) => {\n      // Retrieve existing scan data from local storage\n      const existingData = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) || [];\n  \n      // Add the new scan data to the array\n      existingData.push(scanData);\n  \n      // Store the updated scan data in local storage\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(existingData));\n    };\n  \n\n\n\n\n  const postToArduino = (option) => {\n    const headers = {\n      \"Content-Type\": \"text/html\",\n    };\n    let url = `https://rezy.lat/esp-outputs-action.php?action=output_update&id=1&state=${option}`;\n    fetch(url, { headers })\n      .then((response) => {\n        if (response.status === 200) {\n          setData(\"Green led is on\");\n        } else {\n          setData(\"Green led is off\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setOpen(false);\n      });\n  };\n\n  const handleAccept = () => {\n    postToArduino(\"1\");\n    setTimeout(function () {\n      postToArduino(\"0\");\n      setOpen(false);\n      navigate(\"/step3\");\n    }, 2000);\n  };\n\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n  const handleScanWebCam = (result) => {\n    if (result) {\n      setData(result);\n      if (!open) {\n        getProduct(result);\n      }\n    }\n  };\n\n  const getProduct = (id) => {\n    const foundElement = filteredData.find(item => item.Id === id);\n\n    if (foundElement) {\n      // Do something with the found element\n      setProducto(foundElement);\n      setOpen(true);\n    } else {\n      // Element with the given id was not found\n      console.log('Element not found');\n    }\n\n    // const headers = {\n    //   \"Content-Type\": \"application/json\",\n    // };\n    // fetch(`${URL}/${name}`, { headers })\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setProducto(data[0]);\n    //     setOpen(true);\n    //   });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <label className=\"title\">Step 1</label>\n        <p>\n          Scan a selected product listed on www.rezy.com , aim to the camera and\n          wait for the confirmation popup, once the bottle is recognized your bottle will be added !\n        </p>\n\n        <Grid\n          container\n          style={{ width: window.innerWidth < 1000 ? \"100%\" : \"25%\" }}\n        >\n          <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n            <BarcodeScannerComponent\n              width={500}\n              height={500}\n              // stopStream={stopStream}\n              onUpdate={(err, result) => {\n                if (result) {\n                  handleScanWebCam(result.text)\n                  // setData(result.text);\n                  // setStopStream(true);\n                } else {\n                  setData(\"Not Found\");\n                }\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        <p>{data}</p>\n        <ButtonStyle Text={\"Scan!\"}></ButtonStyle>\n      </div>\n      <ModalStyle\n        flag={open}\n        // close={handleClose}\n        product={producto}\n        accept={handleAccept}\n      ></ModalStyle>\n    </div>\n  );\n}\n\nexport default Scan;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}