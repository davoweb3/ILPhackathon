{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DAVOTRADE\\\\Desktop\\\\Rezy barcode\\\\scanner\\\\scanner\\\\src\\\\scan\\\\Scan.js\",\n  _s = $RefreshSig$();\nimport \"./Scan.css\";\nimport ButtonStyle from \"../components/button\";\nimport ModalStyle from \"../components/Modal\";\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport Barcode from \"react-barcode\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport products from '../products.json';\n\n// const URL = \"https://backend-products-scan.onrender.com:3500\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:3500';\nfunction Scan() {\n  _s();\n  const initialData = products;\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [stopStream, setStopStream] = useState(false);\n  const [filteredData, setFilteredData] = useState(initialData);\n  let navigate = useNavigate();\n\n  /*   const [open, setOpen] = useState(false);\n    const handleClose = () => { */\n  /*  postToArduino(\"0\");\n   setOpen(false); */\n  // };\n\n  /*  const postToArduino = (option) => {\n     const headers = {\n       \"Content-Type\": \"text/html\",\n     };\n     let url = `https://rezy.lat/esp-outputs-action.php?action=output_update&id=1&state=${option}`;\n     fetch(url, { headers })\n       .then((response) => {\n         if (response.status === 200) {\n           setData(\"Green led is on\");\n         } else {\n           setData(\"Green led is off\");\n         }\n       })\n       .catch((err) => {\n         console.log(err);\n         setOpen(false);\n       });\n   };\n    const handleAccept = () => {\n     postToArduino(\"1\");\n     setTimeout(function () {\n       postToArduino(\"0\");\n       setOpen(false);\n       navigate(\"/step3\");\n     }, 2000);\n   };\n  */\n  const handleErrorWebCam = error => {\n    console.log(error);\n  };\n  const handleScanWebCam = result => {\n    if (result) {\n      setData(result);\n      if (!open) {\n        getProduct(result);\n      }\n    }\n  };\n  const getProduct = id => {\n    const foundElement = filteredData.find(item => item.Id === id);\n    if (foundElement) {\n      // Do something with the found element\n      setProducto(foundElement);\n      setOpen(true);\n    } else {\n      // Element with the given id was not found\n      console.log('Element not found');\n    }\n\n    // const headers = {\n    //   \"Content-Type\": \"application/json\",\n    // };\n    // fetch(`${URL}/${name}`, { headers })\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setProducto(data[0]);\n    //     setOpen(true);\n    //   });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"title\",\n        children: \"Step 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Scan a selected product listed on www.rezy.com , aim to the camera and wait for the confirmation popup, once the bottle is recognized your bottle will be added to your account!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          width: window.innerWidth < 1000 ? \"100%\" : \"25%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xl: 12,\n          lg: 12,\n          md: 12,\n          sm: 12,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(BarcodeScannerComponent, {\n            width: 500,\n            height: 500\n            // stopStream={stopStream}\n            ,\n            onUpdate: (err, result) => {\n              if (result) {\n                handleScanWebCam(result.text);\n                // setData(result.text);\n                // setStopStream(true);\n              } else {\n                setData(\"Not Found\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonStyle, {\n        Text: \"Scan!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalStyle, {\n      flag: open,\n      close: handleClose,\n      product: producto\n      // accept={handleAccept}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Scan, \"pwu6WdOikgRForepyjBl6kaYnmk=\", false, function () {\n  return [useNavigate];\n});\n_c = Scan;\nexport default Scan;\nvar _c;\n$RefreshReg$(_c, \"Scan\");","map":{"version":3,"names":["ButtonStyle","ModalStyle","React","useState","QrReader","Grid","useNavigate","Barcode","BarcodeScannerComponent","products","jsxDEV","_jsxDEV","URL","Scan","_s","initialData","data","setData","producto","setProducto","stopStream","setStopStream","filteredData","setFilteredData","navigate","handleErrorWebCam","error","console","log","handleScanWebCam","result","open","getProduct","id","foundElement","find","item","Id","setOpen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","container","style","width","window","innerWidth","xl","lg","md","sm","xs","height","onUpdate","err","text","Text","flag","close","handleClose","product","_c","$RefreshReg$"],"sources":["C:/Users/DAVOTRADE/Desktop/Rezy barcode/scanner/scanner/src/scan/Scan.js"],"sourcesContent":["import \"./Scan.css\";\nimport ButtonStyle from \"../components/button\";\nimport ModalStyle from \"../components/Modal\";\nimport React, { useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport { Grid } from \"@material-ui/core\";\nimport { useNavigate } from \"react-router-dom\";\nimport Barcode from \"react-barcode\";\nimport BarcodeScannerComponent from \"react-qr-barcode-scanner\";\nimport products from '../products.json'\n\n// const URL = \"https://backend-products-scan.onrender.com:3500\";\nconst URL = 'http://localhost:3500';\n\nfunction Scan() {\n  const initialData = products\n  const [data, setData] = useState(\"No result\");\n  const [producto, setProducto] = useState({});\n  const [stopStream, setStopStream] = useState(false);\n  const [filteredData, setFilteredData] = useState(initialData);\n\n  let navigate = useNavigate();\n\n/*   const [open, setOpen] = useState(false);\n  const handleClose = () => { */\n   /*  postToArduino(\"0\");\n    setOpen(false); */\n  // };\n\n /*  const postToArduino = (option) => {\n    const headers = {\n      \"Content-Type\": \"text/html\",\n    };\n    let url = `https://rezy.lat/esp-outputs-action.php?action=output_update&id=1&state=${option}`;\n    fetch(url, { headers })\n      .then((response) => {\n        if (response.status === 200) {\n          setData(\"Green led is on\");\n        } else {\n          setData(\"Green led is off\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setOpen(false);\n      });\n  };\n\n  const handleAccept = () => {\n    postToArduino(\"1\");\n    setTimeout(function () {\n      postToArduino(\"0\");\n      setOpen(false);\n      navigate(\"/step3\");\n    }, 2000);\n  };\n */\n  const handleErrorWebCam = (error) => {\n    console.log(error);\n  };\n  const handleScanWebCam = (result) => {\n    if (result) {\n      setData(result);\n      if (!open) {\n        getProduct(result);\n      }\n    }\n  };\n\n  const getProduct = (id) => {\n    const foundElement = filteredData.find(item => item.Id === id);\n\n    if (foundElement) {\n      // Do something with the found element\n      setProducto(foundElement);\n      setOpen(true);\n    } else {\n      // Element with the given id was not found\n      console.log('Element not found');\n    }\n\n    // const headers = {\n    //   \"Content-Type\": \"application/json\",\n    // };\n    // fetch(`${URL}/${name}`, { headers })\n    //   .then((response) => response.json())\n    //   .then((data) => {\n    //     setProducto(data[0]);\n    //     setOpen(true);\n    //   });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <label className=\"title\">Step 1</label>\n        <p>\n          Scan a selected product listed on www.rezy.com , aim to the camera and\n          wait for the confirmation popup, once the bottle is recognized your bottle will be added to your account!\n        </p>\n\n        <Grid\n          container\n          style={{ width: window.innerWidth < 1000 ? \"100%\" : \"25%\" }}\n        >\n          <Grid item xl={12} lg={12} md={12} sm={12} xs={12}>\n            <BarcodeScannerComponent\n              width={500}\n              height={500}\n              // stopStream={stopStream}\n              onUpdate={(err, result) => {\n                if (result) {\n                  handleScanWebCam(result.text)\n                  // setData(result.text);\n                  // setStopStream(true);\n                } else {\n                  setData(\"Not Found\");\n                }\n              }}\n            />\n          </Grid>\n        </Grid>\n\n        <p>{data}</p>\n        <ButtonStyle Text={\"Scan!\"}></ButtonStyle>\n      </div>\n      <ModalStyle\n        flag={open}\n        close={handleClose}\n        product={producto}\n        // accept={handleAccept}\n      ></ModalStyle>\n    </div>\n  );\n}\n\nexport default Scan;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,eAAe;AACnC,OAAOC,uBAAuB,MAAM,0BAA0B;AAC9D,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAG,uBAAuB;AAEnC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,WAAW,GAAGN,QAAQ;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,WAAW,CAAC;EAC7C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAACY,WAAW,CAAC;EAE7D,IAAIS,QAAQ,GAAGlB,WAAW,EAAE;;EAE9B;AACA;EACG;AACH;EACE;;EAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEE,MAAMmB,iBAAiB,GAAIC,KAAK,IAAK;IACnCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB,CAAC;EACD,MAAMG,gBAAgB,GAAIC,MAAM,IAAK;IACnC,IAAIA,MAAM,EAAE;MACVb,OAAO,CAACa,MAAM,CAAC;MACf,IAAI,CAACC,IAAI,EAAE;QACTC,UAAU,CAACF,MAAM,CAAC;MACpB;IACF;EACF,CAAC;EAED,MAAME,UAAU,GAAIC,EAAE,IAAK;IACzB,MAAMC,YAAY,GAAGZ,YAAY,CAACa,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,EAAE,CAAC;IAE9D,IAAIC,YAAY,EAAE;MAChB;MACAf,WAAW,CAACe,YAAY,CAAC;MACzBI,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,MAAM;MACL;MACAX,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC;;EAED,oBACEjB,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAK4B,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxB7B,OAAA;QAAO4B,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvCjC,OAAA;QAAA6B,QAAA,EAAG;MAGH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAEJjC,OAAA,CAACN,IAAI;QACHwC,SAAS;QACTC,KAAK,EAAE;UAAEC,KAAK,EAAEC,MAAM,CAACC,UAAU,GAAG,IAAI,GAAG,MAAM,GAAG;QAAM,CAAE;QAAAT,QAAA,eAE5D7B,OAAA,CAACN,IAAI;UAAC+B,IAAI;UAACc,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,EAAG;UAAAd,QAAA,eAChD7B,OAAA,CAACH,uBAAuB;YACtBuC,KAAK,EAAE,GAAI;YACXQ,MAAM,EAAE;YACR;YAAA;YACAC,QAAQ,EAAEA,CAACC,GAAG,EAAE3B,MAAM,KAAK;cACzB,IAAIA,MAAM,EAAE;gBACVD,gBAAgB,CAACC,MAAM,CAAC4B,IAAI,CAAC;gBAC7B;gBACA;cACF,CAAC,MAAM;gBACLzC,OAAO,CAAC,WAAW,CAAC;cACtB;YACF;UAAE;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eAEPjC,OAAA;QAAA6B,QAAA,EAAIxB;MAAI;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACbjC,OAAA,CAACX,WAAW;QAAC2D,IAAI,EAAE;MAAQ;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAe;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtC,eACNjC,OAAA,CAACV,UAAU;MACT2D,IAAI,EAAE7B,IAAK;MACX8B,KAAK,EAAEC,WAAY;MACnBC,OAAO,EAAE7C;MACT;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACY;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACV;AAEV;AAAC9B,EAAA,CAxHQD,IAAI;EAAA,QAOIP,WAAW;AAAA;AAAA0D,EAAA,GAPnBnD,IAAI;AA0Hb,eAAeA,IAAI;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}