{"ast":null,"code":"/**\n * React Router v6.8.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, warning, resolveTo, parsePath, matchRoutes, Action, isRouteErrorResponse, createMemoryHistory, stripBasename, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\nimport * as React from 'react';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\n\nfunction isPolyfill(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nconst is = typeof Object.is === \"function\" ? Object.is : isPolyfill; // Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\n\nconst {\n  useState,\n  useEffect,\n  useLayoutEffect,\n  useDebugValue\n} = React;\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore$2(subscribe, getSnapshot,\n// Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\"You are using an outdated, pre-release alpha of React 18 that \" + \"does not support useSyncExternalStore. The \" + \"use-sync-external-store shim will not work correctly. Upgrade \" + \"to a newer pre-release.\");\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n  const value = getSnapshot();\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\"The result of getSnapshot should be cached to avoid an infinite loop\");\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n  const [{\n    inst\n  }, forceUpdate] = useState({\n    inst: {\n      value,\n      getSnapshot\n    }\n  }); // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst\n      });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n    return subscribe(handleStoreChange); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\n/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\nconst canUseDOM = !!(typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\");\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore$2;\nconst useSyncExternalStore = \"useSyncExternalStore\" in React ? (module => module.useSyncExternalStore)(React) : shim;\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: []\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\n\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname; // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\n\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\n\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\n\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\n\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? warning(activeRef.current, \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\") : void 0;\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\"); // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history.  If this is a root navigation, then we\n    // navigate to the raw basename which allows the basename to have full\n    // control over the presence of a trailing slash on root links\n\n    if (basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\n\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\n\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\n\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\n\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\n\nfunction useRoutes(routes, locationArg) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(matches == null || matches[matches.length - 1].route.element !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" does not have an element. \" + \"This means it will render an <Outlet /> with a null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterStateContext || undefined); // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" props on\\xA0\", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"<Route>\")));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext); // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && match.route.errorElement) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (matches == null) {\n    if (dataRouterState != null && dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches; // If we have data errors, trim matches to the highest error boundary\n\n  let errors = dataRouterState == null ? void 0 : dataRouterState.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"Could not find a matching route for the current errors: \" + errors) : invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null; // Only data routers handle errors\n\n    let errorElement = dataRouterState ? match.route.errorElement || /*#__PURE__*/React.createElement(DefaultErrorElement, null) : null;\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => /*#__PURE__*/React.createElement(RenderedRoute, {\n      match: match,\n      routeContext: {\n        outlet,\n        matches\n      }\n    }, error ? errorElement : match.route.element !== undefined ? match.route.element : outlet); // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n\n    return dataRouterState && (match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, getDataRouterConsoleError(hookName)) : invariant(false) : void 0;\n  return route;\n}\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\n\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\n\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match; // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\n\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n/**\n * Returns the loaderData for the given routeId\n */\n\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n/**\n * Returns the action data for the nearest ancestor Route action\n */\n\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useActionData must be used inside a RouteContext\") : invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\n\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError); // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n\n  if (error) {\n    return error;\n  } // Otherwise look for errors from our data router state\n\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\n\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\n\nfunction useBlocker(shouldBlock) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n  let blockerFunction = React.useCallback(args => {\n    return typeof shouldBlock === \"function\" ? !!shouldBlock(args) : !!shouldBlock;\n  }, [shouldBlock]);\n  let blocker = router.getBlocker(blockerKey, blockerFunction); // Cleanup on unmount\n\n  React.useEffect(() => () => router.deleteBlocker(blockerKey), [router, blockerKey]);\n  return blocker;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? warning(false, message) : void 0;\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router\n  } = _ref;\n  // Sync router state to our component state to force re-renders\n  let state = useSyncExternalStore(router.subscribe, () => router.state,\n  // We have to provide this so React@18 doesn't complain during hydration,\n  // but we pass our serialized hydration data into the router so state here\n  // is already synced with what the server saw\n  () => router.state);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\"; // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: {\n      router,\n      navigator,\n      static: false,\n      // Do we need this?\n      basename\n    }\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: router.basename,\n    location: router.state.location,\n    navigationType: router.state.historyAction,\n    navigator: navigator\n  }, router.state.initialized ? /*#__PURE__*/React.createElement(Routes, null) : fallbackElement))), null);\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref2) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref3) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref3;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false,\n  // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, {\n      replace,\n      state,\n      relative\n    });\n  });\n  return null;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : invariant(false);\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref4) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref4;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : invariant(false) : void 0; // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key\n    };\n  }, [basename, pathname, search, hash, state, key]);\n  process.env.NODE_ENV !== \"production\" ? warning(location != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (location == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: {\n      location,\n      navigationType\n    }\n  }));\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref5) {\n  let {\n    children,\n    location\n  } = _ref5;\n  let dataRouterContext = React.useContext(DataRouterContext); // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n\n  let routes = dataRouterContext && !children ? dataRouterContext.router.routes : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref6) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref6;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    } // Throw to the suspense boundary\n\n    throw promise;\n  }\n}\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\n\nfunction ResolveAwait(_ref7) {\n  let {\n    children\n  } = _ref7;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n} ///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\n\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, parentPath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"An index route cannot have child routes.\") : invariant(false) : void 0;\n    let treePath = [...parentPath, index];\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\n\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\n\nfunction enhanceManualRouteObjects(routes) {\n  return routes.map(route => {\n    let routeClone = _extends({}, route);\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes: enhanceManualRouteObjects(routes)\n  }).initialize();\n} ///////////////////////////////////////////////////////////////////////////////\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };","map":{"version":3,"sources":["../lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../lib/use-sync-external-store-shim/useSyncExternalStoreShimServer.ts","../lib/use-sync-external-store-shim/index.ts","../lib/context.ts","../lib/hooks.tsx","../lib/components.tsx","../index.ts"],"names":["isPolyfill","x","y","is","Object","useState","useEffect","useLayoutEffect","useDebugValue","React","didWarnOld18Alpha","didWarnUncachedGetSnapshot","useSyncExternalStore","subscribe","getSnapshot","getServerSnapshot","console","error","value","cachedValue","inst","forceUpdate","checkIfSnapshotChanged","handleStoreChange","latestGetSnapshot","prevValue","nextValue","canUseDOM","window","document","createElement","isServerEnvironment","shim","server","client","module","DataRouterContext","createContext","displayName","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","matches","RouteErrorContext","useHref","to","relative","useInRouterContext","basename","navigator","useContext","hash","pathname","search","useResolvedPath","joinedPathname","joinPaths","createHref","useLocation","location","useNavigationType","navigationType","useMatch","pattern","useMemo","matchPath","useNavigate","locationPathname","routePathnamesJson","JSON","stringify","getPathContributingMatches","map","match","pathnameBase","activeRef","useRef","current","navigate","useCallback","options","go","path","resolveTo","parse","replace","push","state","OutletContext","useOutletContext","useOutlet","context","useParams","routeMatch","length","params","useRoutes","routes","locationArg","dataRouterStateContext","parentMatches","parentParams","parentPathname","parentPathnameBase","parentRoute","route","parentPath","warningOnce","endsWith","locationFromContext","parsedLocationArg","parsePath","startsWith","remainingPathname","slice","matchRoutes","element","undefined","renderedMatches","_renderMatches","assign","encodeLocation","key","NavigationType","Pop","DefaultErrorElement","useRouteError","message","isRouteErrorResponse","status","statusText","Error","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","fontStyle","RenderErrorBoundary","Component","constructor","props","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","routeContext","component","children","RenderedRoute","dataRouterContext","static","staticContext","errorElement","_deepestRenderedBoundaryId","id","dataRouterState","errors","errorIndex","findIndex","m","Math","min","reduceRight","index","concat","getChildren","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useNavigation","UseNavigation","navigation","useRevalidator","UseRevalidator","revalidate","router","revalidation","useMatches","loaderData","UseMatches","data","handle","useLoaderData","UseLoaderData","routeId","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","values","actionData","UseRouteError","useAsyncValue","_data","useAsyncError","_error","blockerId","useBlocker","shouldBlock","UseBlocker","blockerKey","String","blockerFunction","args","blocker","getBlocker","deleteBlocker","alreadyWarned","cond","RouterProvider","fallbackElement","useSyncExternalStoreShim","n","opts","preventScrollReset","historyAction","initialized","MemoryRouter","initialEntries","initialIndex","historyRef","createMemoryHistory","v5Compat","history","setState","action","listen","Navigate","Outlet","Route","_props","invariant","Router","basenameProp","locationProp","staticProp","navigationContext","trailingPathname","stripBasename","Routes","createRoutesFromChildren","Await","resolve","AwaitRenderStatus","neverSettledPromise","Promise","AwaitErrorBoundary","promise","pending","success","defineProperty","get","renderError","reject","catch","_tracked","then","AbortedDeferredError","ResolveAwait","toRender","Children","forEach","isValidElement","type","Fragment","apply","name","treePath","join","caseSensitive","loader","hasErrorBoundary","shouldRevalidate","renderMatches","enhanceManualRouteObjects","routeClone","createMemoryRouter","hydrationData","initialize"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  getServerSnapshot?: () => T\n): T {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own&nbsp;\n          <code style={codeStyles}>errorElement</code> props on&nbsp;\n          <code style={codeStyles}>&lt;Route&gt;</code>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    match.route.errorElement\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => (\n      <RenderedRoute match={match} routeContext={{ outlet, matches }}>\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  return blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider\n        value={{\n          router,\n          navigator,\n          static: false,\n          // Do we need this?\n          basename,\n        }}\n      >\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n","import type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n} from \"./lib/components\";\nimport {\n  enhanceManualRouteObjects,\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  RelativeRoutingType,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  enhanceManualRouteObjects as UNSAFE_enhanceManualRouteObjects,\n};\n"]},"metadata":{},"sourceType":"module"}