{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar IllegalArgumentException_1 = require(\"../../../IllegalArgumentException\");\nvar ArithmeticException_1 = require(\"../../../ArithmeticException\");\nvar ModulusBase = /** @class */function () {\n  function ModulusBase() {}\n  ModulusBase.prototype.add = function (a, b) {\n    return (a + b) % this.modulus;\n  };\n  ModulusBase.prototype.subtract = function (a, b) {\n    return (this.modulus + a - b) % this.modulus;\n  };\n  ModulusBase.prototype.exp = function (a) {\n    return this.expTable[a];\n  };\n  ModulusBase.prototype.log = function (a) {\n    if (a === 0) {\n      throw new IllegalArgumentException_1.default();\n    }\n    return this.logTable[a];\n  };\n  ModulusBase.prototype.inverse = function (a) {\n    if (a === 0) {\n      throw new ArithmeticException_1.default();\n    }\n    return this.expTable[this.modulus - this.logTable[a] - 1];\n  };\n  ModulusBase.prototype.multiply = function (a, b) {\n    if (a === 0 || b === 0) {\n      return 0;\n    }\n    return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n  };\n  ModulusBase.prototype.getSize = function () {\n    return this.modulus;\n  };\n  ModulusBase.prototype.equals = function (o) {\n    return o === this;\n  };\n  return ModulusBase;\n}();\nexports.default = ModulusBase;","map":{"version":3,"sources":["../../../../../src/core/pdf417/decoder/ec/ModulusBase.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,0BAAA,GAAA,OAAA,CAAA,mCAAA,CAAA;AACA,IAAA,qBAAA,GAAA,OAAA,CAAA,8BAAA,CAAA;AAEA,IAAA,WAAA,GAAA,aAAA,YAAA;EAAA,SAAA,WAAA,CAAA,EAAA,CA8CA;EAxCE,WAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,CAAS,EAAE,CAAS,EAAA;IACtB,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO;EAC/B,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,CAAS,EAAE,CAAS,EAAA;IAC3B,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,OAAO;EAC9C,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,CAAS,EAAA;IACX,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,GAAG,GAAH,UAAI,CAAS,EAAA;IACX,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,MAAM,IAAI,0BAAA,CAAA,OAAwB,EAAE;IACrC;IACD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,OAAO,GAAP,UAAQ,CAAS,EAAA;IACf,IAAI,CAAC,KAAK,CAAC,EAAE;MACX,MAAM,IAAI,qBAAA,CAAA,OAAmB,EAAE;IAChC;IACD,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC3D,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,UAAS,CAAS,EAAE,CAAS,EAAA;IAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;MACtB,OAAO,CAAC;IACT;IACD,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;EAClF,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,OAAO,IAAI,CAAC,OAAO;EACrB,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,CAAS,EAAA;IACd,OAAO,CAAC,KAAK,IAAI;EACnB,CAAC;EACH,OAAA,WAAC;AAAD,CAAC,EAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar IllegalArgumentException_1 = require(\"../../../IllegalArgumentException\");\nvar ArithmeticException_1 = require(\"../../../ArithmeticException\");\nvar ModulusBase = /** @class */ (function () {\n    function ModulusBase() {\n    }\n    ModulusBase.prototype.add = function (a, b) {\n        return (a + b) % this.modulus;\n    };\n    ModulusBase.prototype.subtract = function (a, b) {\n        return (this.modulus + a - b) % this.modulus;\n    };\n    ModulusBase.prototype.exp = function (a) {\n        return this.expTable[a];\n    };\n    ModulusBase.prototype.log = function (a) {\n        if (a === 0) {\n            throw new IllegalArgumentException_1.default();\n        }\n        return this.logTable[a];\n    };\n    ModulusBase.prototype.inverse = function (a) {\n        if (a === 0) {\n            throw new ArithmeticException_1.default();\n        }\n        return this.expTable[this.modulus - this.logTable[a] - 1];\n    };\n    ModulusBase.prototype.multiply = function (a, b) {\n        if (a === 0 || b === 0) {\n            return 0;\n        }\n        return this.expTable[(this.logTable[a] + this.logTable[b]) % (this.modulus - 1)];\n    };\n    ModulusBase.prototype.getSize = function () {\n        return this.modulus;\n    };\n    ModulusBase.prototype.equals = function (o) {\n        return o === this;\n    };\n    return ModulusBase;\n}());\nexports.default = ModulusBase;\n//# sourceMappingURL=ModulusBase.js.map"]},"metadata":{},"sourceType":"script"}