{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Java Formatter class polyfill that works in the JS way.\n */\nvar Formatter = /** @class */function () {\n  function Formatter() {\n    this.buffer = '';\n  }\n  /**\n   *\n   * @see https://stackoverflow.com/a/13439711/4367683\n   *\n   * @param str\n   * @param arr\n   */\n  Formatter.form = function (str, arr) {\n    var i = -1;\n    function callback(exp, p0, p1, p2, p3, p4) {\n      if (exp === '%%') return '%';\n      if (arr[++i] === undefined) return undefined;\n      exp = p2 ? parseInt(p2.substr(1)) : undefined;\n      var base = p3 ? parseInt(p3.substr(1)) : undefined;\n      var val;\n      switch (p4) {\n        case 's':\n          val = arr[i];\n          break;\n        case 'c':\n          val = arr[i][0];\n          break;\n        case 'f':\n          val = parseFloat(arr[i]).toFixed(exp);\n          break;\n        case 'p':\n          val = parseFloat(arr[i]).toPrecision(exp);\n          break;\n        case 'e':\n          val = parseFloat(arr[i]).toExponential(exp);\n          break;\n        case 'x':\n          val = parseInt(arr[i]).toString(base ? base : 16);\n          break;\n        case 'd':\n          val = parseFloat(parseInt(arr[i], base ? base : 10).toPrecision(exp)).toFixed(0);\n          break;\n      }\n      val = typeof val === 'object' ? JSON.stringify(val) : (+val).toString(base);\n      var size = parseInt(p1); /* padding size */\n      var ch = p1 && p1[0] + '' === '0' ? '0' : ' '; /* isnull? */\n      while (val.length < size) val = p0 !== undefined ? val + ch : ch + val; /* isminus? */\n      return val;\n    }\n    var regex = /%(-)?(0?[0-9]+)?([.][0-9]+)?([#][0-9]+)?([scfpexd%])/g;\n    return str.replace(regex, callback);\n  };\n  /**\n   *\n   * @param append The new string to append.\n   * @param args Argumets values to be formated.\n   */\n  Formatter.prototype.format = function (append) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    this.buffer += Formatter.form(append, args);\n  };\n  /**\n   * Returns the Formatter string value.\n   */\n  Formatter.prototype.toString = function () {\n    return this.buffer;\n  };\n  return Formatter;\n}();\nexports.default = Formatter;","map":{"version":3,"names":["Formatter","buffer","form","str","arr","i","callback","exp","p0","p1","p2","p3","p4","undefined","parseInt","substr","base","val","parseFloat","toFixed","toPrecision","toExponential","toString","JSON","stringify","size","ch","length","regex","replace","prototype","format","append","args","_i","arguments"],"sources":["../../../src/core/util/Formatter.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}