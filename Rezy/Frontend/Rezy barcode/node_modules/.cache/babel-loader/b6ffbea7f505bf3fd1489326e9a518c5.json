{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpandedPair = /** @class */function () {\n  function ExpandedPair(leftChar, rightChar, finderPatter, mayBeLast) {\n    this.leftchar = leftChar;\n    this.rightchar = rightChar;\n    this.finderpattern = finderPatter;\n    this.maybeLast = mayBeLast;\n  }\n  ExpandedPair.prototype.mayBeLast = function () {\n    return this.maybeLast;\n  };\n  ExpandedPair.prototype.getLeftChar = function () {\n    return this.leftchar;\n  };\n  ExpandedPair.prototype.getRightChar = function () {\n    return this.rightchar;\n  };\n  ExpandedPair.prototype.getFinderPattern = function () {\n    return this.finderpattern;\n  };\n  ExpandedPair.prototype.mustBeLast = function () {\n    return this.rightchar == null;\n  };\n  ExpandedPair.prototype.toString = function () {\n    return '[ ' + this.leftchar + ', ' + this.rightchar + ' : ' + (this.finderpattern == null ? \"null\" : this.finderpattern.getValue()) + \" ]\";\n  };\n  ExpandedPair.equals = function (o1, o2) {\n    if (!(o1 instanceof ExpandedPair)) {\n      return false;\n    }\n    return ExpandedPair.equalsOrNull(o1.leftchar, o2.leftchar) && ExpandedPair.equalsOrNull(o1.rightchar, o2.rightchar) && ExpandedPair.equalsOrNull(o1.finderpattern, o2.finderpattern);\n  };\n  ExpandedPair.equalsOrNull = function (o1, o2) {\n    return o1 === null ? o2 === null : ExpandedPair.equals(o1, o2);\n  };\n  ExpandedPair.prototype.hashCode = function () {\n    //return ExpandedPair.hashNotNull(leftChar) ^ hashNotNull(rightChar) ^ hashNotNull(finderPattern);\n    var value = this.leftchar.getValue() ^ this.rightchar.getValue() ^ this.finderpattern.getValue();\n    return value;\n  };\n  // To do - Re check the implementation\n  ExpandedPair.hashNotNull = function (o) {\n    return o === null ? 0 : o.hashCode();\n  };\n  return ExpandedPair;\n}();\nexports.default = ExpandedPair;","map":{"version":3,"names":["ExpandedPair","leftChar","rightChar","finderPatter","mayBeLast","leftchar","rightchar","finderpattern","maybeLast","prototype","getLeftChar","getRightChar","getFinderPattern","mustBeLast","toString","getValue","equals","o1","o2","equalsOrNull","hashCode","value","hashNotNull","o"],"sources":["../../../../../src/core/oned/rss/expanded/ExpandedPair.ts"],"sourcesContent":[null],"mappings":";;;;;AAGA,IAAAA,YAAA;EAME,SAAAA,aAAYC,QAAuB,EAAEC,SAAwB,EAAEC,YAA2B,EAAEC,SAAkB;IAC5G,IAAI,CAACC,QAAQ,GAAGJ,QAAQ;IACxB,IAAI,CAACK,SAAS,GAAGJ,SAAS;IAC1B,IAAI,CAACK,aAAa,GAAGJ,YAAY;IACjC,IAAI,CAACK,SAAS,GAAGJ,SAAS;EAC5B;EAEAJ,YAAA,CAAAS,SAAA,CAAAL,SAAS,GAAT;IACE,OAAO,IAAI,CAACI,SAAS;EACvB,CAAC;EACDR,YAAA,CAAAS,SAAA,CAAAC,WAAW,GAAX;IACE,OAAO,IAAI,CAACL,QAAQ;EACtB,CAAC;EACDL,YAAA,CAAAS,SAAA,CAAAE,YAAY,GAAZ;IACE,OAAO,IAAI,CAACL,SAAS;EACvB,CAAC;EACDN,YAAA,CAAAS,SAAA,CAAAG,gBAAgB,GAAhB;IACE,OAAO,IAAI,CAACL,aAAa;EAC3B,CAAC;EACDP,YAAA,CAAAS,SAAA,CAAAI,UAAU,GAAV;IACE,OAAO,IAAI,CAACP,SAAS,IAAI,IAAI;EAC/B,CAAC;EACDN,YAAA,CAAAS,SAAA,CAAAK,QAAQ,GAAR;IACE,OAAO,IAAI,GAAG,IAAI,CAACT,QAAQ,GAAG,IAAI,GAAG,IAAI,CAACC,SAAS,GAAG,KAAK,IAAI,IAAI,CAACC,aAAa,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,CAACA,aAAa,CAACQ,QAAQ,EAAE,CAAC,GAAG,IAAI;EAC5I,CAAC;EAEOf,YAAA,CAAAgB,MAAM,GAAb,UAAcC,EAAM,EAACC,EAAM;IAC1B,IAAI,EAAED,EAAE,YAAYjB,YAAY,CAAC,EAAE;MACjC,OAAO,KAAK;;IAEd,OAAOA,YAAY,CAACmB,YAAY,CAACF,EAAE,CAACZ,QAAQ,EAAEa,EAAE,CAACb,QAAQ,CAAC,IACtDL,YAAY,CAACmB,YAAY,CAACF,EAAE,CAACX,SAAS,EAAEY,EAAE,CAACZ,SAAS,CAAC,IACrDN,YAAY,CAACmB,YAAY,CAACF,EAAE,CAACV,aAAa,EAAEW,EAAE,CAACX,aAAa,CAAC;EACnE,CAAC;EAEcP,YAAA,CAAAmB,YAAY,GAA3B,UAA4BF,EAAM,EAAEC,EAAM;IACxC,OAAOD,EAAE,KAAK,IAAI,GAAGC,EAAE,KAAK,IAAI,GAAGlB,YAAY,CAACgB,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC;EAChE,CAAC;EAEDlB,YAAA,CAAAS,SAAA,CAAAW,QAAQ,GAAR;IACA;IACE,IAAIC,KAAK,GAAG,IAAI,CAAChB,QAAQ,CAACU,QAAQ,EAAE,GAAG,IAAI,CAACT,SAAS,CAACS,QAAQ,EAAE,GAAG,IAAI,CAACR,aAAa,CAACQ,QAAQ,EAAE;IAChG,OAAOM,KAAK;EACd,CAAC;EACF;EACiBrB,YAAA,CAAAsB,WAAW,GAA3B,UAA4BC,CAAc;IACxC,OAAOA,CAAC,KAAK,IAAI,GAAG,CAAC,GAAGA,CAAC,CAACH,QAAQ,EAAE;EACtC,CAAC;EACH,OAAApB,YAAC;AAAD,CAAC,EAtDD"},"metadata":{},"sourceType":"script"}