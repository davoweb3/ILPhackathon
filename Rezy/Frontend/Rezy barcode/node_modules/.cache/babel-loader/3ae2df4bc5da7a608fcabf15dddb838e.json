{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2009 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*namespace com.google.zxing {*/\nvar System_1 = require(\"./util/System\");\nvar LuminanceSource_1 = require(\"./LuminanceSource\");\nvar InvertedLuminanceSource_1 = require(\"./InvertedLuminanceSource\");\nvar IllegalArgumentException_1 = require(\"./IllegalArgumentException\");\n/**\n * This object extends LuminanceSource around an array of YUV data returned from the camera driver,\n * with the option to crop to a rectangle within the full data. This can be used to exclude\n * superfluous pixels around the perimeter and speed up decoding.\n *\n * It works for any pixel format where the Y channel is planar and appears first, including\n * YCbCr_420_SP and YCbCr_422_SP.\n *\n * @author dswitkin@google.com (Daniel Switkin)\n */\nvar PlanarYUVLuminanceSource = /** @class */function (_super) {\n  __extends(PlanarYUVLuminanceSource, _super);\n  function PlanarYUVLuminanceSource(yuvData, dataWidth /*int*/, dataHeight /*int*/, left /*int*/, top /*int*/, width /*int*/, height /*int*/, reverseHorizontal) {\n    var _this = _super.call(this, width, height) || this;\n    _this.yuvData = yuvData;\n    _this.dataWidth = dataWidth;\n    _this.dataHeight = dataHeight;\n    _this.left = left;\n    _this.top = top;\n    if (left + width > dataWidth || top + height > dataHeight) {\n      throw new IllegalArgumentException_1.default('Crop rectangle does not fit within image data.');\n    }\n    if (reverseHorizontal) {\n      _this.reverseHorizontal(width, height);\n    }\n    return _this;\n  }\n  /*@Override*/\n  PlanarYUVLuminanceSource.prototype.getRow = function (y /*int*/, row) {\n    if (y < 0 || y >= this.getHeight()) {\n      throw new IllegalArgumentException_1.default('Requested row is outside the image: ' + y);\n    }\n    var width = this.getWidth();\n    if (row === null || row === undefined || row.length < width) {\n      row = new Uint8ClampedArray(width);\n    }\n    var offset = (y + this.top) * this.dataWidth + this.left;\n    System_1.default.arraycopy(this.yuvData, offset, row, 0, width);\n    return row;\n  };\n  /*@Override*/\n  PlanarYUVLuminanceSource.prototype.getMatrix = function () {\n    var width = this.getWidth();\n    var height = this.getHeight();\n    // If the caller asks for the entire underlying image, save the copy and give them the\n    // original data. The docs specifically warn that result.length must be ignored.\n    if (width === this.dataWidth && height === this.dataHeight) {\n      return this.yuvData;\n    }\n    var area = width * height;\n    var matrix = new Uint8ClampedArray(area);\n    var inputOffset = this.top * this.dataWidth + this.left;\n    // If the width matches the full width of the underlying data, perform a single copy.\n    if (width === this.dataWidth) {\n      System_1.default.arraycopy(this.yuvData, inputOffset, matrix, 0, area);\n      return matrix;\n    }\n    // Otherwise copy one cropped row at a time.\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n      System_1.default.arraycopy(this.yuvData, inputOffset, matrix, outputOffset, width);\n      inputOffset += this.dataWidth;\n    }\n    return matrix;\n  };\n  /*@Override*/\n  PlanarYUVLuminanceSource.prototype.isCropSupported = function () {\n    return true;\n  };\n  /*@Override*/\n  PlanarYUVLuminanceSource.prototype.crop = function (left /*int*/, top /*int*/, width /*int*/, height /*int*/) {\n    return new PlanarYUVLuminanceSource(this.yuvData, this.dataWidth, this.dataHeight, this.left + left, this.top + top, width, height, false);\n  };\n  PlanarYUVLuminanceSource.prototype.renderThumbnail = function () {\n    var width = this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    var height = this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    var pixels = new Int32Array(width * height);\n    var yuv = this.yuvData;\n    var inputOffset = this.top * this.dataWidth + this.left;\n    for (var y = 0; y < height; y++) {\n      var outputOffset = y * width;\n      for (var x = 0; x < width; x++) {\n        var grey = yuv[inputOffset + x * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR] & 0xff;\n        pixels[outputOffset + x] = 0xFF000000 | grey * 0x00010101;\n      }\n      inputOffset += this.dataWidth * PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n    }\n    return pixels;\n  };\n  /**\n   * @return width of image from {@link #renderThumbnail()}\n   */\n  PlanarYUVLuminanceSource.prototype.getThumbnailWidth = function () {\n    return this.getWidth() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n  };\n  /**\n   * @return height of image from {@link #renderThumbnail()}\n   */\n  PlanarYUVLuminanceSource.prototype.getThumbnailHeight = function () {\n    return this.getHeight() / PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR;\n  };\n  PlanarYUVLuminanceSource.prototype.reverseHorizontal = function (width /*int*/, height /*int*/) {\n    var yuvData = this.yuvData;\n    for (var y = 0, rowStart = this.top * this.dataWidth + this.left; y < height; y++, rowStart += this.dataWidth) {\n      var middle = rowStart + width / 2;\n      for (var x1 = rowStart, x2 = rowStart + width - 1; x1 < middle; x1++, x2--) {\n        var temp = yuvData[x1];\n        yuvData[x1] = yuvData[x2];\n        yuvData[x2] = temp;\n      }\n    }\n  };\n  PlanarYUVLuminanceSource.prototype.invert = function () {\n    return new InvertedLuminanceSource_1.default(this);\n  };\n  PlanarYUVLuminanceSource.THUMBNAIL_SCALE_FACTOR = 2;\n  return PlanarYUVLuminanceSource;\n}(LuminanceSource_1.default);\nexports.default = PlanarYUVLuminanceSource;","map":{"version":3,"names":["System_1","require","LuminanceSource_1","InvertedLuminanceSource_1","IllegalArgumentException_1","PlanarYUVLuminanceSource","_super","__extends","yuvData","dataWidth","dataHeight","left","top","width","height","reverseHorizontal","_this","call","default","prototype","getRow","y","row","getHeight","getWidth","undefined","length","Uint8ClampedArray","offset","arraycopy","getMatrix","area","matrix","inputOffset","outputOffset","isCropSupported","crop","renderThumbnail","THUMBNAIL_SCALE_FACTOR","pixels","Int32Array","yuv","x","grey","getThumbnailWidth","getThumbnailHeight","rowStart","middle","x1","x2","temp","invert"],"sources":["../../src/core/PlanarYUVLuminanceSource.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script"}